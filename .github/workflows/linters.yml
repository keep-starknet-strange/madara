---
name: Task - Linters

on:
  workflow_dispatch:

jobs:
  spell-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: codespell-project/actions-codespell@v1
        with:
          check_filenames: true
          check_hidden: true
          ignore_words_file: ./.codespellignore
          skip: Cargo.lock,package-lock.json,target,yarn.lock,.git,resources

  prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run prettier
        run: |-
          npx prettier --check .

  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ">=20"
          cache: "npm"
          cache-dependency-path: ./tests/package-lock.json
      - name: Install
        run: |-
          cd tests
          npm install
      - name: Run eslint
        run: |-
          cd tests
          npx eslint .

  cargo-lint:
    runs-on: ubuntu-latest-16-cores
    steps:
      - uses: actions/checkout@v3
      - name: Setup rust toolchain
        run: rustup show
      - name: Set-Up
        run: |
          sudo apt-get update
          sudo apt-get install -y clang llvm libudev-dev protobuf-compiler
      - uses: Swatinem/rust-cache@v2
      - name: Format and clippy
        run: |
          cargo fmt --all -- --check
          cargo clippy --all -- -D warnings
          cargo clippy --tests -- -D warnings

  markdown-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: avto-dev/markdown-lint@v1
        with:
          config: "./.markdownlint.json"
          args: "."
          ignore: "./target"

  toml-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout toml files
        uses: actions/checkout@v3
      - name: Run toml check
        run: npx @taplo/cli fmt --config ./taplo/taplo.toml --check
