name: Check, Build & Tests

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: dev/self-hosted-runner
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  lint:
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v3
      - name: Format and clippy
        run: |
          . "$HOME/.cargo/env"
          echo $PATH
          cargo fmt --all -- --check
          cargo clippy --all -- -D warnings
          cargo clippy --tests -- -D warnings

  coverage:
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v3
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Coverage
        run: |
          . "$HOME/.cargo/env"
          cargo llvm-cov --codecov --output-path codecov.json
      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: codecov.json
          fail_ci_if_error: true

  # integration-tests:
  #   runs-on: [self-hosted, madara]
  #   env:
  #     BINARY_PATH: ../target/debug/madara
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ">=20"
  #         cache: "npm"
  #         cache-dependency-path: ./tests/package-lock.json
  #     - name: Install
  #       run: |-
  #         cd tests
  #         npm install
  #     - name: Setup rust toolchain
  #       run: rustup show
  #     - name: Set-Up
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y clang llvm libudev-dev protobuf-compiler
  #     - uses: Swatinem/rust-cache@v2
  #     - run: cargo build --workspace
  #     - name: Run test
  #       run: |-
  #         cd tests
  #         npm run test
