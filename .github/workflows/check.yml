name: Check Set-Up & Build

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          profile: minimal
          target: wasm32-unknown-unknown
      - name: Set-Up
        run: >
          sudo apt-get update && sudo apt-get install -y 
          clang llvm libudev-dev protobuf-compiler
      - uses: Swatinem/rust-cache@v2
      - name: Check Build and run tests
        run: |
          SKIP_WASM_BUILD=1 cargo check --release
          cargo test --all

  bench:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          profile: minimal
          target: wasm32-unknown-unknown
      - name: Set-Up
        run: >
          sudo apt-get update && sudo apt-get install -y 
          clang llvm libudev-dev protobuf-compiler
      - uses: Swatinem/rust-cache@v2
      - name: Check Build for Benchmarking
        run: >
          pushd node &&
          cargo check --features=runtime-benchmarks --release
