[package]
name = "pallet-starknet"
version = "0.1.0-alpha"
description = "FRAME pallet to execute Starknet contracts."
authors = ["Abdelhamid Bakhta <@abdelhamidbakhta>"]
homepage = "https://github.com/keep-starknet-strange/madara"
edition = "2021"
license = "MIT"
publish = false
repository = "https://github.com/keep-starknet-strange/madara"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
# Kaiohsin pallets
# Madara primitives
mp-starknet = { workspace = true, default-features = false }
mp-digest-log = { workspace = true, default-features = false }

starknet-crypto = { workspace = true, default-features = false, features = [
	"alloc",
] }
blockifier = { workspace = true, default-features = false, features = [
	"testing",
] }
starknet_api = { workspace = true, default-features = false }

# Substrate frame
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-benchmarking = { workspace = true, optional = true }
# Substrate primitives
sp-core = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-api = { workspace = true }
sp-std = { workspace = true }
pallet-transaction-payment = { workspace = true }
# Frame pallets

# Other third party dependencies
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
scale-codec = { package = "parity-scale-codec", workspace = true, features = [
	"derive",
] }
scale-info = { workspace = true, features = ["derive"] }
log = { workspace = true }
hex = { workspace = true }

[dev-dependencies]
pallet-timestamp = { workspace = true }
pretty_assertions = "1.3.0"
test-case = "3.1.0"
lazy_static = "1.4.0"
hexlit = "0.5.5"

[features]
default = ["std"]
std = [
	# Substrate
	"frame-support/std",
	"frame-system/std",
	"sp-io/std",
	"sp-runtime/std",
	"frame-benchmarking?/std",
	"scale-info/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment/std",
	# Madara
	"mp-starknet/std",
	# Starknet
	"starknet-crypto/std",
	"blockifier/std",
	# Other third party dependencies
	"scale-codec/std",
]
runtime-benchmarks = ["frame-benchmarking/runtime-benchmarks"]
try-runtime = ["frame-support/try-runtime"]
