[package]
name = "pallet-starknet"
version = "0.1.0-alpha"
authors = ["Abdelhamid Bakhta <@abdelhamidbakhta>"]
edition = "2021"
homepage = "https://github.com/keep-starknet-strange/madara"
license = "MIT"
publish = false
repository = "https://github.com/keep-starknet-strange/madara"
description = "FRAME pallet to execute Starknet contracts."

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
# Madara primitives
mp-digest-log = { workspace = true }
mp-starknet = { workspace = true, default-features = false }

blockifier = { workspace = true, default-features = false, features = ["testing"] }
starknet-crypto = { workspace = true, default-features = false, features = ["alloc"] }
starknet_api = { workspace = true, default-features = false }

# Substrate frame
frame-benchmarking = { workspace = true, optional = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
sp-api = { workspace = true }
# Substrate primitives
sp-core = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-std = { workspace = true }
# Frame pallets

# Other third party dependencies
hex = { workspace = true }
log = { workspace = true }
scale-codec = { package = "parity-scale-codec", workspace = true, features = ["derive"] }
scale-info = { workspace = true, features = ["derive"] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }

[dev-dependencies]
hexlit = "0.5.5"
lazy_static = "1.4.0"
pallet-timestamp = { workspace = true }
pretty_assertions = { workspace = true }
starknet-core = { workspace = true, default-features = false }
test-case = "3.1.0"

[features]
default = ["std"]
std = [
  # Substrate
  "frame-support/std",
  "frame-system/std",
  "sp-io/std",
  "sp-runtime/std",
  "frame-benchmarking?/std",
  "scale-info/std",
  "pallet-timestamp/std",
  # Madara
  "mp-starknet/std",
  "mp-digest-log/std",
  # Starknet
  "starknet-crypto/std",
  "blockifier/std",
  # Other third party dependencies
  "scale-codec/std",
]
runtime-benchmarks = ["frame-benchmarking/runtime-benchmarks"]
try-runtime = ["frame-support/try-runtime"]
