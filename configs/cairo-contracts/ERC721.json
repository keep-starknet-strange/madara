{
  "abi": [
    {
      "members": [
        {
          "name": "low",
          "offset": 0,
          "type": "felt"
        },
        {
          "name": "high",
          "offset": 1,
          "type": "felt"
        }
      ],
      "name": "Uint256",
      "size": 2,
      "type": "struct"
    },
    {
      "data": [
        {
          "name": "previousOwner",
          "type": "felt"
        },
        {
          "name": "newOwner",
          "type": "felt"
        }
      ],
      "keys": [],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "data": [
        {
          "name": "from_",
          "type": "felt"
        },
        {
          "name": "to",
          "type": "felt"
        },
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "keys": [],
      "name": "Transfer",
      "type": "event"
    },
    {
      "data": [
        {
          "name": "owner",
          "type": "felt"
        },
        {
          "name": "approved",
          "type": "felt"
        },
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "keys": [],
      "name": "Approval",
      "type": "event"
    },
    {
      "data": [
        {
          "name": "owner",
          "type": "felt"
        },
        {
          "name": "operator",
          "type": "felt"
        },
        {
          "name": "approved",
          "type": "felt"
        }
      ],
      "keys": [],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "felt"
        },
        {
          "name": "symbol",
          "type": "felt"
        },
        {
          "name": "owner",
          "type": "felt"
        }
      ],
      "name": "constructor",
      "outputs": [],
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "name": "interfaceId",
          "type": "felt"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "success",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "name",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "symbol",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "owner",
          "type": "felt"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "Uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "owner",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "approved",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "owner",
          "type": "felt"
        },
        {
          "name": "operator",
          "type": "felt"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "approved",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "tokenURI",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "owner",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "to",
          "type": "felt"
        },
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "operator",
          "type": "felt"
        },
        {
          "name": "approved",
          "type": "felt"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "from_",
          "type": "felt"
        },
        {
          "name": "to",
          "type": "felt"
        },
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "from_",
          "type": "felt"
        },
        {
          "name": "to",
          "type": "felt"
        },
        {
          "name": "tokenId",
          "type": "Uint256"
        },
        {
          "name": "data_len",
          "type": "felt"
        },
        {
          "name": "data",
          "type": "felt*"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "to",
          "type": "felt"
        },
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "tokenId",
          "type": "Uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "tokenId",
          "type": "Uint256"
        },
        {
          "name": "tokenURI",
          "type": "felt"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "newOwner",
          "type": "felt"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "type": "function"
    }
  ],
  "entry_points_by_type": {
    "CONSTRUCTOR": [
      {
        "offset": "0x691",
        "selector": "0x28ffe4ff0f226a9107253e17a904099aa4f63a02a5621de0576e5aa71bc5194"
      }
    ],
    "EXTERNAL": [
      {
        "offset": "0x737",
        "selector": "0x2962ba17806af798afa6eaf4aa8c93a9fb60a3e305045b6eea33435086cae9"
      },
      {
        "offset": "0x884",
        "selector": "0x3e8cfd4725c1e28fa4a6e3e468b4fcf75367166b850ac5f04e33ec843e82c1"
      },
      {
        "offset": "0x816",
        "selector": "0x41b033f4a31df8067c24d1e9b550a2ce75fd4a29e1147af9752174f0e6cb20"
      },
      {
        "offset": "0x75b",
        "selector": "0xb180e2fe9f14914416216da76338ac0beb980443725c802af615f8431fdb1e"
      },
      {
        "offset": "0x8d8",
        "selector": "0xd5d33d590e6660853069b37a2aea67c6fdaa0268626bc760350b590490feb5"
      },
      {
        "offset": "0x7a3",
        "selector": "0x12a7823b0c6bee58f8c694888f32f862c6584caa8afa0242de046d298ba684d"
      },
      {
        "offset": "0x8c0",
        "selector": "0x14a390f291e2e1f29874769efdef47ddad94d76f77ff516fad206a385e8995f"
      },
      {
        "offset": "0x837",
        "selector": "0x19d59d013d4aa1a8b1ce4c8299086f070733b453c02d0dc46e735edc04d6444"
      },
      {
        "offset": "0x7c5",
        "selector": "0x2016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c0"
      },
      {
        "offset": "0x6f4",
        "selector": "0x216b05c387bab9ac31918a3e61672f4618601f3c598a2f3f2710f37053e1ea4"
      },
      {
        "offset": "0x7dd",
        "selector": "0x219209e083275171774dab1df80982e9df2096516f06319c5c6d71ae0a8480c"
      },
      {
        "offset": "0x77f",
        "selector": "0x21cdf9aedfed41bc4485ae779fda471feca12075d9127a0fc70ac6b3b3d9c30"
      },
      {
        "offset": "0x6b5",
        "selector": "0x29e211664c0b63c79638fbea474206ca74016b3e9a3dc4f9ac300ffd8bdf2cd"
      },
      {
        "offset": "0x7f9",
        "selector": "0x2d4c8ea4c8fb9f571d1f6f9b7692fff8e5ceaf73b1df98e7da8c1109b39ae9a"
      },
      {
        "offset": "0x714",
        "selector": "0x2e4263afad30923c891518314c3c95dbe830a16874e8abc5777a9a20b54c76e"
      },
      {
        "offset": "0x864",
        "selector": "0x2f0b3c5710379609eb5495f1ecd348cb28167711b73609fe565a72734550354"
      },
      {
        "offset": "0x6d6",
        "selector": "0x361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60"
      },
      {
        "offset": "0x8a5",
        "selector": "0x3af14cf9125a7e603f469fb569173e11e14e3d05e809728bc019ab5bde8dfb1"
      }
    ],
    "L1_HANDLER": []
  },
  "program": {
    "attributes": [
      {
        "accessible_scopes": [
          "openzeppelin.access.ownable.library",
          "openzeppelin.access.ownable.library.Ownable",
          "openzeppelin.access.ownable.library.Ownable.assert_only_owner"
        ],
        "end_pc": 383,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 29,
            "offset": 6
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 381,
        "value": "Ownable: caller is the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.access.ownable.library",
          "openzeppelin.access.ownable.library.Ownable",
          "openzeppelin.access.ownable.library.Ownable.assert_only_owner"
        ],
        "end_pc": 384,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 29,
            "offset": 8
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 383,
        "value": "Ownable: caller is not the owner"
      },
      {
        "accessible_scopes": [
          "openzeppelin.access.ownable.library",
          "openzeppelin.access.ownable.library.Ownable",
          "openzeppelin.access.ownable.library.Ownable.transfer_ownership"
        ],
        "end_pc": 397,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 31,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 394,
        "value": "Ownable: new owner is the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.introspection.erc165.library",
          "openzeppelin.introspection.erc165.library.ERC165",
          "openzeppelin.introspection.erc165.library.ERC165.register_interface"
        ],
        "end_pc": 500,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 42,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 495,
        "value": "ERC165: invalid interface id"
      },
      {
        "accessible_scopes": [
          "openzeppelin.security.safemath.library",
          "openzeppelin.security.safemath.library.SafeUint256",
          "openzeppelin.security.safemath.library.SafeUint256.add"
        ],
        "end_pc": 549,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 44,
            "offset": 35
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 547,
        "value": "SafeUint256: addition overflow"
      },
      {
        "accessible_scopes": [
          "openzeppelin.security.safemath.library",
          "openzeppelin.security.safemath.library.SafeUint256",
          "openzeppelin.security.safemath.library.SafeUint256.sub_le"
        ],
        "end_pc": 572,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 45,
            "offset": 60
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 570,
        "value": "SafeUint256: subtraction overflow"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.balance_of"
        ],
        "end_pc": 1026,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 75,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1023,
        "value": "ERC721: balance query for the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.owner_of"
        ],
        "end_pc": 1038,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 76,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1033,
        "value": "ERC721: token_id is not a valid Uint256"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.owner_of"
        ],
        "end_pc": 1047,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 76,
            "offset": 74
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1045,
        "value": "ERC721: owner query for nonexistent token"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.get_approved"
        ],
        "end_pc": 1057,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 77,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1052,
        "value": "ERC721: token_id is not a valid Uint256"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.get_approved"
        ],
        "end_pc": 1066,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 78,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1064,
        "value": "ERC721: approved query for nonexistent token"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.token_uri"
        ],
        "end_pc": 1091,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 81,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1089,
        "value": "ERC721_Metadata: URI query for nonexistent token"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.approve"
        ],
        "end_pc": 1104,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 82,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_mesage",
        "start_pc": 1099,
        "value": "ERC721: token_id is not a valid Uint256"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.approve"
        ],
        "end_pc": 1109,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 82,
            "offset": 12
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1107,
        "value": "ERC721: cannot approve from the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.approve"
        ],
        "end_pc": 1119,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 82,
            "offset": 82
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1116,
        "value": "ERC721: approval to current owner"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.approve"
        ],
        "end_pc": 1143,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 82,
            "offset": 155
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1141,
        "value": "ERC721: approve caller is not owner nor approved for all"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.set_approval_for_all"
        ],
        "end_pc": 1161,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 85,
            "offset": 6
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1158,
        "value": "ERC721: either the caller or operator is the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.set_approval_for_all"
        ],
        "end_pc": 1165,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 85,
            "offset": 9
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1161,
        "value": "ERC721: approve to caller"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.set_approval_for_all"
        ],
        "end_pc": 1171,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 85,
            "offset": 14
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1165,
        "value": "ERC721: approved is not a Cairo boolean"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.transfer_from"
        ],
        "end_pc": 1197,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 86,
            "offset": 1
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1192,
        "value": "ERC721: token_id is not a valid Uint256"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.transfer_from"
        ],
        "end_pc": 1212,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 87,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1209,
        "value": "ERC721: either is not approved or the caller is the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.safe_transfer_from"
        ],
        "end_pc": 1232,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 89,
            "offset": 1
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1227,
        "value": "ERC721: token_id is not a valid Uint256"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.safe_transfer_from"
        ],
        "end_pc": 1247,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 90,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1244,
        "value": "ERC721: either is not approved or the caller is the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721.assert_only_token_owner"
        ],
        "end_pc": 1278,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 92,
            "offset": 99
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1277,
        "value": "ERC721: caller is not the token owner"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721._is_approved_or_owner"
        ],
        "end_pc": 1293,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 94,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1291,
        "value": "ERC721: token id does not exist"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721._transfer"
        ],
        "end_pc": 1402,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 98,
            "offset": 87
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1401,
        "value": "ERC721: transfer from incorrect owner"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721._transfer"
        ],
        "end_pc": 1405,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 98,
            "offset": 87
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1402,
        "value": "ERC721: cannot transfer to the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721._safe_transfer"
        ],
        "end_pc": 1484,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 100,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1482,
        "value": "ERC721: transfer to non ERC721Receiver implementer"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721._mint"
        ],
        "end_pc": 1493,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 101,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1488,
        "value": "ERC721: token_id is not a valid Uint256"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721._mint"
        ],
        "end_pc": 1496,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 101,
            "offset": 6
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1493,
        "value": "ERC721: cannot mint to the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721._mint"
        ],
        "end_pc": 1505,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 101,
            "offset": 88
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1503,
        "value": "ERC721: token already minted"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721._burn"
        ],
        "end_pc": 1550,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 102,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1545,
        "value": "ERC721: token_id is not a valid Uint256"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library.ERC721",
          "openzeppelin.token.erc721.library.ERC721._set_token_uri"
        ],
        "end_pc": 1616,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 103,
            "offset": 85
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1614,
        "value": "ERC721_Metadata: set token URI for nonexistent token"
      },
      {
        "accessible_scopes": [
          "openzeppelin.token.erc721.library",
          "openzeppelin.token.erc721.library._check_onERC721Received"
        ],
        "end_pc": 1652,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 105,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1650,
        "value": "ERC721: transfer to non ERC721Receiver implementer"
      }
    ],
    "builtins": ["pedersen", "range_check"],
    "compiler_version": "0.11.2",
    "data": [
      "0x40780017fff7fff",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x400380007ffb7ffc",
      "0x400380017ffb7ffd",
      "0x482680017ffb8000",
      "0x3",
      "0x480280027ffb8000",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffd",
      "0x3",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480080007fff8000",
      "0x400080007ffd7fff",
      "0x482480017ffd8001",
      "0x1",
      "0x482480017ffd8001",
      "0x1",
      "0xa0680017fff7ffe",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
      "0x402a7ffc7ffd7fff",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x43616c6c436f6e7472616374",
      "0x400280007ff97fff",
      "0x400380017ff97ffa",
      "0x400380027ff97ffb",
      "0x400380037ff97ffc",
      "0x400380047ff97ffd",
      "0x482680017ff98000",
      "0x7",
      "0x480280057ff98000",
      "0x480280067ff98000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x47657443616c6c657241646472657373",
      "0x400280007ffd7fff",
      "0x482680017ffd8000",
      "0x2",
      "0x480280017ffd8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x53746f7261676552656164",
      "0x400280007ffc7fff",
      "0x400380017ffc7ffd",
      "0x482680017ffc8000",
      "0x3",
      "0x480280027ffc8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x53746f726167655772697465",
      "0x400280007ffb7fff",
      "0x400380017ffb7ffc",
      "0x400380027ffb7ffd",
      "0x482680017ffb8000",
      "0x3",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x456d69744576656e74",
      "0x400280007ff97fff",
      "0x400380017ff97ffa",
      "0x400380027ff97ffb",
      "0x400380037ff97ffc",
      "0x400380047ff97ffd",
      "0x482680017ff98000",
      "0x5",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffd",
      "0x4",
      "0x400780017fff7ffd",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x48297ffd80007ffc",
      "0x20680017fff7fff",
      "0x4",
      "0x402780017ffc7ffc",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x3ffffffffffffffffffffffffffffff",
      "0x480280017ffc8000",
      "0x48307fff80007ffe",
      "0x400280027ffc7fff",
      "0x480280017ffc8000",
      "0x484480017fff8000",
      "0x100000000000000000000000000000000",
      "0x480280007ffc8000",
      "0x40317fff7ffe7ffd",
      "0x482680017ffc8000",
      "0x3",
      "0x208b7fff7fff7ffe",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x484480017fff8000",
      "0x2aaaaaaaaaaaab05555555555555556",
      "0x48307fff7ffd8000",
      "0x480280027ffb8000",
      "0x480280037ffb8000",
      "0x484480017fff8000",
      "0x4000000000000088000000000000001",
      "0x48307fff7ffd8000",
      "0xa0680017fff8000",
      "0xe",
      "0x480680017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x48287ffc80007fff",
      "0x40307ffc7ff87fff",
      "0x48297ffd80007ffc",
      "0x482680017ffd8000",
      "0x1",
      "0x48507fff7ffe8000",
      "0x40507ff97ff57fff",
      "0x482680017ffb8000",
      "0x4",
      "0x208b7fff7fff7ffe",
      "0xa0680017fff8000",
      "0xc",
      "0x480680017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x48287ffd80007fff",
      "0x48327fff7ffc8000",
      "0x40307ffa7ff67fff",
      "0x48527ffe7ffc8000",
      "0x40507ff97ff57fff",
      "0x482680017ffb8000",
      "0x4",
      "0x208b7fff7fff7ffe",
      "0x40317ffd7ff97ffd",
      "0x48297ffc80007ffd",
      "0x48527fff7ffc8000",
      "0x40507ffb7ff77fff",
      "0x40780017fff7fff",
      "0x2",
      "0x482680017ffb8000",
      "0x4",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x20680017fff7fff",
      "0x10",
      "0x480a7ffc7fff8000",
      "0x482680017ffd8000",
      "0x11000000000000000000000000000000000000000000000101",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc0",
      "0x480680017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x48127ffe7fff8000",
      "0x48287ffd80007ffe",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffba",
      "0x482680017ffd8000",
      "0x11000000000000000000000000000000000000000000000101",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x20680017fff7fff",
      "0xc",
      "0x40780017fff7fff",
      "0xa",
      "0x480680017fff8000",
      "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff",
      "0x480a7ffc7fff8000",
      "0x48287ffd80007ffe",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffab",
      "0x10780017fff7fff",
      "0x8",
      "0x40780017fff7fff",
      "0xb",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa3",
      "0x480a7ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0xa0680017fff8000",
      "0xa",
      "0x400380007ffc7ffd",
      "0x40780017fff7fff",
      "0x14",
      "0x482680017ffc8000",
      "0x1",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0xa0680017fff8000",
      "0xe",
      "0x484680017ffd8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x482480017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x400280007ffc7fff",
      "0x40780017fff7fff",
      "0x11",
      "0x482680017ffc8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480680017fff8000",
      "0x100000000000000000000000000000000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff90",
      "0x480680017fff8000",
      "0x0",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x48297ffc80007ffd",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
      "0x208b7fff7fff7ffe",
      "0x400380007ffb7ffc",
      "0x400380017ffb7ffd",
      "0x482680017ffb8000",
      "0x2",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x4",
      "0x404b800280028002",
      "0x404b800380038003",
      "0x482a7ffc7ffa8000",
      "0x4846800180028000",
      "0x100000000000000000000000000000000",
      "0x40327fff80007ffe",
      "0x482a7ffd7ffb8000",
      "0x482880027fff8000",
      "0x4846800180038000",
      "0x100000000000000000000000000000000",
      "0x40327fff80017ffe",
      "0x480a7ff97fff8000",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x480a80037fff8000",
      "0x208b7fff7fff7ffe",
      "0x48297ffd80007ffb",
      "0x20680017fff7fff",
      "0x9",
      "0x480a7ff97fff8000",
      "0x482680017ffa8000",
      "0x1",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffda",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x482680017ffb8000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
      "0x480680017fff8000",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48307ffd80007ffe",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0xffffffffffffffffffffffffffffffff",
      "0x480680017fff8000",
      "0xffffffffffffffffffffffffffffffff",
      "0x480a7ffb7fff8000",
      "0x48287ffc80007ffd",
      "0x48287ffd80007ffd",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbd",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
      "0x48127ffd7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffad",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec8",
      "0x40137fff7fff8000",
      "0x480680017fff8000",
      "0x1390fd803c110ac71730ece1decfc34eb1d0088e295d4f1b125dda1e0c5b9ff",
      "0x4002800080007fff",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec2",
      "0x40137fff7fff8001",
      "0x4003800080017ffc",
      "0x4003800180017ffd",
      "0x4826800180018000",
      "0x2",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x480a80007fff8000",
      "0x4828800180007ffc",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffef0",
      "0x480a7ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x2bd557f4ba80dfabefabe45e9b2dd35db1b9a78e96c72bc2b69b655ce47a930",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed1",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffecb",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x2e",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0xc",
      "0x48127ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeaa",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec9",
      "0x40127ffd7fff7ff7",
      "0x48127ffc7fff8000",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcf",
      "0x208b7fff7fff7ffe",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffebb",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0xd",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x3",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffba",
      "0x48127ffd7fff8000",
      "0x48127ffe7fff8000",
      "0x48127fe77fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff89",
      "0x48127ffe7fff8000",
      "0x48127fe37fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480680017fff8000",
      "0x10f6bdc8f69644775581b157f06334cb94ae302da4f6d09656c9a31f092cff6",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe4b",
      "0x480a7ffc7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffece",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe62",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5b",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffe00365a",
      "0x20680017fff7fff",
      "0x8",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd8",
      "0x208b7fff7fff7ffe",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0xffffffff",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe59",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd8",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe02",
      "0x40137fff7fff8000",
      "0x4003800080007ffd",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480680017fff8000",
      "0x29e211664c0b63c79638fbea474206ca74016b3e9a3dc4f9ac300ffd8bdf2cd",
      "0x4828800080007ffc",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe0e",
      "0x482480017fff8000",
      "0x1",
      "0x40307ffe7ffd7fff",
      "0x48127ffc7fff8000",
      "0x480a7ffb7fff8000",
      "0x480080007ffc8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec2",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffebe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffebd",
      "0x400680017fff7fff",
      "0x0",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x0",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeab",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea7",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffecd",
      "0x400680017fff7fff",
      "0x1",
      "0x48127ffe7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee7",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x3",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdbb",
      "0x40137fff7fff8000",
      "0x4003800080007ff8",
      "0x4003800180007ff9",
      "0x4003800280007ffa",
      "0x4003800380007ffb",
      "0x4003800480007ffc",
      "0x400380007ff67ffc",
      "0x402780017ff68001",
      "0x1",
      "0x4826800180008000",
      "0x5",
      "0x40297ffc7fff8002",
      "0x4826800180008000",
      "0x5",
      "0x480a7ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdb2",
      "0x480a7ff57fff8000",
      "0x480a7ff77fff8000",
      "0x480680017fff8000",
      "0xfa119a8fafc6f1a02deb36fe5efbcc4929ef2021e50cf1cb6d1a780ccd009b",
      "0x4829800080008002",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdb9",
      "0x482480017fff8000",
      "0x1",
      "0x40307ffe7ffd7fff",
      "0x48127ffc7fff8000",
      "0x480a80017fff8000",
      "0x480080007ffc8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd96",
      "0x40137fff7fff8000",
      "0x480680017fff8000",
      "0x99cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9",
      "0x4002800080007fff",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd90",
      "0x40137fff7fff8001",
      "0x4003800080017ffa",
      "0x4003800180017ffb",
      "0x4003800280017ffc",
      "0x4003800380017ffd",
      "0x4826800180018000",
      "0x4",
      "0x480a7ff87fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x480a80007fff8000",
      "0x4828800180007ffc",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdbc",
      "0x480a7ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd7b",
      "0x40137fff7fff8000",
      "0x480680017fff8000",
      "0x134692b230b9e1ffa39098904722134159652b09c5bc41d88d6698779d228ff",
      "0x4002800080007fff",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd75",
      "0x40137fff7fff8001",
      "0x4003800080017ffa",
      "0x4003800180017ffb",
      "0x4003800280017ffc",
      "0x4003800380017ffd",
      "0x4826800180018000",
      "0x4",
      "0x480a7ff87fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x480a80007fff8000",
      "0x4828800180007ffc",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffda1",
      "0x480a7ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd60",
      "0x40137fff7fff8000",
      "0x480680017fff8000",
      "0x6ad9ed7b6318f1bcffefe19df9aeb40d22c36bed567e1925a5ccde0536edd",
      "0x4002800080007fff",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd5a",
      "0x40137fff7fff8001",
      "0x4003800080017ffb",
      "0x4003800180017ffc",
      "0x4003800280017ffd",
      "0x4826800180018000",
      "0x3",
      "0x480a7ff97fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x480a80007fff8000",
      "0x4828800180007ffc",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd87",
      "0x480a7ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x3a762f04043ed52ed42b61e4ad2e367163f5a928ef94f71121e68d78b8a00df",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd68",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd62",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x144d444467c1a7848e62c72fd678f9225602bf41005c66940ee2373705d90a2",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd4a",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd44",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x19eba13c2ffadbed69e7a3ff4399447db5f0f1deff605072b123c3d33e5e300",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd0b",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd08",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd8b",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd1e",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
      "0x480a7ff87fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd16",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480680017fff8000",
      "0x3bbfaec36427c06f699125e4eedffd9148420983ff94e5284a9087e22050b79",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcdd",
      "0x480a7ffc7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd60",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcf4",
      "0x48127ffe7fff8000",
      "0x482480017ff78000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcef",
      "0x48127ffe7fff8000",
      "0x48127fee7fff8000",
      "0x48127fee7fff8000",
      "0x48127ff57fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
      "0x480a7ff87fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffce7",
      "0x482480017ff88000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffce2",
      "0x48127ff07fff8000",
      "0x48127ff07fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x2618225f6ac4a00b9635ed0e036ea1db17cf353e7ad948e882dbbca50565fbd",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca9",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca6",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd29",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcbc",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
      "0x480a7ff87fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb4",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x350efce99c55a2fbf8c09cde498fd24d686f21a900621778cd59ed10f4ae843",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc7b",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc78",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcfb",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc8e",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
      "0x480a7ff87fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc86",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x1c87484b935c893d53d087ca6e0d4d7bcf1a90e5f4118b67a2c3df896c16cd8",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc4d",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc4a",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffccd",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc60",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
      "0x480a7ff87fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc58",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee7",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff02",
      "0x480680017fff8000",
      "0x80ac58cd",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe04",
      "0x480680017fff8000",
      "0x5b5e139f",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe00",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec9",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee1",
      "0x208b7fff7fff7ffe",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc46",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff2c",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffccd",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffef4",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc31",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcba",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x11f",
      "0x400680017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff3a",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff60",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x106",
      "0x400680017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7d",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc8b",
      "0x480a7ff97fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbd4",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbf3",
      "0x48127ffc7fff8000",
      "0x480a7ff87fff8000",
      "0x48127ff57fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffead",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbee",
      "0x48307ffb80007fb5",
      "0x20680017fff7fff",
      "0xe",
      "0x48127ff77fff8000",
      "0x48127ff77fff8000",
      "0x48127ff77fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0xf2",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x48127ff77fff8000",
      "0x48127ff77fff8000",
      "0x48127ff77fff8000",
      "0x48127ff77fff8000",
      "0x48127fb07fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff24",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbd1",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0xdd",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffba1",
      "0x48487ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbbf",
      "0x48127ffc7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbc0",
      "0x480680017fff8000",
      "0x1",
      "0x48287ffd80007fff",
      "0x480680017fff8000",
      "0x0",
      "0x40527ffe7ffd7fff",
      "0x48127ff37fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x48127ff17fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff0d",
      "0x48127ffd7fff8000",
      "0x48127ffe7fff8000",
      "0x48127faf7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe00",
      "0x48127ffe7fff8000",
      "0x48127fe27fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x480a7ff97fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc2e",
      "0x480a7ff87fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb77",
      "0x40137fff7fff8000",
      "0x480a7ff77fff8000",
      "0x48127ffd7fff8000",
      "0x48127ff77fff8000",
      "0x480a80007fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x4b",
      "0x48527fff80008000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb8c",
      "0x48127ffa7fff8000",
      "0x48127ff87fff8000",
      "0x48127ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0xaf",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x480a7ff77fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc0b",
      "0x480a7ff67fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb54",
      "0x40137fff7fff8000",
      "0x480a7ff57fff8000",
      "0x48127ffd7fff8000",
      "0x48127ff77fff8000",
      "0x480a80007fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x28",
      "0x48527fff80008000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb69",
      "0x48127ffa7fff8000",
      "0x48127ff87fff8000",
      "0x48127ff97fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0xd1",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbe8",
      "0x480a7ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb31",
      "0x48127ffe7fff8000",
      "0x480a7ff97fff8000",
      "0x48127ff77fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff0f",
      "0x40127fff7fff7fa8",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x480a7ff97fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x3c",
      "0x400680017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffef8",
      "0x40137fff7fff8000",
      "0x48297ffb80008000",
      "0x20680017fff7fff",
      "0x8",
      "0x48127ffc7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffb7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffefa",
      "0x48287ffb80007fff",
      "0x20680017fff7fff",
      "0x8",
      "0x48127ffc7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffb7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480a80007fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff00",
      "0x482480017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x20680017fff7fff",
      "0x8",
      "0x48127ffc7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffb7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x48127ffc7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffb7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdbd",
      "0x20680017fff7fff",
      "0x8",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x208b7fff7fff7ffe",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe18",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea6",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd19",
      "0x48127ffe7fff8000",
      "0x48127fe07fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe93",
      "0x400a7ffa7fff7fff",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffacb",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd7",
      "0x480a7ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdab",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc9d",
      "0x48127f707fff8000",
      "0x48127f707fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdb1",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd9a",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc77",
      "0x48127fd17fff8000",
      "0x48127fd17fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffb7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffda0",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd6b",
      "0x48127ffd7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb7",
      "0x48127ffe7fff8000",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff57fff8000",
      "0x480a7ff67fff8000",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb3",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x91",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa7c",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb06",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa70",
      "0x480a7ff97fff8000",
      "0x480a7ff87fff8000",
      "0x48127ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff69",
      "0x400680017fff7fff",
      "0x0",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd4d",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc2a",
      "0x48127fd17fff8000",
      "0x48127fd17fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffb7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd53",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd1e",
      "0x48127ffd7fff8000",
      "0x48127ffe7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc69",
      "0x48127fe27fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x0",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffacd",
      "0x480a7ffa7fff8000",
      "0x480a7ff97fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdf7",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff3f",
      "0x48127f417fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd13",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc05",
      "0x48127f707fff8000",
      "0x48127f707fff8000",
      "0x48127ffb7fff8000",
      "0x48127e717fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd19",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffce3",
      "0x48127ffd7fff8000",
      "0x48127ffe7fff8000",
      "0x48127def7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc2e",
      "0x48127fe27fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa94",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffefa",
      "0x400680017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd7e",
      "0x208b7fff7fff7ffe",
      "0x480a7ff57fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9cb",
      "0x48127ffe7fff8000",
      "0x480a7ff77fff8000",
      "0x480a7ff97fff8000",
      "0x480680017fff8000",
      "0x150b7a02",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb9d",
      "0x482480017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x20680017fff7fff",
      "0x15",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ff97fff8000",
      "0x48127fe17fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbd5",
      "0x400680017fff7fff",
      "0x150b7a02",
      "0x48127ffd7fff8000",
      "0x480a7ff67fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ff97fff8000",
      "0x480680017fff8000",
      "0xa66bd575",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb7f",
      "0x48127ffd7fff8000",
      "0x480a7ff67fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd57",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffae1",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x3",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb36",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd2a",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd12",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcf9",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffb",
      "0x4003800180007ffc",
      "0x4826800180008000",
      "0x2",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
      "0x48127ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x48127ff37fff8000",
      "0x48127ff37fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcdf",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcce",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcc0",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca4",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe8",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9cc",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc72",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x3",
      "0x402a7ffd7ffc7fff",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc8e",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc94",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x4",
      "0x402a7ffd7ffc7fff",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x480280037ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff57fff8000",
      "0x480a7ff67fff8000",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc96",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280047ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x5",
      "0x480280047ffd8000",
      "0x48307fff7ffe8000",
      "0x402a7ffd7ffc7fff",
      "0x480280027ffb8000",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x482480017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x480280037ffd8000",
      "0x480280047ffd8000",
      "0x482680017ffd8000",
      "0x5",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe1",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff91d",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd70",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x3",
      "0x402a7ffd7ffc7fff",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc72",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd87",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8dc",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffda4",
      "0x48127ffe7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x3",
      "0x402a7ffd7ffc7fff",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffea",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8ce",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff3",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff8c2",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff7",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe"
    ],
    "debug_info": null,
    "hints": {
      "0": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.alloc",
            "starkware.cairo.common.alloc.alloc"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 0,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "12": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.memcpy",
            "starkware.cairo.common.memcpy.memcpy"
          ],
          "code": "vm_enter_scope({'n': ids.len})",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 2,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.memcpy.memcpy.len": 0
            }
          }
        }
      ],
      "20": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.memcpy",
            "starkware.cairo.common.memcpy.memcpy"
          ],
          "code": "n -= 1\nids.continue_copying = 1 if n > 0 else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 2,
              "offset": 5
            },
            "reference_ids": {
              "starkware.cairo.common.memcpy.memcpy.continue_copying": 1
            }
          }
        }
      ],
      "23": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.memcpy",
            "starkware.cairo.common.memcpy.memcpy"
          ],
          "code": "vm_exit_scope()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 2,
              "offset": 6
            },
            "reference_ids": {}
          }
        }
      ],
      "31": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.call_contract"
          ],
          "code": "syscall_handler.call_contract(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 3,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.call_contract.syscall_ptr": 2
            }
          }
        }
      ],
      "39": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.get_caller_address"
          ],
          "code": "syscall_handler.get_caller_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 4,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": 3
            }
          }
        }
      ],
      "47": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.storage_read"
          ],
          "code": "syscall_handler.storage_read(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 5,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.storage_read.syscall_ptr": 4
            }
          }
        }
      ],
      "56": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.storage_write"
          ],
          "code": "syscall_handler.storage_write(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 6,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.storage_write.syscall_ptr": 5
            }
          }
        }
      ],
      "66": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.emit_event"
          ],
          "code": "syscall_handler.emit_event(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 7,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.emit_event.syscall_ptr": 6
            }
          }
        }
      ],
      "69": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_not_zero"
          ],
          "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.value)\nassert ids.value % PRIME != 0, f'assert_not_zero failed: {ids.value} = 0.'",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 8,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_not_zero.value": 7
            }
          }
        }
      ],
      "74": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_not_equal"
          ],
          "code": "from starkware.cairo.lang.vm.relocatable import RelocatableValue\nboth_ints = isinstance(ids.a, int) and isinstance(ids.b, int)\nboth_relocatable = (\n    isinstance(ids.a, RelocatableValue) and isinstance(ids.b, RelocatableValue) and\n    ids.a.segment_index == ids.b.segment_index)\nassert both_ints or both_relocatable, \\\n    f'assert_not_equal failed: non-comparable values: {ids.a}, {ids.b}.'\nassert (ids.a - ids.b) % PRIME != 0, f'assert_not_equal failed: {ids.a} = {ids.b}.'",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 9,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_not_equal.a": 8,
              "starkware.cairo.common.math.assert_not_equal.b": 9
            }
          }
        }
      ],
      "80": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_250_bit"
          ],
          "code": "from starkware.cairo.common.math_utils import as_int\n\n# Correctness check.\nvalue = as_int(ids.value, PRIME) % PRIME\nassert value < ids.UPPER_BOUND, f'{value} is outside of the range [0, 2**250).'\n\n# Calculation for the assertion.\nids.high, ids.low = divmod(ids.value, ids.SHIFT)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 10,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_250_bit.high": 12,
              "starkware.cairo.common.math.assert_250_bit.low": 11,
              "starkware.cairo.common.math.assert_250_bit.value": 10
            }
          }
        }
      ],
      "93": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_le_felt"
          ],
          "code": "import itertools\n\nfrom starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\na = ids.a % PRIME\nb = ids.b % PRIME\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\n\n# Find an arc less than PRIME / 3, and another less than PRIME / 2.\nlengths_and_indices = [(a, 0), (b - a, 1), (PRIME - 1 - b, 2)]\nlengths_and_indices.sort()\nassert lengths_and_indices[0][0] <= PRIME // 3 and lengths_and_indices[1][0] <= PRIME // 2\nexcluded = lengths_and_indices[2][1]\n\nmemory[ids.range_check_ptr + 1], memory[ids.range_check_ptr + 0] = (\n    divmod(lengths_and_indices[0][0], ids.PRIME_OVER_3_HIGH))\nmemory[ids.range_check_ptr + 3], memory[ids.range_check_ptr + 2] = (\n    divmod(lengths_and_indices[1][0], ids.PRIME_OVER_2_HIGH))",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 11,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_le_felt.a": 13,
              "starkware.cairo.common.math.assert_le_felt.b": 14,
              "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 15
            }
          }
        }
      ],
      "103": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_le_felt"
          ],
          "code": "memory[ap] = 1 if excluded != 0 else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 11,
              "offset": 8
            },
            "reference_ids": {}
          }
        }
      ],
      "117": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_le_felt"
          ],
          "code": "memory[ap] = 1 if excluded != 1 else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 11,
              "offset": 9
            },
            "reference_ids": {}
          }
        }
      ],
      "129": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_le_felt"
          ],
          "code": "assert excluded == 2",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 11,
              "offset": 10
            },
            "reference_ids": {}
          }
        }
      ],
      "140": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.storage",
            "starkware.starknet.common.storage.normalize_address"
          ],
          "code": "# Verify the assumptions on the relationship between 2**250, ADDR_BOUND and PRIME.\nADDR_BOUND = ids.ADDR_BOUND % PRIME\nassert (2**250 < ADDR_BOUND <= 2**251) and (2 * 2**250 < PRIME) and (\n        ADDR_BOUND * 2 > PRIME), \\\n    'normalize_address() cannot be used with the current constants.'\nids.is_small = 1 if ids.addr < ADDR_BOUND else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 12,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.storage.normalize_address.addr": 16,
              "starkware.starknet.common.storage.normalize_address.is_small": 17
            }
          }
        }
      ],
      "158": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.storage",
            "starkware.starknet.common.storage.normalize_address"
          ],
          "code": "ids.is_250 = 1 if ids.addr < 2**250 else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 12,
              "offset": 2
            },
            "reference_ids": {
              "starkware.starknet.common.storage.normalize_address.addr": 16,
              "starkware.starknet.common.storage.normalize_address.is_250": 18
            }
          }
        }
      ],
      "178": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math_cmp",
            "starkware.cairo.common.math_cmp.is_nn"
          ],
          "code": "memory[ap] = 0 if 0 <= (ids.a % PRIME) < range_check_builtin.bound else 1",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 13,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math_cmp.is_nn.a": 19
            }
          }
        }
      ],
      "188": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math_cmp",
            "starkware.cairo.common.math_cmp.is_nn"
          ],
          "code": "memory[ap] = 0 if 0 <= ((-ids.a - 1) % PRIME) < range_check_builtin.bound else 1",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 13,
              "offset": 1
            },
            "reference_ids": {
              "starkware.cairo.common.math_cmp.is_nn.a": 19
            }
          }
        }
      ],
      "223": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.uint256",
            "starkware.cairo.common.uint256.uint256_add"
          ],
          "code": "sum_low = ids.a.low + ids.b.low\nids.carry_low = 1 if sum_low >= ids.SHIFT else 0\nsum_high = ids.a.high + ids.b.high + ids.carry_low\nids.carry_high = 1 if sum_high >= ids.SHIFT else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 16,
              "offset": 4
            },
            "reference_ids": {
              "starkware.cairo.common.uint256.uint256_add.a": 20,
              "starkware.cairo.common.uint256.uint256_add.b": 21,
              "starkware.cairo.common.uint256.uint256_add.carry_high": 23,
              "starkware.cairo.common.uint256.uint256_add.carry_low": 22
            }
          }
        }
      ],
      "1692": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.constructor"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 109,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1708": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.supportsInterface_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 112,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1741": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.name_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 116,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1771": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.symbol_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 119,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1802": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.balanceOf_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 122,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1838": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.ownerOf_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 125,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1874": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.getApproved_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 129,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1910": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.isApprovedForAll_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 133,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1946": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.tokenURI_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 137,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1980": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.owner_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 141,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "2024": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.approve"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 146,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "2051": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.setApprovalForAll"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 148,
              "offset": 129
            },
            "reference_ids": {}
          }
        }
      ],
      "2082": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.transferFrom"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 152,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "2125": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.safeTransferFrom"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 156,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "2159": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.mint"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 160,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "2190": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.burn"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 162,
              "offset": 771
            },
            "reference_ids": {}
          }
        }
      ],
      "2224": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.setTokenURI"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 166,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "2249": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.transferOwnership"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 170,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "2270": [
        {
          "accessible_scopes": [
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "openzeppelin.token.erc721.presets.ERC721MintableBurnable",
            "__wrappers__",
            "__wrappers__.renounceOwnership"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 174,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ]
    },
    "identifiers": {
      "__main__.approve": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.approve",
        "type": "alias"
      },
      "__main__.balanceOf": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.balanceOf",
        "type": "alias"
      },
      "__main__.burn": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.burn",
        "type": "alias"
      },
      "__main__.constructor": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.constructor",
        "type": "alias"
      },
      "__main__.getApproved": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.getApproved",
        "type": "alias"
      },
      "__main__.isApprovedForAll": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.isApprovedForAll",
        "type": "alias"
      },
      "__main__.mint": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.mint",
        "type": "alias"
      },
      "__main__.name": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.name",
        "type": "alias"
      },
      "__main__.owner": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.owner",
        "type": "alias"
      },
      "__main__.ownerOf": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.ownerOf",
        "type": "alias"
      },
      "__main__.renounceOwnership": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.renounceOwnership",
        "type": "alias"
      },
      "__main__.safeTransferFrom": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.safeTransferFrom",
        "type": "alias"
      },
      "__main__.setApprovalForAll": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setApprovalForAll",
        "type": "alias"
      },
      "__main__.setTokenURI": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setTokenURI",
        "type": "alias"
      },
      "__main__.supportsInterface": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.supportsInterface",
        "type": "alias"
      },
      "__main__.symbol": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.symbol",
        "type": "alias"
      },
      "__main__.tokenURI": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.tokenURI",
        "type": "alias"
      },
      "__main__.transferFrom": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferFrom",
        "type": "alias"
      },
      "__main__.transferOwnership": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferOwnership",
        "type": "alias"
      },
      "__wrappers__.approve": {
        "decorators": ["external"],
        "pc": 2013,
        "type": "function"
      },
      "__wrappers__.approve.Args": {
        "full_name": "__wrappers__.approve.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.approve.ImplicitArgs": {
        "full_name": "__wrappers__.approve.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.approve.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.approve.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.approve.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.approve",
        "type": "alias"
      },
      "__wrappers__.approve_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.balanceOf": {
        "decorators": ["view"],
        "pc": 1812,
        "type": "function"
      },
      "__wrappers__.balanceOf.Args": {
        "full_name": "__wrappers__.balanceOf.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.balanceOf.ImplicitArgs": {
        "full_name": "__wrappers__.balanceOf.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.balanceOf.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.balanceOf.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.balanceOf.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.balanceOf",
        "type": "alias"
      },
      "__wrappers__.balanceOf_encode_return": {
        "decorators": [],
        "pc": 1802,
        "type": "function"
      },
      "__wrappers__.balanceOf_encode_return.Args": {
        "full_name": "__wrappers__.balanceOf_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "ret_value": {
            "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__wrappers__.balanceOf_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.balanceOf_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.balanceOf_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.balanceOf_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.balanceOf_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.burn": {
        "decorators": ["external"],
        "pc": 2180,
        "type": "function"
      },
      "__wrappers__.burn.Args": {
        "full_name": "__wrappers__.burn.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.burn.ImplicitArgs": {
        "full_name": "__wrappers__.burn.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.burn.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.burn.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.burn.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.burn",
        "type": "alias"
      },
      "__wrappers__.burn_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.constructor": {
        "decorators": ["constructor"],
        "pc": 1681,
        "type": "function"
      },
      "__wrappers__.constructor.Args": {
        "full_name": "__wrappers__.constructor.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.constructor.ImplicitArgs": {
        "full_name": "__wrappers__.constructor.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.constructor.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.constructor.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.constructor.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.constructor",
        "type": "alias"
      },
      "__wrappers__.constructor_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.getApproved": {
        "decorators": ["view"],
        "pc": 1883,
        "type": "function"
      },
      "__wrappers__.getApproved.Args": {
        "full_name": "__wrappers__.getApproved.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.getApproved.ImplicitArgs": {
        "full_name": "__wrappers__.getApproved.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.getApproved.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.getApproved.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.getApproved.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.getApproved",
        "type": "alias"
      },
      "__wrappers__.getApproved_encode_return": {
        "decorators": [],
        "pc": 1874,
        "type": "function"
      },
      "__wrappers__.getApproved_encode_return.Args": {
        "full_name": "__wrappers__.getApproved_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(approved: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.getApproved_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.getApproved_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.getApproved_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.getApproved_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.getApproved_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.isApprovedForAll": {
        "decorators": ["view"],
        "pc": 1919,
        "type": "function"
      },
      "__wrappers__.isApprovedForAll.Args": {
        "full_name": "__wrappers__.isApprovedForAll.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.isApprovedForAll.ImplicitArgs": {
        "full_name": "__wrappers__.isApprovedForAll.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.isApprovedForAll.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.isApprovedForAll.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.isApprovedForAll.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.isApprovedForAll",
        "type": "alias"
      },
      "__wrappers__.isApprovedForAll_encode_return": {
        "decorators": [],
        "pc": 1910,
        "type": "function"
      },
      "__wrappers__.isApprovedForAll_encode_return.Args": {
        "full_name": "__wrappers__.isApprovedForAll_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(approved: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.isApprovedForAll_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.isApprovedForAll_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.isApprovedForAll_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.isApprovedForAll_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.isApprovedForAll_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.mint": {
        "decorators": ["external"],
        "pc": 2148,
        "type": "function"
      },
      "__wrappers__.mint.Args": {
        "full_name": "__wrappers__.mint.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.mint.ImplicitArgs": {
        "full_name": "__wrappers__.mint.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.mint.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.mint.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.mint.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.mint",
        "type": "alias"
      },
      "__wrappers__.mint_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.name": {
        "decorators": ["view"],
        "pc": 1750,
        "type": "function"
      },
      "__wrappers__.name.Args": {
        "full_name": "__wrappers__.name.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.name.ImplicitArgs": {
        "full_name": "__wrappers__.name.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.name.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.name.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.name.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.name",
        "type": "alias"
      },
      "__wrappers__.name_encode_return": {
        "decorators": [],
        "pc": 1741,
        "type": "function"
      },
      "__wrappers__.name_encode_return.Args": {
        "full_name": "__wrappers__.name_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(name: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.name_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.name_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.name_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.name_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.name_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.owner": {
        "decorators": ["view"],
        "pc": 1989,
        "type": "function"
      },
      "__wrappers__.owner.Args": {
        "full_name": "__wrappers__.owner.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.owner.ImplicitArgs": {
        "full_name": "__wrappers__.owner.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.owner.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.owner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.owner.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.owner",
        "type": "alias"
      },
      "__wrappers__.ownerOf": {
        "decorators": ["view"],
        "pc": 1847,
        "type": "function"
      },
      "__wrappers__.ownerOf.Args": {
        "full_name": "__wrappers__.ownerOf.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.ownerOf.ImplicitArgs": {
        "full_name": "__wrappers__.ownerOf.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.ownerOf.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.ownerOf.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.ownerOf.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.ownerOf",
        "type": "alias"
      },
      "__wrappers__.ownerOf_encode_return": {
        "decorators": [],
        "pc": 1838,
        "type": "function"
      },
      "__wrappers__.ownerOf_encode_return.Args": {
        "full_name": "__wrappers__.ownerOf_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(owner: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.ownerOf_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.ownerOf_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.ownerOf_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.ownerOf_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.ownerOf_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.owner_encode_return": {
        "decorators": [],
        "pc": 1980,
        "type": "function"
      },
      "__wrappers__.owner_encode_return.Args": {
        "full_name": "__wrappers__.owner_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(owner: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.owner_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.owner_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.owner_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.owner_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.owner_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.renounceOwnership": {
        "decorators": ["external"],
        "pc": 2264,
        "type": "function"
      },
      "__wrappers__.renounceOwnership.Args": {
        "full_name": "__wrappers__.renounceOwnership.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.renounceOwnership.ImplicitArgs": {
        "full_name": "__wrappers__.renounceOwnership.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.renounceOwnership.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.renounceOwnership.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.renounceOwnership.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.renounceOwnership",
        "type": "alias"
      },
      "__wrappers__.renounceOwnership_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.safeTransferFrom": {
        "decorators": ["external"],
        "pc": 2103,
        "type": "function"
      },
      "__wrappers__.safeTransferFrom.Args": {
        "full_name": "__wrappers__.safeTransferFrom.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.safeTransferFrom.ImplicitArgs": {
        "full_name": "__wrappers__.safeTransferFrom.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.safeTransferFrom.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.safeTransferFrom.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.safeTransferFrom.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.safeTransferFrom",
        "type": "alias"
      },
      "__wrappers__.safeTransferFrom_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.setApprovalForAll": {
        "decorators": ["external"],
        "pc": 2041,
        "type": "function"
      },
      "__wrappers__.setApprovalForAll.Args": {
        "full_name": "__wrappers__.setApprovalForAll.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.setApprovalForAll.ImplicitArgs": {
        "full_name": "__wrappers__.setApprovalForAll.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.setApprovalForAll.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.setApprovalForAll.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.setApprovalForAll.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setApprovalForAll",
        "type": "alias"
      },
      "__wrappers__.setApprovalForAll_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.setTokenURI": {
        "decorators": ["external"],
        "pc": 2213,
        "type": "function"
      },
      "__wrappers__.setTokenURI.Args": {
        "full_name": "__wrappers__.setTokenURI.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.setTokenURI.ImplicitArgs": {
        "full_name": "__wrappers__.setTokenURI.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.setTokenURI.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.setTokenURI.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.setTokenURI.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setTokenURI",
        "type": "alias"
      },
      "__wrappers__.setTokenURI_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.supportsInterface": {
        "decorators": ["view"],
        "pc": 1717,
        "type": "function"
      },
      "__wrappers__.supportsInterface.Args": {
        "full_name": "__wrappers__.supportsInterface.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.supportsInterface.ImplicitArgs": {
        "full_name": "__wrappers__.supportsInterface.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.supportsInterface.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.supportsInterface.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.supportsInterface.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.supportsInterface",
        "type": "alias"
      },
      "__wrappers__.supportsInterface_encode_return": {
        "decorators": [],
        "pc": 1708,
        "type": "function"
      },
      "__wrappers__.supportsInterface_encode_return.Args": {
        "full_name": "__wrappers__.supportsInterface_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(success: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.supportsInterface_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.supportsInterface_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.supportsInterface_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.supportsInterface_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.supportsInterface_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.symbol": {
        "decorators": ["view"],
        "pc": 1780,
        "type": "function"
      },
      "__wrappers__.symbol.Args": {
        "full_name": "__wrappers__.symbol.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.symbol.ImplicitArgs": {
        "full_name": "__wrappers__.symbol.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.symbol.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.symbol.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.symbol.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.symbol",
        "type": "alias"
      },
      "__wrappers__.symbol_encode_return": {
        "decorators": [],
        "pc": 1771,
        "type": "function"
      },
      "__wrappers__.symbol_encode_return.Args": {
        "full_name": "__wrappers__.symbol_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(symbol: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.symbol_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.symbol_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.symbol_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.symbol_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.symbol_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.tokenURI": {
        "decorators": ["view"],
        "pc": 1955,
        "type": "function"
      },
      "__wrappers__.tokenURI.Args": {
        "full_name": "__wrappers__.tokenURI.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.tokenURI.ImplicitArgs": {
        "full_name": "__wrappers__.tokenURI.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.tokenURI.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.tokenURI.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.tokenURI.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.tokenURI",
        "type": "alias"
      },
      "__wrappers__.tokenURI_encode_return": {
        "decorators": [],
        "pc": 1946,
        "type": "function"
      },
      "__wrappers__.tokenURI_encode_return.Args": {
        "full_name": "__wrappers__.tokenURI_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(tokenURI: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.tokenURI_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.tokenURI_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.tokenURI_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.tokenURI_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.tokenURI_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.transferFrom": {
        "decorators": ["external"],
        "pc": 2070,
        "type": "function"
      },
      "__wrappers__.transferFrom.Args": {
        "full_name": "__wrappers__.transferFrom.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.transferFrom.ImplicitArgs": {
        "full_name": "__wrappers__.transferFrom.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.transferFrom.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.transferFrom.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.transferFrom.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferFrom",
        "type": "alias"
      },
      "__wrappers__.transferFrom_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.transferOwnership": {
        "decorators": ["external"],
        "pc": 2240,
        "type": "function"
      },
      "__wrappers__.transferOwnership.Args": {
        "full_name": "__wrappers__.transferOwnership.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.transferOwnership.ImplicitArgs": {
        "full_name": "__wrappers__.transferOwnership.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.transferOwnership.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.transferOwnership.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.transferOwnership.__wrapped_func": {
        "destination": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferOwnership",
        "type": "alias"
      },
      "__wrappers__.transferOwnership_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.Ownable": {
        "type": "namespace"
      },
      "openzeppelin.access.ownable.library.Ownable.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable._transfer_ownership": {
        "decorators": [],
        "pc": 416,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable._transfer_ownership.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable._transfer_ownership.Args",
        "members": {
          "new_owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable._transfer_ownership.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable._transfer_ownership.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable._transfer_ownership.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable._transfer_ownership.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable.assert_only_owner": {
        "decorators": [],
        "pc": 373,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable.assert_only_owner.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.assert_only_owner.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.assert_only_owner.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.assert_only_owner.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.assert_only_owner.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable.assert_only_owner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable.initializer": {
        "decorators": [],
        "pc": 366,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable.initializer.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.initializer.Args",
        "members": {
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.initializer.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.initializer.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.initializer.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable.initializer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable.owner": {
        "decorators": [],
        "pc": 388,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable.owner.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.owner.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.owner.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.owner.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.owner.Return": {
        "cairo_type": "(owner: felt)",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable.owner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable.renounce_ownership": {
        "decorators": [],
        "pc": 406,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable.renounce_ownership.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.renounce_ownership.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.renounce_ownership.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.renounce_ownership.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.renounce_ownership.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable.renounce_ownership.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable.transfer_ownership": {
        "decorators": [],
        "pc": 394,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable.transfer_ownership.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.transfer_ownership.Args",
        "members": {
          "new_owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.transfer_ownership.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.transfer_ownership.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.transfer_ownership.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable.transfer_ownership.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable_owner": {
        "type": "namespace"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable_owner.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable_owner.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable_owner.addr": {
        "decorators": [],
        "pc": 336,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.addr.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable_owner.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.addr.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable_owner.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable_owner.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.read": {
        "decorators": [],
        "pc": 341,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.read.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable_owner.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.read.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable_owner.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.read.Return": {
        "cairo_type": "(owner: felt)",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable_owner.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.write": {
        "decorators": [],
        "pc": 354,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.write.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable_owner.write.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.write.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable_owner.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred": {
        "type": "namespace"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.Args": {
        "full_name": "openzeppelin.access.ownable.library.OwnershipTransferred.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.OwnershipTransferred.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.SELECTOR": {
        "type": "const",
        "value": 553132481214675521502977957974509639062080100631756862105218886163371506175
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.emit": {
        "decorators": [],
        "pc": 311,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.emit.Args": {
        "full_name": "openzeppelin.access.ownable.library.OwnershipTransferred.emit.Args",
        "members": {
          "newOwner": {
            "cairo_type": "felt",
            "offset": 1
          },
          "previousOwner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.emit.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.OwnershipTransferred.emit.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.emit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.emit.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.emit_event": {
        "destination": "starkware.starknet.common.syscalls.emit_event",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.assert_not_zero": {
        "destination": "starkware.cairo.common.math.assert_not_zero",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.get_caller_address": {
        "destination": "starkware.starknet.common.syscalls.get_caller_address",
        "type": "alias"
      },
      "openzeppelin.introspection.erc165.IERC165.IERC165": {
        "type": "namespace"
      },
      "openzeppelin.introspection.erc165.IERC165.IERC165.Args": {
        "full_name": "openzeppelin.introspection.erc165.IERC165.IERC165.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.IERC165.IERC165.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.erc165.IERC165.IERC165.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.IERC165.IERC165.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.introspection.erc165.IERC165.IERC165.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.introspection.erc165.IERC165.IERC165.SUPPORTSINTERFACE_SELECTOR": {
        "type": "const",
        "value": 1184015894760294494673613438913361435336722154500302038630992932234692784845
      },
      "openzeppelin.introspection.erc165.IERC165.IERC165.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "openzeppelin.introspection.erc165.IERC165.IERC165.call_contract": {
        "destination": "starkware.starknet.common.syscalls.call_contract",
        "type": "alias"
      },
      "openzeppelin.introspection.erc165.IERC165.IERC165.library_call": {
        "destination": "starkware.starknet.common.syscalls.library_call",
        "type": "alias"
      },
      "openzeppelin.introspection.erc165.IERC165.IERC165.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "openzeppelin.introspection.erc165.IERC165.IERC165.supportsInterface": {
        "decorators": [],
        "pc": 509,
        "type": "function"
      },
      "openzeppelin.introspection.erc165.IERC165.IERC165.supportsInterface.Args": {
        "full_name": "openzeppelin.introspection.erc165.IERC165.IERC165.supportsInterface.Args",
        "members": {
          "contract_address": {
            "cairo_type": "felt",
            "offset": 0
          },
          "interfaceId": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.IERC165.IERC165.supportsInterface.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.erc165.IERC165.IERC165.supportsInterface.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.IERC165.IERC165.supportsInterface.Return": {
        "cairo_type": "(success: felt)",
        "type": "type_definition"
      },
      "openzeppelin.introspection.erc165.IERC165.IERC165.supportsInterface.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "openzeppelin.introspection.erc165.library.ERC165": {
        "type": "namespace"
      },
      "openzeppelin.introspection.erc165.library.ERC165.Args": {
        "full_name": "openzeppelin.introspection.erc165.library.ERC165.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.library.ERC165.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.erc165.library.ERC165.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.library.ERC165.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.introspection.erc165.library.ERC165.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.introspection.erc165.library.ERC165.register_interface": {
        "decorators": [],
        "pc": 495,
        "type": "function"
      },
      "openzeppelin.introspection.erc165.library.ERC165.register_interface.Args": {
        "full_name": "openzeppelin.introspection.erc165.library.ERC165.register_interface.Args",
        "members": {
          "interface_id": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.library.ERC165.register_interface.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.erc165.library.ERC165.register_interface.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.library.ERC165.register_interface.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.introspection.erc165.library.ERC165.register_interface.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.introspection.erc165.library.ERC165.supports_interface": {
        "decorators": [],
        "pc": 478,
        "type": "function"
      },
      "openzeppelin.introspection.erc165.library.ERC165.supports_interface.Args": {
        "full_name": "openzeppelin.introspection.erc165.library.ERC165.supports_interface.Args",
        "members": {
          "interface_id": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.library.ERC165.supports_interface.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.erc165.library.ERC165.supports_interface.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.library.ERC165.supports_interface.Return": {
        "cairo_type": "(success: felt)",
        "type": "type_definition"
      },
      "openzeppelin.introspection.erc165.library.ERC165.supports_interface.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces": {
        "type": "namespace"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.Args": {
        "full_name": "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.addr": {
        "decorators": [],
        "pc": 437,
        "type": "function"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.addr.Args": {
        "full_name": "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.addr.Args",
        "members": {
          "interface_id": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.addr.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.read": {
        "decorators": [],
        "pc": 451,
        "type": "function"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.read.Args": {
        "full_name": "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.read.Args",
        "members": {
          "interface_id": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.read.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.read.Return": {
        "cairo_type": "(is_supported: felt)",
        "type": "type_definition"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.write": {
        "decorators": [],
        "pc": 465,
        "type": "function"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.write.Args": {
        "full_name": "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.write.Args",
        "members": {
          "interface_id": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.write.ImplicitArgs": {
        "full_name": "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.introspection.erc165.library.ERC165_supported_interfaces.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.introspection.erc165.library.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.introspection.erc165.library.IERC165_ID": {
        "destination": "openzeppelin.utils.constants.library.IERC165_ID",
        "type": "alias"
      },
      "openzeppelin.introspection.erc165.library.INVALID_ID": {
        "destination": "openzeppelin.utils.constants.library.INVALID_ID",
        "type": "alias"
      },
      "openzeppelin.introspection.erc165.library.TRUE": {
        "destination": "starkware.cairo.common.bool.TRUE",
        "type": "alias"
      },
      "openzeppelin.introspection.erc165.library.assert_not_equal": {
        "destination": "starkware.cairo.common.math.assert_not_equal",
        "type": "alias"
      },
      "openzeppelin.security.safemath.library.FALSE": {
        "destination": "starkware.cairo.common.bool.FALSE",
        "type": "alias"
      },
      "openzeppelin.security.safemath.library.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.security.safemath.library.SafeUint256": {
        "type": "namespace"
      },
      "openzeppelin.security.safemath.library.SafeUint256.Args": {
        "full_name": "openzeppelin.security.safemath.library.SafeUint256.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.security.safemath.library.SafeUint256.ImplicitArgs": {
        "full_name": "openzeppelin.security.safemath.library.SafeUint256.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.security.safemath.library.SafeUint256.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.security.safemath.library.SafeUint256.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.security.safemath.library.SafeUint256.add": {
        "decorators": [],
        "pc": 532,
        "type": "function"
      },
      "openzeppelin.security.safemath.library.SafeUint256.add.Args": {
        "full_name": "openzeppelin.security.safemath.library.SafeUint256.add.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.security.safemath.library.SafeUint256.add.ImplicitArgs": {
        "full_name": "openzeppelin.security.safemath.library.SafeUint256.add.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.security.safemath.library.SafeUint256.add.Return": {
        "cairo_type": "(c: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.security.safemath.library.SafeUint256.add.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.security.safemath.library.SafeUint256.sub_le": {
        "decorators": [],
        "pc": 553,
        "type": "function"
      },
      "openzeppelin.security.safemath.library.SafeUint256.sub_le.Args": {
        "full_name": "openzeppelin.security.safemath.library.SafeUint256.sub_le.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.security.safemath.library.SafeUint256.sub_le.ImplicitArgs": {
        "full_name": "openzeppelin.security.safemath.library.SafeUint256.sub_le.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.security.safemath.library.SafeUint256.sub_le.Return": {
        "cairo_type": "(c: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.security.safemath.library.SafeUint256.sub_le.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.security.safemath.library.TRUE": {
        "destination": "starkware.cairo.common.bool.TRUE",
        "type": "alias"
      },
      "openzeppelin.security.safemath.library.Uint256": {
        "destination": "starkware.cairo.common.uint256.Uint256",
        "type": "alias"
      },
      "openzeppelin.security.safemath.library.uint256_add": {
        "destination": "starkware.cairo.common.uint256.uint256_add",
        "type": "alias"
      },
      "openzeppelin.security.safemath.library.uint256_check": {
        "destination": "starkware.cairo.common.uint256.uint256_check",
        "type": "alias"
      },
      "openzeppelin.security.safemath.library.uint256_eq": {
        "destination": "starkware.cairo.common.uint256.uint256_eq",
        "type": "alias"
      },
      "openzeppelin.security.safemath.library.uint256_le": {
        "destination": "starkware.cairo.common.uint256.uint256_le",
        "type": "alias"
      },
      "openzeppelin.security.safemath.library.uint256_lt": {
        "destination": "starkware.cairo.common.uint256.uint256_lt",
        "type": "alias"
      },
      "openzeppelin.security.safemath.library.uint256_mul": {
        "destination": "starkware.cairo.common.uint256.uint256_mul",
        "type": "alias"
      },
      "openzeppelin.security.safemath.library.uint256_sub": {
        "destination": "starkware.cairo.common.uint256.uint256_sub",
        "type": "alias"
      },
      "openzeppelin.security.safemath.library.uint256_unsigned_div_rem": {
        "destination": "starkware.cairo.common.uint256.uint256_unsigned_div_rem",
        "type": "alias"
      },
      "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.Args": {
        "full_name": "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.ONERC721RECEIVED_SELECTOR": {
        "type": "const",
        "value": 441833262846246486607087847804043886170335009155803575450536462761436446875
      },
      "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.call_contract": {
        "destination": "starkware.starknet.common.syscalls.call_contract",
        "type": "alias"
      },
      "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.library_call": {
        "destination": "starkware.starknet.common.syscalls.library_call",
        "type": "alias"
      },
      "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.onERC721Received": {
        "decorators": [],
        "pc": 580,
        "type": "function"
      },
      "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.onERC721Received.Args": {
        "full_name": "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.onERC721Received.Args",
        "members": {
          "contract_address": {
            "cairo_type": "felt",
            "offset": 0
          },
          "data": {
            "cairo_type": "felt*",
            "offset": 6
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 5
          },
          "from_": {
            "cairo_type": "felt",
            "offset": 2
          },
          "operator": {
            "cairo_type": "felt",
            "offset": 1
          },
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 3
          }
        },
        "size": 7,
        "type": "struct"
      },
      "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.onERC721Received.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.onERC721Received.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.onERC721Received.Return": {
        "cairo_type": "(selector: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver.onERC721Received.SIZEOF_LOCALS": {
        "type": "const",
        "value": 3
      },
      "openzeppelin.token.erc721.IERC721Receiver.Uint256": {
        "destination": "starkware.cairo.common.uint256.Uint256",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.Approval": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.Approval.Args": {
        "full_name": "openzeppelin.token.erc721.library.Approval.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.Approval.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.Approval.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.Approval.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.Approval.SELECTOR": {
        "type": "const",
        "value": 544914742286571513055574265148471203182105283038408585630116262969508767999
      },
      "openzeppelin.token.erc721.library.Approval.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.Approval.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.Approval.emit": {
        "decorators": [],
        "pc": 644,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.Approval.emit.Args": {
        "full_name": "openzeppelin.token.erc721.library.Approval.emit.Args",
        "members": {
          "approved": {
            "cairo_type": "felt",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          },
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.Approval.emit.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.Approval.emit.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.Approval.emit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.Approval.emit.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "openzeppelin.token.erc721.library.Approval.emit_event": {
        "destination": "starkware.starknet.common.syscalls.emit_event",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.Approval.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.Args": {
        "full_name": "openzeppelin.token.erc721.library.ApprovalForAll.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ApprovalForAll.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.SELECTOR": {
        "type": "const",
        "value": 11799366895331287683400559711902461446731448035283747365813974388970843869
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.emit": {
        "decorators": [],
        "pc": 671,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.emit.Args": {
        "full_name": "openzeppelin.token.erc721.library.ApprovalForAll.emit.Args",
        "members": {
          "approved": {
            "cairo_type": "felt",
            "offset": 2
          },
          "operator": {
            "cairo_type": "felt",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.emit.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ApprovalForAll.emit.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.emit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.emit.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.emit_event": {
        "destination": "starkware.starknet.common.syscalls.emit_event",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ApprovalForAll.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC165": {
        "destination": "openzeppelin.introspection.erc165.library.ERC165",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ERC721.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721._approve": {
        "decorators": [],
        "pc": 1370,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721._approve.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721._approve.Args",
        "members": {
          "to": {
            "cairo_type": "felt",
            "offset": 0
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721._approve.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721._approve.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721._approve.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721._approve.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721._burn": {
        "decorators": [],
        "pc": 1543,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721._burn.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721._burn.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721._burn.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721._burn.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721._burn.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721._burn.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721._exists": {
        "decorators": [],
        "pc": 1349,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721._exists.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721._exists.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721._exists.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721._exists.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721._exists.Return": {
        "cairo_type": "felt",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721._exists.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721._is_approved_or_owner": {
        "decorators": [],
        "pc": 1282,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721._is_approved_or_owner.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721._is_approved_or_owner.Args",
        "members": {
          "spender": {
            "cairo_type": "felt",
            "offset": 0
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721._is_approved_or_owner.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721._is_approved_or_owner.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721._is_approved_or_owner.Return": {
        "cairo_type": "felt",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721._is_approved_or_owner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "openzeppelin.token.erc721.library.ERC721._mint": {
        "decorators": [],
        "pc": 1488,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721._mint.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721._mint.Args",
        "members": {
          "to": {
            "cairo_type": "felt",
            "offset": 0
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721._mint.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721._mint.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721._mint.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721._mint.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721._safe_transfer": {
        "decorators": [],
        "pc": 1465,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721._safe_transfer.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721._safe_transfer.Args",
        "members": {
          "data": {
            "cairo_type": "felt*",
            "offset": 5
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 4
          },
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 6,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721._safe_transfer.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721._safe_transfer.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721._safe_transfer.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721._safe_transfer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721._set_token_uri": {
        "decorators": [],
        "pc": 1602,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721._set_token_uri.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721._set_token_uri.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "token_uri": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721._set_token_uri.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721._set_token_uri.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721._set_token_uri.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721._set_token_uri.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721._transfer": {
        "decorators": [],
        "pc": 1394,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721._transfer.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721._transfer.Args",
        "members": {
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721._transfer.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721._transfer.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721._transfer.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721._transfer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721.approve": {
        "decorators": [],
        "pc": 1099,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721.approve.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.approve.Args",
        "members": {
          "to": {
            "cairo_type": "felt",
            "offset": 0
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.approve.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.approve.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.approve.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721.approve.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721.assert_only_token_owner": {
        "decorators": [],
        "pc": 1262,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721.assert_only_token_owner.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.assert_only_token_owner.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.assert_only_token_owner.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.assert_only_token_owner.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.assert_only_token_owner.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721.assert_only_token_owner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721.balance_of": {
        "decorators": [],
        "pc": 1023,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721.balance_of.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.balance_of.Args",
        "members": {
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.balance_of.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.balance_of.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.balance_of.Return": {
        "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721.balance_of.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721.get_approved": {
        "decorators": [],
        "pc": 1052,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721.get_approved.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.get_approved.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.get_approved.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.get_approved.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.get_approved.Return": {
        "cairo_type": "(approved: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721.get_approved.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721.initializer": {
        "decorators": [],
        "pc": 993,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721.initializer.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.initializer.Args",
        "members": {
          "name": {
            "cairo_type": "felt",
            "offset": 0
          },
          "symbol": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.initializer.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.initializer.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.initializer.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721.initializer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721.is_approved_for_all": {
        "decorators": [],
        "pc": 1074,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721.is_approved_for_all.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.is_approved_for_all.Args",
        "members": {
          "operator": {
            "cairo_type": "felt",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.is_approved_for_all.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.is_approved_for_all.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.is_approved_for_all.Return": {
        "cairo_type": "(approved: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721.is_approved_for_all.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721.name": {
        "decorators": [],
        "pc": 1011,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721.name.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.name.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.name.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.name.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.name.Return": {
        "cairo_type": "(name: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721.name.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721.owner_of": {
        "decorators": [],
        "pc": 1033,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721.owner_of.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.owner_of.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.owner_of.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.owner_of.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.owner_of.Return": {
        "cairo_type": "(owner: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721.owner_of.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721.safe_transfer_from": {
        "decorators": [],
        "pc": 1225,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721.safe_transfer_from.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.safe_transfer_from.Args",
        "members": {
          "data": {
            "cairo_type": "felt*",
            "offset": 5
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 4
          },
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 6,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.safe_transfer_from.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.safe_transfer_from.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.safe_transfer_from.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721.safe_transfer_from.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "openzeppelin.token.erc721.library.ERC721.set_approval_for_all": {
        "decorators": [],
        "pc": 1155,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721.set_approval_for_all.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.set_approval_for_all.Args",
        "members": {
          "approved": {
            "cairo_type": "felt",
            "offset": 1
          },
          "operator": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.set_approval_for_all.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.set_approval_for_all.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.set_approval_for_all.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721.set_approval_for_all.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721.symbol": {
        "decorators": [],
        "pc": 1017,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721.symbol.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.symbol.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.symbol.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.symbol.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.symbol.Return": {
        "cairo_type": "(symbol: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721.symbol.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721.token_uri": {
        "decorators": [],
        "pc": 1082,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721.token_uri.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.token_uri.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.token_uri.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.token_uri.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.token_uri.Return": {
        "cairo_type": "(token_uri: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721.token_uri.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721.transfer_from": {
        "decorators": [],
        "pc": 1190,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721.transfer_from.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.transfer_from.Args",
        "members": {
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.transfer_from.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721.transfer_from.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721.transfer_from.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721.transfer_from.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "openzeppelin.token.erc721.library.ERC721_balances": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balances.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balances.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_balances.addr": {
        "decorators": [],
        "pc": 803,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.addr.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balances.addr.Args",
        "members": {
          "account": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balances.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_balances.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.read": {
        "decorators": [],
        "pc": 817,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.read.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balances.read.Args",
        "members": {
          "account": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balances.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.read.Return": {
        "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_balances.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.write": {
        "decorators": [],
        "pc": 837,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.write.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balances.write.Args",
        "members": {
          "account": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_balances.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_balances.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_name": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ERC721_name.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_name.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_name.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_name.addr": {
        "decorators": [],
        "pc": 697,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_name.addr.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_name.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_name.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_name.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_name.read": {
        "decorators": [],
        "pc": 702,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_name.read.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name.read.Return": {
        "cairo_type": "(name: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_name.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_name.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_name.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_name.write": {
        "decorators": [],
        "pc": 715,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_name.write.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name.write.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_name.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_name.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_name.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr": {
        "decorators": [],
        "pc": 901,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.Args",
        "members": {
          "operator": {
            "cairo_type": "felt",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.read": {
        "decorators": [],
        "pc": 918,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.Args",
        "members": {
          "operator": {
            "cairo_type": "felt",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.Return": {
        "cairo_type": "(approved: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.write": {
        "decorators": [],
        "pc": 933,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.Args",
        "members": {
          "operator": {
            "cairo_type": "felt",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_operator_approvals.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_owners": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_owners.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_owners.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_owners.addr": {
        "decorators": [],
        "pc": 757,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.addr.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_owners.addr.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_owners.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_owners.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.read": {
        "decorators": [],
        "pc": 774,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.read.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_owners.read.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_owners.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.read.Return": {
        "cairo_type": "(owner: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_owners.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.write": {
        "decorators": [],
        "pc": 789,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.write.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_owners.write.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_owners.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_owners.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_symbol": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.addr": {
        "decorators": [],
        "pc": 727,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.addr.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.read": {
        "decorators": [],
        "pc": 732,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.read.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.read.Return": {
        "cairo_type": "(symbol: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.write": {
        "decorators": [],
        "pc": 745,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.write.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.write.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_symbol.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_symbol.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.addr": {
        "decorators": [],
        "pc": 855,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.read": {
        "decorators": [],
        "pc": 872,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.read.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.read.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.read.Return": {
        "cairo_type": "(approved: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.write": {
        "decorators": [],
        "pc": 887,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.write.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.write.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_approvals.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_token_approvals.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.addr": {
        "decorators": [],
        "pc": 947,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.addr.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.addr.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.addr.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.read": {
        "decorators": [],
        "pc": 964,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.read.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.read.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.read.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.read.Return": {
        "cairo_type": "(token_uri: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.write": {
        "decorators": [],
        "pc": 979,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.write.Args": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.write.Args",
        "members": {
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.write.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.ERC721_token_uri.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.ERC721_token_uri.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.FALSE": {
        "destination": "starkware.cairo.common.bool.FALSE",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.IACCOUNT_ID": {
        "destination": "openzeppelin.utils.constants.library.IACCOUNT_ID",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.IERC165": {
        "destination": "openzeppelin.introspection.erc165.IERC165.IERC165",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.IERC721Receiver": {
        "destination": "openzeppelin.token.erc721.IERC721Receiver.IERC721Receiver",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.IERC721_ID": {
        "destination": "openzeppelin.utils.constants.library.IERC721_ID",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.IERC721_METADATA_ID": {
        "destination": "openzeppelin.utils.constants.library.IERC721_METADATA_ID",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.IERC721_RECEIVER_ID": {
        "destination": "openzeppelin.utils.constants.library.IERC721_RECEIVER_ID",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.SafeUint256": {
        "destination": "openzeppelin.security.safemath.library.SafeUint256",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.TRUE": {
        "destination": "starkware.cairo.common.bool.TRUE",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.Transfer": {
        "type": "namespace"
      },
      "openzeppelin.token.erc721.library.Transfer.Args": {
        "full_name": "openzeppelin.token.erc721.library.Transfer.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.Transfer.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.Transfer.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.Transfer.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.Transfer.SELECTOR": {
        "type": "const",
        "value": 271746229759260285552388728919865295615886751538523744128730118297934206697
      },
      "openzeppelin.token.erc721.library.Transfer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.Transfer.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.Transfer.emit": {
        "decorators": [],
        "pc": 617,
        "type": "function"
      },
      "openzeppelin.token.erc721.library.Transfer.emit.Args": {
        "full_name": "openzeppelin.token.erc721.library.Transfer.emit.Args",
        "members": {
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.Transfer.emit.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library.Transfer.emit.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library.Transfer.emit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library.Transfer.emit.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "openzeppelin.token.erc721.library.Transfer.emit_event": {
        "destination": "starkware.starknet.common.syscalls.emit_event",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.Transfer.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.Uint256": {
        "destination": "starkware.cairo.common.uint256.Uint256",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library._check_onERC721Received": {
        "decorators": [],
        "pc": 1625,
        "type": "function"
      },
      "openzeppelin.token.erc721.library._check_onERC721Received.Args": {
        "full_name": "openzeppelin.token.erc721.library._check_onERC721Received.Args",
        "members": {
          "data": {
            "cairo_type": "felt*",
            "offset": 5
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 4
          },
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "token_id": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 6,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library._check_onERC721Received.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.library._check_onERC721Received.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.library._check_onERC721Received.Return": {
        "cairo_type": "(success: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.library._check_onERC721Received.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.library.assert_not_equal": {
        "destination": "starkware.cairo.common.math.assert_not_equal",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.assert_not_zero": {
        "destination": "starkware.cairo.common.math.assert_not_zero",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.get_caller_address": {
        "destination": "starkware.starknet.common.syscalls.get_caller_address",
        "type": "alias"
      },
      "openzeppelin.token.erc721.library.uint256_check": {
        "destination": "starkware.cairo.common.uint256.uint256_check",
        "type": "alias"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.ERC165": {
        "destination": "openzeppelin.introspection.erc165.library.ERC165",
        "type": "alias"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.ERC721": {
        "destination": "openzeppelin.token.erc721.library.ERC721",
        "type": "alias"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.Ownable": {
        "destination": "openzeppelin.access.ownable.library.Ownable",
        "type": "alias"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.Uint256": {
        "destination": "starkware.cairo.common.uint256.Uint256",
        "type": "alias"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.approve": {
        "decorators": ["external"],
        "pc": 2004,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.approve.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.approve.Args",
        "members": {
          "to": {
            "cairo_type": "felt",
            "offset": 0
          },
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.approve.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.approve.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.approve.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.approve.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.balanceOf": {
        "decorators": ["view"],
        "pc": 1795,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.balanceOf.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.balanceOf.Args",
        "members": {
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.balanceOf.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.balanceOf.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.balanceOf.Return": {
        "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.balanceOf.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.burn": {
        "decorators": ["external"],
        "pc": 2168,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.burn.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.burn.Args",
        "members": {
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.burn.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.burn.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.burn.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.burn.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.constructor": {
        "decorators": ["constructor"],
        "pc": 1670,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.constructor.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.constructor.Args",
        "members": {
          "name": {
            "cairo_type": "felt",
            "offset": 0
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 2
          },
          "symbol": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.constructor.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.constructor.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.constructor.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.constructor.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.getApproved": {
        "decorators": ["view"],
        "pc": 1866,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.getApproved.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.getApproved.Args",
        "members": {
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.getApproved.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.getApproved.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.getApproved.Return": {
        "cairo_type": "(approved: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.getApproved.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.isApprovedForAll": {
        "decorators": ["view"],
        "pc": 1902,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.isApprovedForAll.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.isApprovedForAll.Args",
        "members": {
          "operator": {
            "cairo_type": "felt",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.isApprovedForAll.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.isApprovedForAll.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.isApprovedForAll.Return": {
        "cairo_type": "(approved: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.isApprovedForAll.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.mint": {
        "decorators": ["external"],
        "pc": 2134,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.mint.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.mint.Args",
        "members": {
          "to": {
            "cairo_type": "felt",
            "offset": 0
          },
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.mint.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.mint.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.mint.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.mint.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.name": {
        "decorators": ["view"],
        "pc": 1735,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.name.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.name.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.name.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.name.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.name.Return": {
        "cairo_type": "(name: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.name.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.owner": {
        "decorators": ["view"],
        "pc": 1974,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.owner.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.owner.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.owner.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.owner.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.owner.Return": {
        "cairo_type": "(owner: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.owner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.ownerOf": {
        "decorators": ["view"],
        "pc": 1830,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.ownerOf.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.ownerOf.Args",
        "members": {
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.ownerOf.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.ownerOf.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.ownerOf.Return": {
        "cairo_type": "(owner: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.ownerOf.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.renounceOwnership": {
        "decorators": ["external"],
        "pc": 2258,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.renounceOwnership.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.renounceOwnership.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.renounceOwnership.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.renounceOwnership.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.renounceOwnership.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.renounceOwnership.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.safeTransferFrom": {
        "decorators": ["external"],
        "pc": 2091,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.safeTransferFrom.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.safeTransferFrom.Args",
        "members": {
          "data": {
            "cairo_type": "felt*",
            "offset": 5
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 4
          },
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 6,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.safeTransferFrom.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.safeTransferFrom.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.safeTransferFrom.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.safeTransferFrom.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setApprovalForAll": {
        "decorators": ["external"],
        "pc": 2033,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setApprovalForAll.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setApprovalForAll.Args",
        "members": {
          "approved": {
            "cairo_type": "felt",
            "offset": 1
          },
          "operator": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setApprovalForAll.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setApprovalForAll.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setApprovalForAll.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setApprovalForAll.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setTokenURI": {
        "decorators": ["external"],
        "pc": 2199,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setTokenURI.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setTokenURI.Args",
        "members": {
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "tokenURI": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setTokenURI.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setTokenURI.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setTokenURI.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.setTokenURI.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.supportsInterface": {
        "decorators": ["view"],
        "pc": 1701,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.supportsInterface.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.supportsInterface.Args",
        "members": {
          "interfaceId": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.supportsInterface.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.supportsInterface.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.supportsInterface.Return": {
        "cairo_type": "(success: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.supportsInterface.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.symbol": {
        "decorators": ["view"],
        "pc": 1765,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.symbol.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.symbol.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.symbol.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.symbol.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.symbol.Return": {
        "cairo_type": "(symbol: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.symbol.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.tokenURI": {
        "decorators": ["view"],
        "pc": 1938,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.tokenURI.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.tokenURI.Args",
        "members": {
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.tokenURI.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.tokenURI.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.tokenURI.Return": {
        "cairo_type": "(tokenURI: felt)",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.tokenURI.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferFrom": {
        "decorators": ["external"],
        "pc": 2060,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferFrom.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferFrom.Args",
        "members": {
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "tokenId": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferFrom.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferFrom.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferFrom.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferFrom.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferOwnership": {
        "decorators": ["external"],
        "pc": 2233,
        "type": "function"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferOwnership.Args": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferOwnership.Args",
        "members": {
          "newOwner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferOwnership.ImplicitArgs": {
        "full_name": "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferOwnership.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferOwnership.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.token.erc721.presets.ERC721MintableBurnable.transferOwnership.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.utils.constants.library.DEFAULT_ADMIN_ROLE": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.utils.constants.library.IACCESSCONTROL_ID": {
        "type": "const",
        "value": 2036718347
      },
      "openzeppelin.utils.constants.library.IACCOUNT_ID": {
        "type": "const",
        "value": 2792084853
      },
      "openzeppelin.utils.constants.library.IERC1155_ID": {
        "type": "const",
        "value": 3652614694
      },
      "openzeppelin.utils.constants.library.IERC1155_METADATA_ID": {
        "type": "const",
        "value": 243872796
      },
      "openzeppelin.utils.constants.library.IERC1155_RECEIVER_ID": {
        "type": "const",
        "value": 1310921440
      },
      "openzeppelin.utils.constants.library.IERC165_ID": {
        "type": "const",
        "value": 33540519
      },
      "openzeppelin.utils.constants.library.IERC721_ENUMERABLE_ID": {
        "type": "const",
        "value": 2014223715
      },
      "openzeppelin.utils.constants.library.IERC721_ID": {
        "type": "const",
        "value": 2158778573
      },
      "openzeppelin.utils.constants.library.IERC721_METADATA_ID": {
        "type": "const",
        "value": 1532892063
      },
      "openzeppelin.utils.constants.library.IERC721_RECEIVER_ID": {
        "type": "const",
        "value": 353073666
      },
      "openzeppelin.utils.constants.library.INVALID_ID": {
        "type": "const",
        "value": 4294967295
      },
      "openzeppelin.utils.constants.library.ON_ERC1155_BATCH_RECEIVED_SELECTOR": {
        "type": "const",
        "value": 3155786881
      },
      "openzeppelin.utils.constants.library.ON_ERC1155_RECEIVED_SELECTOR": {
        "type": "const",
        "value": 4063915617
      },
      "openzeppelin.utils.constants.library.TRANSACTION_VERSION": {
        "type": "const",
        "value": 1
      },
      "openzeppelin.utils.constants.library.UINT8_MAX": {
        "type": "const",
        "value": 255
      },
      "starkware.cairo.common.alloc.alloc": {
        "decorators": [],
        "pc": 0,
        "type": "function"
      },
      "starkware.cairo.common.alloc.alloc.Args": {
        "full_name": "starkware.cairo.common.alloc.alloc.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
        "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.alloc.alloc.Return": {
        "cairo_type": "(ptr: felt*)",
        "type": "type_definition"
      },
      "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.bitwise.ALL_ONES": {
        "type": "const",
        "value": -106710729501573572985208420194530329073740042555888586719234
      },
      "starkware.cairo.common.bitwise.BitwiseBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
        "type": "alias"
      },
      "starkware.cairo.common.bool.FALSE": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.bool.TRUE": {
        "type": "const",
        "value": 1
      },
      "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
        "members": {
          "x": {
            "cairo_type": "felt",
            "offset": 0
          },
          "x_and_y": {
            "cairo_type": "felt",
            "offset": 2
          },
          "x_or_y": {
            "cairo_type": "felt",
            "offset": 4
          },
          "x_xor_y": {
            "cairo_type": "felt",
            "offset": 3
          },
          "y": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 5,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
        "members": {
          "m": {
            "cairo_type": "felt",
            "offset": 4
          },
          "p": {
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
            "offset": 0
          },
          "q": {
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
            "offset": 2
          },
          "r": {
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
            "offset": 5
          }
        },
        "size": 7,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.EcPoint": {
        "destination": "starkware.cairo.common.ec_point.EcPoint",
        "type": "alias"
      },
      "starkware.cairo.common.cairo_builtins.HashBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "members": {
          "result": {
            "cairo_type": "felt",
            "offset": 2
          },
          "x": {
            "cairo_type": "felt",
            "offset": 0
          },
          "y": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
        "members": {
          "input": {
            "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
            "offset": 0
          },
          "output": {
            "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
            "offset": 8
          }
        },
        "size": 16,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
        "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
        "type": "alias"
      },
      "starkware.cairo.common.cairo_builtins.PoseidonBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.PoseidonBuiltin",
        "members": {
          "input": {
            "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
            "offset": 0
          },
          "output": {
            "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
            "offset": 3
          }
        },
        "size": 6,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.PoseidonBuiltinState": {
        "destination": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
        "type": "alias"
      },
      "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
        "members": {
          "message": {
            "cairo_type": "felt",
            "offset": 1
          },
          "pub_key": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.dict_access.DictAccess": {
        "full_name": "starkware.cairo.common.dict_access.DictAccess",
        "members": {
          "key": {
            "cairo_type": "felt",
            "offset": 0
          },
          "new_value": {
            "cairo_type": "felt",
            "offset": 2
          },
          "prev_value": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.cairo.common.ec_point.EcPoint": {
        "full_name": "starkware.cairo.common.ec_point.EcPoint",
        "members": {
          "x": {
            "cairo_type": "felt",
            "offset": 0
          },
          "y": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.hash.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "starkware.cairo.common.hash.hash2": {
        "decorators": [],
        "pc": 3,
        "type": "function"
      },
      "starkware.cairo.common.hash.hash2.Args": {
        "full_name": "starkware.cairo.common.hash.hash2.Args",
        "members": {
          "x": {
            "cairo_type": "felt",
            "offset": 0
          },
          "y": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.hash.hash2.ImplicitArgs": {
        "full_name": "starkware.cairo.common.hash.hash2.ImplicitArgs",
        "members": {
          "hash_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.hash.hash2.Return": {
        "cairo_type": "(result: felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.hash.hash2.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
        "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
        "members": {
          "s0": {
            "cairo_type": "felt",
            "offset": 0
          },
          "s1": {
            "cairo_type": "felt",
            "offset": 1
          },
          "s2": {
            "cairo_type": "felt",
            "offset": 2
          },
          "s3": {
            "cairo_type": "felt",
            "offset": 3
          },
          "s4": {
            "cairo_type": "felt",
            "offset": 4
          },
          "s5": {
            "cairo_type": "felt",
            "offset": 5
          },
          "s6": {
            "cairo_type": "felt",
            "offset": 6
          },
          "s7": {
            "cairo_type": "felt",
            "offset": 7
          }
        },
        "size": 8,
        "type": "struct"
      },
      "starkware.cairo.common.math.FALSE": {
        "destination": "starkware.cairo.common.bool.FALSE",
        "type": "alias"
      },
      "starkware.cairo.common.math.TRUE": {
        "destination": "starkware.cairo.common.bool.TRUE",
        "type": "alias"
      },
      "starkware.cairo.common.math.assert_250_bit": {
        "decorators": ["known_ap_change"],
        "pc": 80,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_250_bit.Args": {
        "full_name": "starkware.cairo.common.math.assert_250_bit.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_250_bit.HIGH_BOUND": {
        "type": "const",
        "value": 5316911983139663491615228241121378304
      },
      "starkware.cairo.common.math.assert_250_bit.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_250_bit.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_250_bit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_250_bit.SHIFT": {
        "type": "const",
        "value": 340282366920938463463374607431768211456
      },
      "starkware.cairo.common.math.assert_250_bit.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_250_bit.UPPER_BOUND": {
        "type": "const",
        "value": 1809251394333065553493296640760748560207343510400633813116524750123642650624
      },
      "starkware.cairo.common.math.assert_250_bit.high": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_250_bit.high",
        "references": [
          {
            "ap_tracking_data": {
              "group": 10,
              "offset": 0
            },
            "pc": 80,
            "value": "[cast([fp + (-4)] + 1, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_250_bit.low": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_250_bit.low",
        "references": [
          {
            "ap_tracking_data": {
              "group": 10,
              "offset": 0
            },
            "pc": 80,
            "value": "[cast([fp + (-4)], felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_250_bit.value": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_250_bit.value",
        "references": [
          {
            "ap_tracking_data": {
              "group": 10,
              "offset": 0
            },
            "pc": 80,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_le_felt": {
        "decorators": ["known_ap_change"],
        "pc": 93,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_le_felt.Args": {
        "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          },
          "b": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_2_HIGH": {
        "type": "const",
        "value": 5316911983139663648412552867652567041
      },
      "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_3_HIGH": {
        "type": "const",
        "value": 3544607988759775765608368578435044694
      },
      "starkware.cairo.common.math.assert_le_felt.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_le_felt.a": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_le_felt.a",
        "references": [
          {
            "ap_tracking_data": {
              "group": 11,
              "offset": 0
            },
            "pc": 93,
            "value": "[cast(fp + (-4), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_le_felt.b": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_le_felt.b",
        "references": [
          {
            "ap_tracking_data": {
              "group": 11,
              "offset": 0
            },
            "pc": 93,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_le_felt.range_check_ptr": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_le_felt.range_check_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 11,
              "offset": 0
            },
            "pc": 93,
            "value": "[cast(fp + (-5), felt*)]"
          },
          {
            "ap_tracking_data": {
              "group": 11,
              "offset": 8
            },
            "pc": 103,
            "value": "cast([fp + (-5)] + 4, felt)"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_le_felt.skip_exclude_a": {
        "pc": 117,
        "type": "label"
      },
      "starkware.cairo.common.math.assert_le_felt.skip_exclude_b_minus_a": {
        "pc": 129,
        "type": "label"
      },
      "starkware.cairo.common.math.assert_not_equal": {
        "decorators": [],
        "pc": 74,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_not_equal.Args": {
        "full_name": "starkware.cairo.common.math.assert_not_equal.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          },
          "b": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_not_equal.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_not_equal.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_not_equal.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_not_equal.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_not_equal.a": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_not_equal.a",
        "references": [
          {
            "ap_tracking_data": {
              "group": 9,
              "offset": 0
            },
            "pc": 74,
            "value": "[cast(fp + (-4), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_not_equal.b": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_not_equal.b",
        "references": [
          {
            "ap_tracking_data": {
              "group": 9,
              "offset": 0
            },
            "pc": 74,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_not_zero": {
        "decorators": [],
        "pc": 69,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_not_zero.Args": {
        "full_name": "starkware.cairo.common.math.assert_not_zero.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_not_zero.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_not_zero.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_not_zero.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_not_zero.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_not_zero.value": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_not_zero.value",
        "references": [
          {
            "ap_tracking_data": {
              "group": 8,
              "offset": 0
            },
            "pc": 69,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math_cmp.RC_BOUND": {
        "type": "const",
        "value": 340282366920938463463374607431768211456
      },
      "starkware.cairo.common.math_cmp.assert_le_felt": {
        "destination": "starkware.cairo.common.math.assert_le_felt",
        "type": "alias"
      },
      "starkware.cairo.common.math_cmp.assert_lt_felt": {
        "destination": "starkware.cairo.common.math.assert_lt_felt",
        "type": "alias"
      },
      "starkware.cairo.common.math_cmp.is_le": {
        "decorators": ["known_ap_change"],
        "pc": 211,
        "type": "function"
      },
      "starkware.cairo.common.math_cmp.is_le.Args": {
        "full_name": "starkware.cairo.common.math_cmp.is_le.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          },
          "b": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.math_cmp.is_le.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math_cmp.is_le.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math_cmp.is_le.Return": {
        "cairo_type": "felt",
        "type": "type_definition"
      },
      "starkware.cairo.common.math_cmp.is_le.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math_cmp.is_nn": {
        "decorators": ["known_ap_change"],
        "pc": 178,
        "type": "function"
      },
      "starkware.cairo.common.math_cmp.is_nn.Args": {
        "full_name": "starkware.cairo.common.math_cmp.is_nn.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math_cmp.is_nn.Return": {
        "cairo_type": "felt",
        "type": "type_definition"
      },
      "starkware.cairo.common.math_cmp.is_nn.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math_cmp.is_nn.a": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math_cmp.is_nn.a",
        "references": [
          {
            "ap_tracking_data": {
              "group": 13,
              "offset": 0
            },
            "pc": 178,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math_cmp.is_nn.need_felt_comparison": {
        "pc": 202,
        "type": "label"
      },
      "starkware.cairo.common.math_cmp.is_nn.out_of_range": {
        "pc": 188,
        "type": "label"
      },
      "starkware.cairo.common.memcpy.memcpy": {
        "decorators": [],
        "pc": 9,
        "type": "function"
      },
      "starkware.cairo.common.memcpy.memcpy.Args": {
        "full_name": "starkware.cairo.common.memcpy.memcpy.Args",
        "members": {
          "dst": {
            "cairo_type": "felt*",
            "offset": 0
          },
          "len": {
            "cairo_type": "felt",
            "offset": 2
          },
          "src": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.cairo.common.memcpy.memcpy.ImplicitArgs": {
        "full_name": "starkware.cairo.common.memcpy.memcpy.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.memcpy.memcpy.LoopFrame": {
        "full_name": "starkware.cairo.common.memcpy.memcpy.LoopFrame",
        "members": {
          "dst": {
            "cairo_type": "felt*",
            "offset": 0
          },
          "src": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.memcpy.memcpy.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.memcpy.memcpy.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.memcpy.memcpy.continue_copying": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.memcpy.memcpy.continue_copying",
        "references": [
          {
            "ap_tracking_data": {
              "group": 2,
              "offset": 3
            },
            "pc": 16,
            "value": "[cast(ap, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.memcpy.memcpy.len": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.memcpy.memcpy.len",
        "references": [
          {
            "ap_tracking_data": {
              "group": 2,
              "offset": 0
            },
            "pc": 9,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.memcpy.memcpy.loop": {
        "pc": 14,
        "type": "label"
      },
      "starkware.cairo.common.poseidon_state.PoseidonBuiltinState": {
        "full_name": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
        "members": {
          "s0": {
            "cairo_type": "felt",
            "offset": 0
          },
          "s1": {
            "cairo_type": "felt",
            "offset": 1
          },
          "s2": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.cairo.common.pow.assert_le": {
        "destination": "starkware.cairo.common.math.assert_le",
        "type": "alias"
      },
      "starkware.cairo.common.pow.get_ap": {
        "destination": "starkware.cairo.common.registers.get_ap",
        "type": "alias"
      },
      "starkware.cairo.common.pow.get_fp_and_pc": {
        "destination": "starkware.cairo.common.registers.get_fp_and_pc",
        "type": "alias"
      },
      "starkware.cairo.common.registers.get_ap": {
        "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
        "type": "alias"
      },
      "starkware.cairo.common.registers.get_fp_and_pc": {
        "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.ALL_ONES": {
        "type": "const",
        "value": 340282366920938463463374607431768211455
      },
      "starkware.cairo.common.uint256.BitwiseBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.HALF_SHIFT": {
        "type": "const",
        "value": 18446744073709551616
      },
      "starkware.cairo.common.uint256.SHIFT": {
        "type": "const",
        "value": 340282366920938463463374607431768211456
      },
      "starkware.cairo.common.uint256.Uint256": {
        "full_name": "starkware.cairo.common.uint256.Uint256",
        "members": {
          "high": {
            "cairo_type": "felt",
            "offset": 1
          },
          "low": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.assert_in_range": {
        "destination": "starkware.cairo.common.math.assert_in_range",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.assert_le": {
        "destination": "starkware.cairo.common.math.assert_le",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.assert_nn_le": {
        "destination": "starkware.cairo.common.math.assert_nn_le",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.assert_not_zero": {
        "destination": "starkware.cairo.common.math.assert_not_zero",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.bitwise_and": {
        "destination": "starkware.cairo.common.bitwise.bitwise_and",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.bitwise_or": {
        "destination": "starkware.cairo.common.bitwise.bitwise_or",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.bitwise_xor": {
        "destination": "starkware.cairo.common.bitwise.bitwise_xor",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.get_ap": {
        "destination": "starkware.cairo.common.registers.get_ap",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.get_fp_and_pc": {
        "destination": "starkware.cairo.common.registers.get_fp_and_pc",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.is_le": {
        "destination": "starkware.cairo.common.math_cmp.is_le",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.pow": {
        "destination": "starkware.cairo.common.pow.pow",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.uint256_add": {
        "decorators": [],
        "pc": 221,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_add.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_add.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_add.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_add.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_add.Return": {
        "cairo_type": "(res: starkware.cairo.common.uint256.Uint256, carry: felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_add.SIZEOF_LOCALS": {
        "type": "const",
        "value": 4
      },
      "starkware.cairo.common.uint256.uint256_add.a": {
        "cairo_type": "starkware.cairo.common.uint256.Uint256",
        "full_name": "starkware.cairo.common.uint256.uint256_add.a",
        "references": [
          {
            "ap_tracking_data": {
              "group": 16,
              "offset": 0
            },
            "pc": 221,
            "value": "[cast(fp + (-6), starkware.cairo.common.uint256.Uint256*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.uint256.uint256_add.b": {
        "cairo_type": "starkware.cairo.common.uint256.Uint256",
        "full_name": "starkware.cairo.common.uint256.uint256_add.b",
        "references": [
          {
            "ap_tracking_data": {
              "group": 16,
              "offset": 0
            },
            "pc": 221,
            "value": "[cast(fp + (-4), starkware.cairo.common.uint256.Uint256*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.uint256.uint256_add.carry_high": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.uint256.uint256_add.carry_high",
        "references": [
          {
            "ap_tracking_data": {
              "group": 16,
              "offset": 4
            },
            "pc": 223,
            "value": "[cast(fp + 3, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.uint256.uint256_add.carry_low": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.uint256.uint256_add.carry_low",
        "references": [
          {
            "ap_tracking_data": {
              "group": 16,
              "offset": 4
            },
            "pc": 223,
            "value": "[cast(fp + 2, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.uint256.uint256_check": {
        "decorators": [],
        "pc": 216,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_check.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_check.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_check.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_check.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_check.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_check.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.uint256.uint256_le": {
        "decorators": [],
        "pc": 260,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_le.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_le.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_le.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_le.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_le.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_le.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.uint256.uint256_lt": {
        "decorators": [],
        "pc": 243,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_lt.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_lt.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_lt.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_lt.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_lt.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_lt.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.uint256.uint256_neg": {
        "decorators": [],
        "pc": 280,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_neg.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_neg.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_neg.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_neg.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_neg.Return": {
        "cairo_type": "(res: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_neg.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.uint256.uint256_not": {
        "decorators": [],
        "pc": 272,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_not.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_not.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_not.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_not.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_not.Return": {
        "cairo_type": "(res: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_not.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.uint256.uint256_sub": {
        "decorators": [],
        "pc": 295,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_sub.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_sub.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_sub.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_sub.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_sub.Return": {
        "cairo_type": "(res: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_sub.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.storage.ADDR_BOUND": {
        "type": "const",
        "value": -106710729501573572985208420194530329073740042555888586719489
      },
      "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
        "type": "const",
        "value": 256
      },
      "starkware.starknet.common.storage.assert_250_bit": {
        "destination": "starkware.cairo.common.math.assert_250_bit",
        "type": "alias"
      },
      "starkware.starknet.common.storage.normalize_address": {
        "decorators": ["known_ap_change"],
        "pc": 138,
        "type": "function"
      },
      "starkware.starknet.common.storage.normalize_address.Args": {
        "full_name": "starkware.starknet.common.storage.normalize_address.Args",
        "members": {
          "addr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.storage.normalize_address.ImplicitArgs": {
        "full_name": "starkware.starknet.common.storage.normalize_address.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.storage.normalize_address.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.storage.normalize_address.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.storage.normalize_address.addr": {
        "cairo_type": "felt",
        "full_name": "starkware.starknet.common.storage.normalize_address.addr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 12,
              "offset": 0
            },
            "pc": 138,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.storage.normalize_address.is_250": {
        "cairo_type": "felt",
        "full_name": "starkware.starknet.common.storage.normalize_address.is_250",
        "references": [
          {
            "ap_tracking_data": {
              "group": 12,
              "offset": 2
            },
            "pc": 158,
            "value": "[cast(ap + (-1), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.storage.normalize_address.is_small": {
        "cairo_type": "felt",
        "full_name": "starkware.starknet.common.storage.normalize_address.is_small",
        "references": [
          {
            "ap_tracking_data": {
              "group": 12,
              "offset": 1
            },
            "pc": 140,
            "value": "[cast(ap + (-1), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
        "type": "const",
        "value": 20853273475220472486191784820
      },
      "starkware.starknet.common.syscalls.CallContract": {
        "full_name": "starkware.starknet.common.syscalls.CallContract",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
            "offset": 5
          }
        },
        "size": 7,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.CallContractRequest": {
        "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
        "members": {
          "calldata": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "calldata_size": {
            "cairo_type": "felt",
            "offset": 3
          },
          "contract_address": {
            "cairo_type": "felt",
            "offset": 1
          },
          "function_selector": {
            "cairo_type": "felt",
            "offset": 2
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 5,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.CallContractResponse": {
        "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
        "members": {
          "retdata": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "retdata_size": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
        "type": "const",
        "value": 21167594061783206823196716140
      },
      "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
        "type": "const",
        "value": 23274015802972845247556842986379118667122
      },
      "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
        "type": "const",
        "value": 75202468540281
      },
      "starkware.starknet.common.syscalls.Deploy": {
        "full_name": "starkware.starknet.common.syscalls.Deploy",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.DeployRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.DeployResponse",
            "offset": 6
          }
        },
        "size": 9,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DeployRequest": {
        "full_name": "starkware.starknet.common.syscalls.DeployRequest",
        "members": {
          "class_hash": {
            "cairo_type": "felt",
            "offset": 1
          },
          "constructor_calldata": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "constructor_calldata_size": {
            "cairo_type": "felt",
            "offset": 3
          },
          "contract_address_salt": {
            "cairo_type": "felt",
            "offset": 2
          },
          "deploy_from_zero": {
            "cairo_type": "felt",
            "offset": 5
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 6,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DeployResponse": {
        "full_name": "starkware.starknet.common.syscalls.DeployResponse",
        "members": {
          "constructor_retdata": {
            "cairo_type": "felt*",
            "offset": 2
          },
          "constructor_retdata_size": {
            "cairo_type": "felt",
            "offset": 1
          },
          "contract_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DictAccess": {
        "destination": "starkware.cairo.common.dict_access.DictAccess",
        "type": "alias"
      },
      "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
        "type": "const",
        "value": 1280709301550335749748
      },
      "starkware.starknet.common.syscalls.EmitEvent": {
        "full_name": "starkware.starknet.common.syscalls.EmitEvent",
        "members": {
          "data": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 3
          },
          "keys": {
            "cairo_type": "felt*",
            "offset": 2
          },
          "keys_len": {
            "cairo_type": "felt",
            "offset": 1
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 5,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
        "type": "const",
        "value": 1448089106835523001438702345020786
      },
      "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
        "type": "const",
        "value": 24294903732626645868215235778792757751152
      },
      "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
        "type": "const",
        "value": 94901967781393078444254803017658102643
      },
      "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
        "type": "const",
        "value": 6219495360805491471215297013070624192820083
      },
      "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
        "type": "const",
        "value": 1592190833581991703053805829594610833820054387
      },
      "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
        "type": "const",
        "value": 1317029390204112103023
      },
      "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
        "type": "const",
        "value": 1448089128652340074717162277007973
      },
      "starkware.starknet.common.syscalls.GetBlockNumber": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
        "members": {
          "block_number": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockTimestamp": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
        "members": {
          "block_timestamp": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetCallerAddress": {
        "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
        "members": {
          "caller_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetContractAddress": {
        "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetContractAddressRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetContractAddressResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
        "members": {
          "contract_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetSequencerAddress": {
        "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
        "members": {
          "sequencer_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxInfo": {
        "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxInfoRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxInfoResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
        "members": {
          "tx_info": {
            "cairo_type": "starkware.starknet.common.syscalls.TxInfo*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxSignature": {
        "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
        "members": {
          "signature": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "signature_len": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
        "type": "const",
        "value": 436233452754198157705746250789557519228244616562
      },
      "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
        "type": "const",
        "value": 92376026794327011772951660
      },
      "starkware.starknet.common.syscalls.LibraryCall": {
        "full_name": "starkware.starknet.common.syscalls.LibraryCall",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
            "offset": 5
          }
        },
        "size": 7,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.LibraryCallRequest": {
        "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
        "members": {
          "calldata": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "calldata_size": {
            "cairo_type": "felt",
            "offset": 3
          },
          "class_hash": {
            "cairo_type": "felt",
            "offset": 1
          },
          "function_selector": {
            "cairo_type": "felt",
            "offset": 2
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 5,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.REPLACE_CLASS_SELECTOR": {
        "type": "const",
        "value": 25500403217443378527601783667
      },
      "starkware.starknet.common.syscalls.ReplaceClass": {
        "full_name": "starkware.starknet.common.syscalls.ReplaceClass",
        "members": {
          "class_hash": {
            "cairo_type": "felt",
            "offset": 1
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
        "type": "const",
        "value": 433017908768303439907196859243777073
      },
      "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
        "type": "const",
        "value": 100890693370601760042082660
      },
      "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
        "type": "const",
        "value": 25828017502874050592466629733
      },
      "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
        "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
        "members": {
          "payload_ptr": {
            "cairo_type": "felt*",
            "offset": 3
          },
          "payload_size": {
            "cairo_type": "felt",
            "offset": 2
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to_address": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageRead": {
        "full_name": "starkware.starknet.common.syscalls.StorageRead",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageReadRequest": {
        "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
        "members": {
          "address": {
            "cairo_type": "felt",
            "offset": 1
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageReadResponse": {
        "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageWrite": {
        "full_name": "starkware.starknet.common.syscalls.StorageWrite",
        "members": {
          "address": {
            "cairo_type": "felt",
            "offset": 1
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.TxInfo": {
        "full_name": "starkware.starknet.common.syscalls.TxInfo",
        "members": {
          "account_contract_address": {
            "cairo_type": "felt",
            "offset": 1
          },
          "chain_id": {
            "cairo_type": "felt",
            "offset": 6
          },
          "max_fee": {
            "cairo_type": "felt",
            "offset": 2
          },
          "nonce": {
            "cairo_type": "felt",
            "offset": 7
          },
          "signature": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "signature_len": {
            "cairo_type": "felt",
            "offset": 3
          },
          "transaction_hash": {
            "cairo_type": "felt",
            "offset": 5
          },
          "version": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 8,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.call_contract": {
        "decorators": [],
        "pc": 24,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.call_contract.Args": {
        "full_name": "starkware.starknet.common.syscalls.call_contract.Args",
        "members": {
          "calldata": {
            "cairo_type": "felt*",
            "offset": 3
          },
          "calldata_size": {
            "cairo_type": "felt",
            "offset": 2
          },
          "contract_address": {
            "cairo_type": "felt",
            "offset": 0
          },
          "function_selector": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.call_contract.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.call_contract.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.call_contract.Return": {
        "cairo_type": "(retdata_size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.call_contract.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.call_contract.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.call_contract.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 3,
              "offset": 0
            },
            "pc": 24,
            "value": "[cast(fp + (-7), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 3,
              "offset": 1
            },
            "pc": 31,
            "value": "cast([fp + (-7)] + 7, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.emit_event": {
        "decorators": [],
        "pc": 59,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.emit_event.Args": {
        "full_name": "starkware.starknet.common.syscalls.emit_event.Args",
        "members": {
          "data": {
            "cairo_type": "felt*",
            "offset": 3
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 2
          },
          "keys": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "keys_len": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.emit_event.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.emit_event.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.emit_event.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.emit_event.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.emit_event.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.emit_event.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 7,
              "offset": 0
            },
            "pc": 59,
            "value": "[cast(fp + (-7), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 7,
              "offset": 1
            },
            "pc": 66,
            "value": "cast([fp + (-7)] + 5, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.get_caller_address": {
        "decorators": [],
        "pc": 36,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.get_caller_address.Args": {
        "full_name": "starkware.starknet.common.syscalls.get_caller_address.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_caller_address.Return": {
        "cairo_type": "(caller_address: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.get_caller_address.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 4,
              "offset": 0
            },
            "pc": 36,
            "value": "[cast(fp + (-3), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 4,
              "offset": 1
            },
            "pc": 39,
            "value": "cast([fp + (-3)] + 2, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.storage_read": {
        "decorators": [],
        "pc": 43,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.storage_read.Args": {
        "full_name": "starkware.starknet.common.syscalls.storage_read.Args",
        "members": {
          "address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_read.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.storage_read.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_read.Return": {
        "cairo_type": "(value: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.storage_read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.storage_read.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.storage_read.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 5,
              "offset": 0
            },
            "pc": 43,
            "value": "[cast(fp + (-4), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 5,
              "offset": 1
            },
            "pc": 47,
            "value": "cast([fp + (-4)] + 3, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.storage_write": {
        "decorators": [],
        "pc": 51,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.storage_write.Args": {
        "full_name": "starkware.starknet.common.syscalls.storage_write.Args",
        "members": {
          "address": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_write.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.storage_write.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.storage_write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.storage_write.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.storage_write.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 6,
              "offset": 0
            },
            "pc": 51,
            "value": "[cast(fp + (-5), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 6,
              "offset": 1
            },
            "pc": 56,
            "value": "cast([fp + (-5)] + 3, felt*)"
          }
        ],
        "type": "reference"
      }
    },
    "main_scope": "__main__",
    "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
    "reference_manager": {
      "references": [
        {
          "ap_tracking_data": {
            "group": 2,
            "offset": 0
          },
          "pc": 9,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 2,
            "offset": 3
          },
          "pc": 16,
          "value": "[cast(ap, felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 3,
            "offset": 0
          },
          "pc": 24,
          "value": "[cast(fp + (-7), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 4,
            "offset": 0
          },
          "pc": 36,
          "value": "[cast(fp + (-3), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 5,
            "offset": 0
          },
          "pc": 43,
          "value": "[cast(fp + (-4), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 6,
            "offset": 0
          },
          "pc": 51,
          "value": "[cast(fp + (-5), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 7,
            "offset": 0
          },
          "pc": 59,
          "value": "[cast(fp + (-7), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 8,
            "offset": 0
          },
          "pc": 69,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 9,
            "offset": 0
          },
          "pc": 74,
          "value": "[cast(fp + (-4), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 9,
            "offset": 0
          },
          "pc": 74,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 10,
            "offset": 0
          },
          "pc": 80,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 10,
            "offset": 0
          },
          "pc": 80,
          "value": "[cast([fp + (-4)], felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 10,
            "offset": 0
          },
          "pc": 80,
          "value": "[cast([fp + (-4)] + 1, felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 11,
            "offset": 0
          },
          "pc": 93,
          "value": "[cast(fp + (-4), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 11,
            "offset": 0
          },
          "pc": 93,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 11,
            "offset": 0
          },
          "pc": 93,
          "value": "[cast(fp + (-5), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 12,
            "offset": 0
          },
          "pc": 138,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 12,
            "offset": 1
          },
          "pc": 140,
          "value": "[cast(ap + (-1), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 12,
            "offset": 2
          },
          "pc": 158,
          "value": "[cast(ap + (-1), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 13,
            "offset": 0
          },
          "pc": 178,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 16,
            "offset": 0
          },
          "pc": 221,
          "value": "[cast(fp + (-6), starkware.cairo.common.uint256.Uint256*)]"
        },
        {
          "ap_tracking_data": {
            "group": 16,
            "offset": 0
          },
          "pc": 221,
          "value": "[cast(fp + (-4), starkware.cairo.common.uint256.Uint256*)]"
        },
        {
          "ap_tracking_data": {
            "group": 16,
            "offset": 4
          },
          "pc": 223,
          "value": "[cast(fp + 2, felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 16,
            "offset": 4
          },
          "pc": 223,
          "value": "[cast(fp + 3, felt*)]"
        }
      ]
    }
  }
}
