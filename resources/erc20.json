{
  "abi": [
    {
      "members": [
        {
          "name": "low",
          "offset": 0,
          "type": "felt"
        },
        {
          "name": "high",
          "offset": 1,
          "type": "felt"
        }
      ],
      "name": "Uint256",
      "size": 2,
      "type": "struct"
    },
    {
      "data": [
        {
          "name": "from_",
          "type": "felt"
        },
        {
          "name": "to",
          "type": "felt"
        },
        {
          "name": "value",
          "type": "Uint256"
        }
      ],
      "keys": [],
      "name": "Transfer",
      "type": "event"
    },
    {
      "data": [
        {
          "name": "owner",
          "type": "felt"
        },
        {
          "name": "spender",
          "type": "felt"
        },
        {
          "name": "value",
          "type": "Uint256"
        }
      ],
      "keys": [],
      "name": "Approval",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "name",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "symbol",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "totalSupply",
          "type": "Uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "decimals",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "account",
          "type": "felt"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "Uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "owner",
          "type": "felt"
        },
        {
          "name": "spender",
          "type": "felt"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "Uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permittedMinter",
      "outputs": [
        {
          "name": "minter",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "name": "res",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_version",
      "outputs": [
        {
          "name": "version",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_identity",
      "outputs": [
        {
          "name": "identity",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "init_vector_len",
          "type": "felt"
        },
        {
          "name": "init_vector",
          "type": "felt*"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "recipient",
          "type": "felt"
        },
        {
          "name": "amount",
          "type": "Uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "felt"
        }
      ],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "sender",
          "type": "felt"
        },
        {
          "name": "recipient",
          "type": "felt"
        },
        {
          "name": "amount",
          "type": "Uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "felt"
        }
      ],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "spender",
          "type": "felt"
        },
        {
          "name": "amount",
          "type": "Uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "felt"
        }
      ],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "spender",
          "type": "felt"
        },
        {
          "name": "added_value",
          "type": "Uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "success",
          "type": "felt"
        }
      ],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "spender",
          "type": "felt"
        },
        {
          "name": "subtracted_value",
          "type": "Uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "success",
          "type": "felt"
        }
      ],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "recipient",
          "type": "felt"
        },
        {
          "name": "amount",
          "type": "Uint256"
        }
      ],
      "name": "permissionedMint",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "account",
          "type": "felt"
        },
        {
          "name": "amount",
          "type": "Uint256"
        }
      ],
      "name": "permissionedBurn",
      "outputs": [],
      "type": "function"
    }
  ],
  "entry_points_by_type": {
    "CONSTRUCTOR": [],
    "EXTERNAL": [
      {
        "offset": "0x65d",
        "selector": "0x151e58b29179122a728eab07c8847e5baf5802379c5db3a7d57a8263a7bd1d"
      },
      {
        "offset": "0x574",
        "selector": "0x41b033f4a31df8067c24d1e9b550a2ce75fd4a29e1147af9752174f0e6cb20"
      },
      {
        "offset": "0x2cb",
        "selector": "0x4c4fb1ab068f6039d5780c68dd0fa2f8742cceb3426d19667778ca7f3518a9"
      },
      {
        "offset": "0x4f1",
        "selector": "0x79dc0da7c54b95f10aa182ad0a46400db63156920adb65eca2654c0945a463"
      },
      {
        "offset": "0x2ad",
        "selector": "0x80aa9fdbfaf9615e4afc7f5f722e265daca5ccc655360fa5ccacf9c267936d"
      },
      {
        "offset": "0x524",
        "selector": "0x83afd3f4caedc6eebf44246fe54e38c95e3179a5ec9ea81740eca5b482d12e"
      },
      {
        "offset": "0x682",
        "selector": "0xd63a78e4cd7fb4c41bc18d089154af78d400a5e837f270baea6cf8db18c8dd"
      },
      {
        "offset": "0x5e9",
        "selector": "0x16cc063b8338363cf388ce7fe1df408bf10f16cd51635d392e21d852fafb683"
      },
      {
        "offset": "0x638",
        "selector": "0x1aaf3e6107dd1349c81543ff4221a326814f77dadcc5810807b74f1a49ded4e"
      },
      {
        "offset": "0x30f",
        "selector": "0x1e888a1026b19c8c0b57c72d63ed1737106aa10034105b980ba117bd0c29fe1"
      },
      {
        "offset": "0x28e",
        "selector": "0x216b05c387bab9ac31918a3e61672f4618601f3c598a2f3f2710f37053e1ea4"
      },
      {
        "offset": "0x5a1",
        "selector": "0x219209e083275171774dab1df80982e9df2096516f06319c5c6d71ae0a8480c"
      },
      {
        "offset": "0x4bd",
        "selector": "0x2a4bb4205277617b698a9a2950b938d0a236dd4619f82f05bec02bdbd245fab"
      },
      {
        "offset": "0x4d5",
        "selector": "0x2c4943a27e820803a6ef49bb04b629950e2de615ab9ac0fb8baef037b168782"
      },
      {
        "offset": "0x2eb",
        "selector": "0x2e4263afad30923c891518314c3c95dbe830a16874e8abc5777a9a20b54c76e"
      },
      {
        "offset": "0x442",
        "selector": "0x358a2fe57368393087d3e6d24f1e04741c5bdc85e3e23790253e377f55c391e"
      },
      {
        "offset": "0x270",
        "selector": "0x361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60"
      },
      {
        "offset": "0x48d",
        "selector": "0x3c0ba99f1a18bcdc81fcbcb6b4f15a9a6725f937075aed6fac107ffcb147068"
      }
    ],
    "L1_HANDLER": []
  },
  "program": {
    "attributes": [
      {
        "accessible_scopes": [
          "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable",
          "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.only_uninitialized"
        ],
        "end_pc": 1187,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 79,
            "offset": 28
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1185,
        "value": "ALREADY_INITIALIZED"
      },
      {
        "accessible_scopes": ["__main__", "__main__", "__main__.initialize"],
        "end_pc": 1256,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 87,
            "offset": 60
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 1254,
        "value": "ILLEGAL_INIT_SIZE"
      }
    ],
    "builtins": ["pedersen", "range_check"],
    "compiler_version": "0.10.2",
    "data": [
      "0x40780017fff7fff",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x400380007ffb7ffc",
      "0x400380017ffb7ffd",
      "0x482680017ffb8000",
      "0x3",
      "0x480280027ffb8000",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffd",
      "0x4",
      "0x400780017fff7ffd",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x400380007ffc7ffd",
      "0x482680017ffc8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x48297ffc80007ffd",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x3ffffffffffffffffffffffffffffff",
      "0x480280017ffc8000",
      "0x48307fff80007ffe",
      "0x400280027ffc7fff",
      "0x480280017ffc8000",
      "0x484480017fff8000",
      "0x100000000000000000000000000000000",
      "0x480280007ffc8000",
      "0x40317fff7ffe7ffd",
      "0x482680017ffc8000",
      "0x3",
      "0x208b7fff7fff7ffe",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x484480017fff8000",
      "0x2aaaaaaaaaaaab05555555555555556",
      "0x48307fff7ffd8000",
      "0x480280027ffb8000",
      "0x480280037ffb8000",
      "0x484480017fff8000",
      "0x4000000000000088000000000000001",
      "0x48307fff7ffd8000",
      "0xa0680017fff8000",
      "0xe",
      "0x480680017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x48287ffc80007fff",
      "0x40307ffc7ff87fff",
      "0x48297ffd80007ffc",
      "0x482680017ffd8000",
      "0x1",
      "0x48507fff7ffe8000",
      "0x40507ff97ff57fff",
      "0x482680017ffb8000",
      "0x4",
      "0x208b7fff7fff7ffe",
      "0xa0680017fff8000",
      "0xc",
      "0x480680017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x48287ffd80007fff",
      "0x48327fff7ffc8000",
      "0x40307ffa7ff67fff",
      "0x48527ffe7ffc8000",
      "0x40507ff97ff57fff",
      "0x482680017ffb8000",
      "0x4",
      "0x208b7fff7fff7ffe",
      "0x40317ffd7ff97ffd",
      "0x48297ffc80007ffd",
      "0x48527fff7ffc8000",
      "0x40507ffb7ff77fff",
      "0x40780017fff7fff",
      "0x2",
      "0x482680017ffb8000",
      "0x4",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x20680017fff7fff",
      "0x10",
      "0x480a7ffc7fff8000",
      "0x482680017ffd8000",
      "0x11000000000000000000000000000000000000000000000101",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc0",
      "0x480680017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x48127ffe7fff8000",
      "0x48287ffd80007ffe",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffba",
      "0x482680017ffd8000",
      "0x11000000000000000000000000000000000000000000000101",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x20680017fff7fff",
      "0xc",
      "0x40780017fff7fff",
      "0xa",
      "0x480680017fff8000",
      "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff",
      "0x480a7ffc7fff8000",
      "0x48287ffd80007ffe",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffab",
      "0x10780017fff7fff",
      "0x8",
      "0x40780017fff7fff",
      "0xb",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa3",
      "0x480a7ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x47657443616c6c657241646472657373",
      "0x400280007ffd7fff",
      "0x482680017ffd8000",
      "0x2",
      "0x480280017ffd8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x53746f7261676552656164",
      "0x400280007ffc7fff",
      "0x400380017ffc7ffd",
      "0x482680017ffc8000",
      "0x3",
      "0x480280027ffc8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x53746f726167655772697465",
      "0x400280007ffb7fff",
      "0x400380017ffb7ffc",
      "0x400380027ffb7ffd",
      "0x482680017ffb8000",
      "0x3",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x456d69744576656e74",
      "0x400280007ff97fff",
      "0x400380017ff97ffa",
      "0x400380027ff97ffb",
      "0x400380037ff97ffc",
      "0x400380047ff97ffd",
      "0x482680017ff98000",
      "0x5",
      "0x208b7fff7fff7ffe",
      "0xa0680017fff8000",
      "0xa",
      "0x400380007ffc7ffd",
      "0x40780017fff7fff",
      "0x14",
      "0x482680017ffc8000",
      "0x1",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0xa0680017fff8000",
      "0xe",
      "0x484680017ffd8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x482480017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x400280007ffc7fff",
      "0x40780017fff7fff",
      "0x11",
      "0x482680017ffc8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480680017fff8000",
      "0x100000000000000000000000000000000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff6f",
      "0x480680017fff8000",
      "0x0",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x48297ffc80007ffd",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
      "0x208b7fff7fff7ffe",
      "0x400380007ffb7ffc",
      "0x400380017ffb7ffd",
      "0x482680017ffb8000",
      "0x2",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x4",
      "0x404b800280028002",
      "0x404b800380038003",
      "0x482a7ffc7ffa8000",
      "0x4846800180028000",
      "0x100000000000000000000000000000000",
      "0x40327fff80007ffe",
      "0x482a7ffd7ffb8000",
      "0x482880027fff8000",
      "0x4846800180038000",
      "0x100000000000000000000000000000000",
      "0x40327fff80017ffe",
      "0x480a7ff97fff8000",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x480a80037fff8000",
      "0x208b7fff7fff7ffe",
      "0x48297ffd80007ffb",
      "0x20680017fff7fff",
      "0x9",
      "0x480a7ff97fff8000",
      "0x482680017ffa8000",
      "0x1",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffda",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x482680017ffb8000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
      "0x480680017fff8000",
      "0x1",
      "0x48127ffd7fff8000",
      "0x48307ffd80007ffe",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0xffffffffffffffffffffffffffffffff",
      "0x480680017fff8000",
      "0xffffffffffffffffffffffffffffffff",
      "0x480a7ffb7fff8000",
      "0x48287ffc80007ffd",
      "0x48287ffd80007ffd",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff6",
      "0x480680017fff8000",
      "0x1",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbd",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
      "0x48127ffd7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffad",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed7",
      "0x40137fff7fff8000",
      "0x480680017fff8000",
      "0x99cd8bde557814842a3121e8ddfd433a539b8c9f14bf31ebf108d12e6196e9",
      "0x4002800080007fff",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed1",
      "0x40137fff7fff8001",
      "0x4003800080017ffa",
      "0x4003800180017ffb",
      "0x4003800280017ffc",
      "0x4003800380017ffd",
      "0x4826800180018000",
      "0x4",
      "0x480a7ff87fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x480a80007fff8000",
      "0x4828800180007ffc",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5b",
      "0x480a7ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffebc",
      "0x40137fff7fff8000",
      "0x480680017fff8000",
      "0x134692b230b9e1ffa39098904722134159652b09c5bc41d88d6698779d228ff",
      "0x4002800080007fff",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb6",
      "0x40137fff7fff8001",
      "0x4003800080017ffa",
      "0x4003800180017ffb",
      "0x4003800280017ffc",
      "0x4003800380017ffd",
      "0x4826800180018000",
      "0x4",
      "0x480a7ff87fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x480a80007fff8000",
      "0x4828800180007ffc",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff40",
      "0x480a7ff97fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x341c1bdfd89f69748aa00b5742b03adbffd79b8e80cab5c50d91cd8c2a79be1",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff21",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1b",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0xb6ce5410fca59d078ee9b2a4371a9d684c530d697c64fbef0ae6d5e8f0ac72",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff03",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffefd",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x1f0d4aa99431d246bac9b8e48c33e888245b15e9678f64f9bdfc8823dc8f979",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee5",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffedf",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x110e2f729c9c2b988559994a3daccd838cf52faf88e18101373e67dd061455a",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec7",
      "0x48127ffe7fff8000",
      "0x482480017ff78000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec2",
      "0x48127ffe7fff8000",
      "0x48127fee7fff8000",
      "0x48127fee7fff8000",
      "0x48127ff57fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffebb",
      "0x482480017ff88000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb6",
      "0x48127ff07fff8000",
      "0x48127ff07fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480680017fff8000",
      "0x3a4e8ec16e258a799fe707996fd5d21d42b29adc1499a370edf7f809d8c458a",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe1f",
      "0x480a7ffc7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe72",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe94",
      "0x48127ffe7fff8000",
      "0x482480017ff78000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe8f",
      "0x48127ffe7fff8000",
      "0x48127fee7fff8000",
      "0x48127fee7fff8000",
      "0x48127ff57fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
      "0x480a7ff87fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe87",
      "0x482480017ff88000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe82",
      "0x48127ff07fff8000",
      "0x48127ff07fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x3c87bf42ed4f01f11883bf54f43d91d2cbbd5fec26d1df9c74c57ae138800a4",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdeb",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde8",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe3b",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5c",
      "0x48127ffe7fff8000",
      "0x482480017ff78000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe57",
      "0x48127ffe7fff8000",
      "0x48127fee7fff8000",
      "0x48127fee7fff8000",
      "0x48127ff57fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd7",
      "0x480a7ff77fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe4e",
      "0x482480017ff88000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe49",
      "0x48127ff07fff8000",
      "0x48127ff07fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0xff",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdc6",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff19",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff34",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff4f",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff00",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff00",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1e",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffb",
      "0x4003800180007ffc",
      "0x4826800180008000",
      "0x2",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x48127ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
      "0x48127ff37fff8000",
      "0x48127ff37fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee1",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff12",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffb",
      "0x4003800180007ffc",
      "0x4826800180008000",
      "0x2",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
      "0x48127ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x48127ff37fff8000",
      "0x48127ff37fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff25",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffb",
      "0x4003800180007ffc",
      "0x4826800180008000",
      "0x2",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x2",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
      "0x48127ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x48127ff37fff8000",
      "0x48127ff37fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x4",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffce5",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffda0",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec0",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd9b",
      "0x48127fe57fff8000",
      "0x48127fe57fff8000",
      "0x48127ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec8",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe80",
      "0x40137ffe7fff8000",
      "0x40137fff7fff8001",
      "0x48127ffd7fff8000",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd88",
      "0x40137ffd7fff8002",
      "0x40137ffe7fff8003",
      "0x400680017fff7fff",
      "0x0",
      "0x48127fe27fff8000",
      "0x48127fe27fff8000",
      "0x48127ffa7fff8000",
      "0x480a80027fff8000",
      "0x480a80037fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe7f",
      "0x48127ffd7fff8000",
      "0x48127ffe7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdce",
      "0x48127ffe7fff8000",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x480a7ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca6",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffca3",
      "0x480a7ff97fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd5e",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe7e",
      "0x40137ffe7fff8000",
      "0x40137fff7fff8001",
      "0x48127ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd7b",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc8d",
      "0x48127ffc7fff8000",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd95",
      "0x48127f7c7fff8000",
      "0x48127f7c7fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe78",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe61",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd3c",
      "0x48127fe57fff8000",
      "0x48127fe57fff8000",
      "0x48127ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe69",
      "0x48127ffd7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd86",
      "0x48127ffe7fff8000",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc60",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc5d",
      "0x480a7ff97fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd18",
      "0x480a7ff77fff8000",
      "0x480a7ff87fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe81",
      "0x48127ffd7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd81",
      "0x48127ffe7fff8000",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x0",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc3e",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcf9",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe19",
      "0x48127ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd18",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc2a",
      "0x48127ffc7fff8000",
      "0x48127fc97fff8000",
      "0x48127fc97fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd32",
      "0x48127f7c7fff8000",
      "0x48127f7c7fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffb7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe15",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdcd",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd24",
      "0x48127fb37fff8000",
      "0x48127fb37fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdd5",
      "0x48127ffd7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffb7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd24",
      "0x48127ffe7fff8000",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x1390569bb0a3a722eb4228e8700301347da081211d5c2ded2db22ef389551ab",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc74",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc6e",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbe0",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdb",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc31",
      "0x48127ffe7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbb1",
      "0x40127ffd7fff7fe1",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x48127ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x2cd2687c06d341ffd0b635e3229e2ca36108201a2112da0d058d03b77eb5092",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc1f",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc19",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
      "0x400680017fff7fff",
      "0x0",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff3",
      "0x480680017fff8000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc5",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff4",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff4",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x4552433230",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff4",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff4",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc4",
      "0x400780017fff7ffc",
      "0x4",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd64",
      "0x480280037ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff3c",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x48307fff7ffe8000",
      "0x402a7ffd7ffc7fff",
      "0x480280027ffb8000",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x482480017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x482680017ffd8000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe1",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff87fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb76",
      "0x48127ffe7fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe4c",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x3",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x3",
      "0x480a7ff77fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb48",
      "0x40137fff7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffce4",
      "0x40137ffe7fff8001",
      "0x40137fff7fff8002",
      "0x48127ffd7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480a80017fff8000",
      "0x480a80027fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbaa",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffabc",
      "0x48127fc77fff8000",
      "0x48127fc77fff8000",
      "0x48127ffa7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe0b",
      "0x480a80017fff8000",
      "0x480a80027fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbbc",
      "0x48127fb37fff8000",
      "0x48127fb37fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffa7fff8000",
      "0x480a80007fff8000",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcd6",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x4",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x480280037ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbb",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff87fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffaf9",
      "0x48127ffe7fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe17",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x3",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe0",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x5",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb10",
      "0x480a7ff87fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffac6",
      "0x40137fff7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ff97fff8000",
      "0x48127ff77fff8000",
      "0x480a80007fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc62",
      "0x40137ffe7fff8001",
      "0x40137fff7fff8002",
      "0x48127ffd7fff8000",
      "0x480a80017fff8000",
      "0x480a80027fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb01",
      "0x40137ffd7fff8003",
      "0x40137ffe7fff8004",
      "0x400680017fff7fff",
      "0x0",
      "0x48127fe27fff8000",
      "0x48127fe27fff8000",
      "0x48127ffa7fff8000",
      "0x480a80007fff8000",
      "0x480a7ffb7fff8000",
      "0x480a80037fff8000",
      "0x480a80047fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffdcf",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x3",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc4",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x5",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffac8",
      "0x480a7ff87fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffa7e",
      "0x40137fff7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ff97fff8000",
      "0x48127ff77fff8000",
      "0x480a80007fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffc1a",
      "0x40137ffe7fff8001",
      "0x40137fff7fff8002",
      "0x48127ffd7fff8000",
      "0x480a80017fff8000",
      "0x480a80027fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb03",
      "0x40137ffe7fff8003",
      "0x40137fff7fff8004",
      "0x48127ffd7fff8000",
      "0x480a80037fff8000",
      "0x480a80047fff8000",
      "0x480a80017fff8000",
      "0x480a80027fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffad7",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffff9e9",
      "0x48127f7c7fff8000",
      "0x48127f7c7fff8000",
      "0x48127ffa7fff8000",
      "0x480a80007fff8000",
      "0x480a7ffb7fff8000",
      "0x480a80037fff8000",
      "0x480a80047fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd80",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x3",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbd",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe01",
      "0x40137ffd7fff8000",
      "0x480a80007fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcc9",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x3",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffddc",
      "0x40137ffd7fff8000",
      "0x480a80007fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd4b",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x3",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe"
    ],
    "debug_info": null,
    "hints": {
      "0": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.alloc",
            "starkware.cairo.common.alloc.alloc"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 0,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "9": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_not_zero"
          ],
          "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.value)\nassert ids.value % PRIME != 0, f'assert_not_zero failed: {ids.value} = 0.'",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 2,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_not_zero.value": 0
            }
          }
        }
      ],
      "14": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_nn"
          ],
          "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 3,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_nn.a": 1
            }
          }
        }
      ],
      "32": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_250_bit"
          ],
          "code": "from starkware.cairo.common.math_utils import as_int\n\n# Correctness check.\nvalue = as_int(ids.value, PRIME) % PRIME\nassert value < ids.UPPER_BOUND, f'{value} is outside of the range [0, 2**250).'\n\n# Calculation for the assertion.\nids.high, ids.low = divmod(ids.value, ids.SHIFT)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 6,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_250_bit.high": 4,
              "starkware.cairo.common.math.assert_250_bit.low": 3,
              "starkware.cairo.common.math.assert_250_bit.value": 2
            }
          }
        }
      ],
      "45": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_le_felt"
          ],
          "code": "import itertools\n\nfrom starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\na = ids.a % PRIME\nb = ids.b % PRIME\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\n\n# Find an arc less than PRIME / 3, and another less than PRIME / 2.\nlengths_and_indices = [(a, 0), (b - a, 1), (PRIME - 1 - b, 2)]\nlengths_and_indices.sort()\nassert lengths_and_indices[0][0] <= PRIME // 3 and lengths_and_indices[1][0] <= PRIME // 2\nexcluded = lengths_and_indices[2][1]\n\nmemory[ids.range_check_ptr + 1], memory[ids.range_check_ptr + 0] = (\n    divmod(lengths_and_indices[0][0], ids.PRIME_OVER_3_HIGH))\nmemory[ids.range_check_ptr + 3], memory[ids.range_check_ptr + 2] = (\n    divmod(lengths_and_indices[1][0], ids.PRIME_OVER_2_HIGH))",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 7,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_le_felt.a": 5,
              "starkware.cairo.common.math.assert_le_felt.b": 6,
              "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 7
            }
          }
        }
      ],
      "55": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_le_felt"
          ],
          "code": "memory[ap] = 1 if excluded != 0 else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 7,
              "offset": 8
            },
            "reference_ids": {}
          }
        }
      ],
      "69": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_le_felt"
          ],
          "code": "memory[ap] = 1 if excluded != 1 else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 7,
              "offset": 9
            },
            "reference_ids": {}
          }
        }
      ],
      "81": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_le_felt"
          ],
          "code": "assert excluded == 2",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 7,
              "offset": 10
            },
            "reference_ids": {}
          }
        }
      ],
      "92": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.storage",
            "starkware.starknet.common.storage.normalize_address"
          ],
          "code": "# Verify the assumptions on the relationship between 2**250, ADDR_BOUND and PRIME.\nADDR_BOUND = ids.ADDR_BOUND % PRIME\nassert (2**250 < ADDR_BOUND <= 2**251) and (2 * 2**250 < PRIME) and (\n        ADDR_BOUND * 2 > PRIME), \\\n    'normalize_address() cannot be used with the current constants.'\nids.is_small = 1 if ids.addr < ADDR_BOUND else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 8,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.storage.normalize_address.addr": 8,
              "starkware.starknet.common.storage.normalize_address.is_small": 9
            }
          }
        }
      ],
      "110": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.storage",
            "starkware.starknet.common.storage.normalize_address"
          ],
          "code": "ids.is_250 = 1 if ids.addr < 2**250 else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 8,
              "offset": 2
            },
            "reference_ids": {
              "starkware.starknet.common.storage.normalize_address.addr": 8,
              "starkware.starknet.common.storage.normalize_address.is_250": 10
            }
          }
        }
      ],
      "133": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.get_caller_address"
          ],
          "code": "syscall_handler.get_caller_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 9,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": 11
            }
          }
        }
      ],
      "141": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.storage_read"
          ],
          "code": "syscall_handler.storage_read(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 10,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.storage_read.syscall_ptr": 12
            }
          }
        }
      ],
      "150": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.storage_write"
          ],
          "code": "syscall_handler.storage_write(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 11,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.storage_write.syscall_ptr": 13
            }
          }
        }
      ],
      "160": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.emit_event"
          ],
          "code": "syscall_handler.emit_event(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 12,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.emit_event.syscall_ptr": 14
            }
          }
        }
      ],
      "163": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math_cmp",
            "starkware.cairo.common.math_cmp.is_nn"
          ],
          "code": "memory[ap] = 0 if 0 <= (ids.a % PRIME) < range_check_builtin.bound else 1",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 13,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math_cmp.is_nn.a": 15
            }
          }
        }
      ],
      "173": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math_cmp",
            "starkware.cairo.common.math_cmp.is_nn"
          ],
          "code": "memory[ap] = 0 if 0 <= ((-ids.a - 1) % PRIME) < range_check_builtin.bound else 1",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 13,
              "offset": 1
            },
            "reference_ids": {
              "starkware.cairo.common.math_cmp.is_nn.a": 15
            }
          }
        }
      ],
      "208": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.uint256",
            "starkware.cairo.common.uint256.uint256_add"
          ],
          "code": "sum_low = ids.a.low + ids.b.low\nids.carry_low = 1 if sum_low >= ids.SHIFT else 0\nsum_high = ids.a.high + ids.b.high + ids.carry_low\nids.carry_high = 1 if sum_high >= ids.SHIFT else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 16,
              "offset": 4
            },
            "reference_ids": {
              "starkware.cairo.common.uint256.uint256_add.a": 16,
              "starkware.cairo.common.uint256.uint256_add.b": 17,
              "starkware.cairo.common.uint256.uint256_add.carry_high": 19,
              "starkware.cairo.common.uint256.uint256_add.carry_low": 18
            }
          }
        }
      ],
      "615": [
        {
          "accessible_scopes": [
            "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base",
            "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base",
            "__wrappers__",
            "__wrappers__.name_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 44,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "645": [
        {
          "accessible_scopes": [
            "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base",
            "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base",
            "__wrappers__",
            "__wrappers__.symbol_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 47,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "675": [
        {
          "accessible_scopes": [
            "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base",
            "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base",
            "__wrappers__",
            "__wrappers__.totalSupply_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 50,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "706": [
        {
          "accessible_scopes": [
            "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base",
            "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base",
            "__wrappers__",
            "__wrappers__.decimals_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 53,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "737": [
        {
          "accessible_scopes": [
            "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base",
            "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base",
            "__wrappers__",
            "__wrappers__.balanceOf_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 56,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "773": [
        {
          "accessible_scopes": [
            "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base",
            "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base",
            "__wrappers__",
            "__wrappers__.allowance_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 59,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1081": [
        {
          "accessible_scopes": [
            "blockifier.ERC20_without_some_syscalls.ERC20.permitted",
            "blockifier.ERC20_without_some_syscalls.ERC20.permitted",
            "__wrappers__",
            "__wrappers__.permittedMinter_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 70,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1156": [
        {
          "accessible_scopes": [
            "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable",
            "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable",
            "__wrappers__",
            "__wrappers__.initialized_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 77,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1204": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.get_version_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 82,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1228": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.get_identity_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 85,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1283": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.initialize"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 88,
              "offset": 185
            },
            "reference_ids": {}
          }
        }
      ],
      "1307": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.transfer_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 90,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1387": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.transferFrom_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 93,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1432": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.approve_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 96,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1504": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.increaseAllowance_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 99,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1583": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.decreaseAllowance_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 102,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "1640": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.permissionedMint"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 105,
              "offset": 346
            },
            "reference_ids": {}
          }
        }
      ],
      "1677": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.permissionedBurn"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 107,
              "offset": 494
            },
            "reference_ids": {}
          }
        }
      ]
    },
    "identifiers": {
      "__main__.CONTRACT_IDENTITY": {
        "type": "const",
        "value": 297732878896
      },
      "__main__.CONTRACT_VERSION": {
        "type": "const",
        "value": 1
      },
      "__main__.ERC20_allowances": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances",
        "type": "alias"
      },
      "__main__.ERC20_approve": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_approve",
        "type": "alias"
      },
      "__main__.ERC20_burn": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_burn",
        "type": "alias"
      },
      "__main__.ERC20_initializer": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_initializer",
        "type": "alias"
      },
      "__main__.ERC20_mint": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_mint",
        "type": "alias"
      },
      "__main__.ERC20_transfer": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_transfer",
        "type": "alias"
      },
      "__main__.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "__main__.TRUE": {
        "destination": "starkware.cairo.common.bool.TRUE",
        "type": "alias"
      },
      "__main__.Uint256": {
        "destination": "starkware.cairo.common.uint256.Uint256",
        "type": "alias"
      },
      "__main__.allowance": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.allowance",
        "type": "alias"
      },
      "__main__.approve": {
        "decorators": ["external"],
        "pc": 1417,
        "type": "function"
      },
      "__main__.approve.Args": {
        "full_name": "__main__.approve.Args",
        "members": {
          "amount": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          },
          "spender": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.approve.ImplicitArgs": {
        "full_name": "__main__.approve.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.approve.Return": {
        "cairo_type": "(success: felt)",
        "type": "type_definition"
      },
      "__main__.approve.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.assert_not_zero": {
        "destination": "starkware.cairo.common.math.assert_not_zero",
        "type": "alias"
      },
      "__main__.balanceOf": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.balanceOf",
        "type": "alias"
      },
      "__main__.decimals": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.decimals",
        "type": "alias"
      },
      "__main__.decreaseAllowance": {
        "decorators": ["external"],
        "pc": 1533,
        "type": "function"
      },
      "__main__.decreaseAllowance.Args": {
        "full_name": "__main__.decreaseAllowance.Args",
        "members": {
          "spender": {
            "cairo_type": "felt",
            "offset": 0
          },
          "subtracted_value": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.decreaseAllowance.ImplicitArgs": {
        "full_name": "__main__.decreaseAllowance.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.decreaseAllowance.Return": {
        "cairo_type": "(success: felt)",
        "type": "type_definition"
      },
      "__main__.decreaseAllowance.SIZEOF_LOCALS": {
        "type": "const",
        "value": 5
      },
      "__main__.get_caller_address": {
        "destination": "starkware.starknet.common.syscalls.get_caller_address",
        "type": "alias"
      },
      "__main__.get_identity": {
        "decorators": ["view"],
        "pc": 1225,
        "type": "function"
      },
      "__main__.get_identity.Args": {
        "full_name": "__main__.get_identity.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__.get_identity.ImplicitArgs": {
        "full_name": "__main__.get_identity.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__.get_identity.Return": {
        "cairo_type": "(identity: felt)",
        "type": "type_definition"
      },
      "__main__.get_identity.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.get_version": {
        "decorators": ["view"],
        "pc": 1201,
        "type": "function"
      },
      "__main__.get_version.Args": {
        "full_name": "__main__.get_version.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__.get_version.ImplicitArgs": {
        "full_name": "__main__.get_version.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__.get_version.Return": {
        "cairo_type": "(version: felt)",
        "type": "type_definition"
      },
      "__main__.get_version.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.increaseAllowance": {
        "decorators": ["external"],
        "pc": 1461,
        "type": "function"
      },
      "__main__.increaseAllowance.Args": {
        "full_name": "__main__.increaseAllowance.Args",
        "members": {
          "added_value": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          },
          "spender": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.increaseAllowance.ImplicitArgs": {
        "full_name": "__main__.increaseAllowance.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.increaseAllowance.Return": {
        "cairo_type": "(success: felt)",
        "type": "type_definition"
      },
      "__main__.increaseAllowance.SIZEOF_LOCALS": {
        "type": "const",
        "value": 5
      },
      "__main__.initialize": {
        "decorators": ["external"],
        "pc": 1249,
        "type": "function"
      },
      "__main__.initialize.Args": {
        "full_name": "__main__.initialize.Args",
        "members": {
          "init_vector": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "init_vector_len": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__main__.initialize.ImplicitArgs": {
        "full_name": "__main__.initialize.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.initialize.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.initialize.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.initialized": {
        "destination": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.initialized",
        "type": "alias"
      },
      "__main__.name": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.name",
        "type": "alias"
      },
      "__main__.permissionedBurn": {
        "decorators": ["external"],
        "pc": 1649,
        "type": "function"
      },
      "__main__.permissionedBurn.Args": {
        "full_name": "__main__.permissionedBurn.Args",
        "members": {
          "account": {
            "cairo_type": "felt",
            "offset": 0
          },
          "amount": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.permissionedBurn.ImplicitArgs": {
        "full_name": "__main__.permissionedBurn.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.permissionedBurn.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.permissionedBurn.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__main__.permissionedMint": {
        "decorators": ["external"],
        "pc": 1612,
        "type": "function"
      },
      "__main__.permissionedMint.Args": {
        "full_name": "__main__.permissionedMint.Args",
        "members": {
          "amount": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          },
          "recipient": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.permissionedMint.ImplicitArgs": {
        "full_name": "__main__.permissionedMint.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.permissionedMint.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.permissionedMint.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__main__.permittedMinter": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permittedMinter",
        "type": "alias"
      },
      "__main__.permitted_initializer": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_initializer",
        "type": "alias"
      },
      "__main__.permitted_minter": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter",
        "type": "alias"
      },
      "__main__.permitted_minter_only": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter_only",
        "type": "alias"
      },
      "__main__.set_initialized": {
        "destination": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.set_initialized",
        "type": "alias"
      },
      "__main__.symbol": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.symbol",
        "type": "alias"
      },
      "__main__.totalSupply": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.totalSupply",
        "type": "alias"
      },
      "__main__.transfer": {
        "decorators": ["external"],
        "pc": 1292,
        "type": "function"
      },
      "__main__.transfer.Args": {
        "full_name": "__main__.transfer.Args",
        "members": {
          "amount": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          },
          "recipient": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.transfer.ImplicitArgs": {
        "full_name": "__main__.transfer.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.transfer.Return": {
        "cairo_type": "(success: felt)",
        "type": "type_definition"
      },
      "__main__.transfer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.transferFrom": {
        "decorators": ["external"],
        "pc": 1336,
        "type": "function"
      },
      "__main__.transferFrom.Args": {
        "full_name": "__main__.transferFrom.Args",
        "members": {
          "amount": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          },
          "recipient": {
            "cairo_type": "felt",
            "offset": 1
          },
          "sender": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 4,
        "type": "struct"
      },
      "__main__.transferFrom.ImplicitArgs": {
        "full_name": "__main__.transferFrom.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.transferFrom.Return": {
        "cairo_type": "(success: felt)",
        "type": "type_definition"
      },
      "__main__.transferFrom.SIZEOF_LOCALS": {
        "type": "const",
        "value": 3
      },
      "__main__.uint256_add": {
        "destination": "starkware.cairo.common.uint256.uint256_add",
        "type": "alias"
      },
      "__main__.uint256_check": {
        "destination": "starkware.cairo.common.uint256.uint256_check",
        "type": "alias"
      },
      "__main__.uint256_le": {
        "destination": "starkware.cairo.common.uint256.uint256_le",
        "type": "alias"
      },
      "__main__.uint256_sub": {
        "destination": "starkware.cairo.common.uint256.uint256_sub",
        "type": "alias"
      },
      "__wrappers__.allowance": {
        "decorators": ["view"],
        "pc": 783,
        "type": "function"
      },
      "__wrappers__.allowance.Args": {
        "full_name": "__wrappers__.allowance.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.allowance.ImplicitArgs": {
        "full_name": "__wrappers__.allowance.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.allowance.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.allowance.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.allowance.__wrapped_func": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.allowance",
        "type": "alias"
      },
      "__wrappers__.allowance_encode_return": {
        "decorators": [],
        "pc": 773,
        "type": "function"
      },
      "__wrappers__.allowance_encode_return.Args": {
        "full_name": "__wrappers__.allowance_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "ret_value": {
            "cairo_type": "(remaining: starkware.cairo.common.uint256.Uint256)",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__wrappers__.allowance_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.allowance_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.allowance_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.allowance_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.allowance_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.approve": {
        "decorators": ["external"],
        "pc": 1441,
        "type": "function"
      },
      "__wrappers__.approve.Args": {
        "full_name": "__wrappers__.approve.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.approve.ImplicitArgs": {
        "full_name": "__wrappers__.approve.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.approve.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.approve.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.approve.__wrapped_func": {
        "destination": "__main__.approve",
        "type": "alias"
      },
      "__wrappers__.approve_encode_return": {
        "decorators": [],
        "pc": 1432,
        "type": "function"
      },
      "__wrappers__.approve_encode_return.Args": {
        "full_name": "__wrappers__.approve_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(success: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.approve_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.approve_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.approve_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.approve_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.approve_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.balanceOf": {
        "decorators": ["view"],
        "pc": 747,
        "type": "function"
      },
      "__wrappers__.balanceOf.Args": {
        "full_name": "__wrappers__.balanceOf.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.balanceOf.ImplicitArgs": {
        "full_name": "__wrappers__.balanceOf.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.balanceOf.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.balanceOf.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.balanceOf.__wrapped_func": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.balanceOf",
        "type": "alias"
      },
      "__wrappers__.balanceOf_encode_return": {
        "decorators": [],
        "pc": 737,
        "type": "function"
      },
      "__wrappers__.balanceOf_encode_return.Args": {
        "full_name": "__wrappers__.balanceOf_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "ret_value": {
            "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__wrappers__.balanceOf_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.balanceOf_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.balanceOf_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.balanceOf_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.balanceOf_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.decimals": {
        "decorators": ["view"],
        "pc": 715,
        "type": "function"
      },
      "__wrappers__.decimals.Args": {
        "full_name": "__wrappers__.decimals.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.decimals.ImplicitArgs": {
        "full_name": "__wrappers__.decimals.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.decimals.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.decimals.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.decimals.__wrapped_func": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.decimals",
        "type": "alias"
      },
      "__wrappers__.decimals_encode_return": {
        "decorators": [],
        "pc": 706,
        "type": "function"
      },
      "__wrappers__.decimals_encode_return.Args": {
        "full_name": "__wrappers__.decimals_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(decimals: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.decimals_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.decimals_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.decimals_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.decimals_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.decimals_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.decreaseAllowance": {
        "decorators": ["external"],
        "pc": 1592,
        "type": "function"
      },
      "__wrappers__.decreaseAllowance.Args": {
        "full_name": "__wrappers__.decreaseAllowance.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.decreaseAllowance.ImplicitArgs": {
        "full_name": "__wrappers__.decreaseAllowance.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.decreaseAllowance.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.decreaseAllowance.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.decreaseAllowance.__wrapped_func": {
        "destination": "__main__.decreaseAllowance",
        "type": "alias"
      },
      "__wrappers__.decreaseAllowance_encode_return": {
        "decorators": [],
        "pc": 1583,
        "type": "function"
      },
      "__wrappers__.decreaseAllowance_encode_return.Args": {
        "full_name": "__wrappers__.decreaseAllowance_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(success: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.decreaseAllowance_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.decreaseAllowance_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.decreaseAllowance_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.decreaseAllowance_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.decreaseAllowance_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.get_identity": {
        "decorators": ["view"],
        "pc": 1237,
        "type": "function"
      },
      "__wrappers__.get_identity.Args": {
        "full_name": "__wrappers__.get_identity.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.get_identity.ImplicitArgs": {
        "full_name": "__wrappers__.get_identity.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.get_identity.Return": {
        "cairo_type": "(syscall_ptr: felt, pedersen_ptr: felt, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.get_identity.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.get_identity.__wrapped_func": {
        "destination": "__main__.get_identity",
        "type": "alias"
      },
      "__wrappers__.get_identity_encode_return": {
        "decorators": [],
        "pc": 1228,
        "type": "function"
      },
      "__wrappers__.get_identity_encode_return.Args": {
        "full_name": "__wrappers__.get_identity_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(identity: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.get_identity_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.get_identity_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.get_identity_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.get_identity_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.get_identity_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.get_version": {
        "decorators": ["view"],
        "pc": 1213,
        "type": "function"
      },
      "__wrappers__.get_version.Args": {
        "full_name": "__wrappers__.get_version.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.get_version.ImplicitArgs": {
        "full_name": "__wrappers__.get_version.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.get_version.Return": {
        "cairo_type": "(syscall_ptr: felt, pedersen_ptr: felt, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.get_version.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.get_version.__wrapped_func": {
        "destination": "__main__.get_version",
        "type": "alias"
      },
      "__wrappers__.get_version_encode_return": {
        "decorators": [],
        "pc": 1204,
        "type": "function"
      },
      "__wrappers__.get_version_encode_return.Args": {
        "full_name": "__wrappers__.get_version_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(version: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.get_version_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.get_version_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.get_version_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.get_version_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.get_version_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.increaseAllowance": {
        "decorators": ["external"],
        "pc": 1513,
        "type": "function"
      },
      "__wrappers__.increaseAllowance.Args": {
        "full_name": "__wrappers__.increaseAllowance.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.increaseAllowance.ImplicitArgs": {
        "full_name": "__wrappers__.increaseAllowance.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.increaseAllowance.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.increaseAllowance.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.increaseAllowance.__wrapped_func": {
        "destination": "__main__.increaseAllowance",
        "type": "alias"
      },
      "__wrappers__.increaseAllowance_encode_return": {
        "decorators": [],
        "pc": 1504,
        "type": "function"
      },
      "__wrappers__.increaseAllowance_encode_return.Args": {
        "full_name": "__wrappers__.increaseAllowance_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(success: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.increaseAllowance_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.increaseAllowance_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.increaseAllowance_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.increaseAllowance_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.increaseAllowance_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.initialize": {
        "decorators": ["external"],
        "pc": 1265,
        "type": "function"
      },
      "__wrappers__.initialize.Args": {
        "full_name": "__wrappers__.initialize.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.initialize.ImplicitArgs": {
        "full_name": "__wrappers__.initialize.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.initialize.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.initialize.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.initialize.__wrapped_func": {
        "destination": "__main__.initialize",
        "type": "alias"
      },
      "__wrappers__.initialize_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.initialized": {
        "decorators": ["view"],
        "pc": 1165,
        "type": "function"
      },
      "__wrappers__.initialized.Args": {
        "full_name": "__wrappers__.initialized.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.initialized.ImplicitArgs": {
        "full_name": "__wrappers__.initialized.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.initialized.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.initialized.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.initialized.__wrapped_func": {
        "destination": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.initialized",
        "type": "alias"
      },
      "__wrappers__.initialized_encode_return": {
        "decorators": [],
        "pc": 1156,
        "type": "function"
      },
      "__wrappers__.initialized_encode_return.Args": {
        "full_name": "__wrappers__.initialized_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(res: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.initialized_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.initialized_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.initialized_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.initialized_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.initialized_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.name": {
        "decorators": ["view"],
        "pc": 624,
        "type": "function"
      },
      "__wrappers__.name.Args": {
        "full_name": "__wrappers__.name.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.name.ImplicitArgs": {
        "full_name": "__wrappers__.name.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.name.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.name.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.name.__wrapped_func": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.name",
        "type": "alias"
      },
      "__wrappers__.name_encode_return": {
        "decorators": [],
        "pc": 615,
        "type": "function"
      },
      "__wrappers__.name_encode_return.Args": {
        "full_name": "__wrappers__.name_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(name: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.name_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.name_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.name_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.name_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.name_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.permissionedBurn": {
        "decorators": ["external"],
        "pc": 1666,
        "type": "function"
      },
      "__wrappers__.permissionedBurn.Args": {
        "full_name": "__wrappers__.permissionedBurn.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.permissionedBurn.ImplicitArgs": {
        "full_name": "__wrappers__.permissionedBurn.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.permissionedBurn.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.permissionedBurn.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.permissionedBurn.__wrapped_func": {
        "destination": "__main__.permissionedBurn",
        "type": "alias"
      },
      "__wrappers__.permissionedBurn_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.permissionedMint": {
        "decorators": ["external"],
        "pc": 1629,
        "type": "function"
      },
      "__wrappers__.permissionedMint.Args": {
        "full_name": "__wrappers__.permissionedMint.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.permissionedMint.ImplicitArgs": {
        "full_name": "__wrappers__.permissionedMint.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.permissionedMint.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.permissionedMint.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.permissionedMint.__wrapped_func": {
        "destination": "__main__.permissionedMint",
        "type": "alias"
      },
      "__wrappers__.permissionedMint_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.permittedMinter": {
        "decorators": ["view"],
        "pc": 1090,
        "type": "function"
      },
      "__wrappers__.permittedMinter.Args": {
        "full_name": "__wrappers__.permittedMinter.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.permittedMinter.ImplicitArgs": {
        "full_name": "__wrappers__.permittedMinter.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.permittedMinter.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.permittedMinter.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.permittedMinter.__wrapped_func": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permittedMinter",
        "type": "alias"
      },
      "__wrappers__.permittedMinter_encode_return": {
        "decorators": [],
        "pc": 1081,
        "type": "function"
      },
      "__wrappers__.permittedMinter_encode_return.Args": {
        "full_name": "__wrappers__.permittedMinter_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(minter: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.permittedMinter_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.permittedMinter_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.permittedMinter_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.permittedMinter_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.permittedMinter_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.symbol": {
        "decorators": ["view"],
        "pc": 654,
        "type": "function"
      },
      "__wrappers__.symbol.Args": {
        "full_name": "__wrappers__.symbol.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.symbol.ImplicitArgs": {
        "full_name": "__wrappers__.symbol.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.symbol.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.symbol.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.symbol.__wrapped_func": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.symbol",
        "type": "alias"
      },
      "__wrappers__.symbol_encode_return": {
        "decorators": [],
        "pc": 645,
        "type": "function"
      },
      "__wrappers__.symbol_encode_return.Args": {
        "full_name": "__wrappers__.symbol_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(symbol: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.symbol_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.symbol_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.symbol_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.symbol_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.symbol_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.totalSupply": {
        "decorators": ["view"],
        "pc": 685,
        "type": "function"
      },
      "__wrappers__.totalSupply.Args": {
        "full_name": "__wrappers__.totalSupply.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.totalSupply.ImplicitArgs": {
        "full_name": "__wrappers__.totalSupply.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.totalSupply.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.totalSupply.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.totalSupply.__wrapped_func": {
        "destination": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.totalSupply",
        "type": "alias"
      },
      "__wrappers__.totalSupply_encode_return": {
        "decorators": [],
        "pc": 675,
        "type": "function"
      },
      "__wrappers__.totalSupply_encode_return.Args": {
        "full_name": "__wrappers__.totalSupply_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "ret_value": {
            "cairo_type": "(totalSupply: starkware.cairo.common.uint256.Uint256)",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__wrappers__.totalSupply_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.totalSupply_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.totalSupply_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.totalSupply_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.totalSupply_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.transfer": {
        "decorators": ["external"],
        "pc": 1316,
        "type": "function"
      },
      "__wrappers__.transfer.Args": {
        "full_name": "__wrappers__.transfer.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.transfer.ImplicitArgs": {
        "full_name": "__wrappers__.transfer.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.transfer.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.transfer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.transfer.__wrapped_func": {
        "destination": "__main__.transfer",
        "type": "alias"
      },
      "__wrappers__.transferFrom": {
        "decorators": ["external"],
        "pc": 1396,
        "type": "function"
      },
      "__wrappers__.transferFrom.Args": {
        "full_name": "__wrappers__.transferFrom.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.transferFrom.ImplicitArgs": {
        "full_name": "__wrappers__.transferFrom.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.transferFrom.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.transferFrom.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.transferFrom.__wrapped_func": {
        "destination": "__main__.transferFrom",
        "type": "alias"
      },
      "__wrappers__.transferFrom_encode_return": {
        "decorators": [],
        "pc": 1387,
        "type": "function"
      },
      "__wrappers__.transferFrom_encode_return.Args": {
        "full_name": "__wrappers__.transferFrom_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(success: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.transferFrom_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.transferFrom_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.transferFrom_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.transferFrom_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.transferFrom_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.transfer_encode_return": {
        "decorators": [],
        "pc": 1307,
        "type": "function"
      },
      "__wrappers__.transfer_encode_return.Args": {
        "full_name": "__wrappers__.transfer_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(success: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.transfer_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.transfer_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.transfer_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.transfer_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.transfer_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval": {
        "type": "namespace"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.SELECTOR": {
        "type": "const",
        "value": 544914742286571513055574265148471203182105283038408585630116262969508767999
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.emit": {
        "decorators": [],
        "pc": 323,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.emit.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.emit.Args",
        "members": {
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          },
          "spender": {
            "cairo_type": "felt",
            "offset": 1
          },
          "value": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.emit.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.emit.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.emit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.emit.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.emit_event": {
        "destination": "starkware.starknet.common.syscalls.emit_event",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Approval.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances": {
        "type": "namespace"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.addr": {
        "decorators": [],
        "pc": 533,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.addr.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.addr.Args",
        "members": {
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          },
          "spender": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.addr.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.read": {
        "decorators": [],
        "pc": 550,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.read.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.read.Args",
        "members": {
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          },
          "spender": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.read.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.read.Return": {
        "cairo_type": "(allowance: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.write": {
        "decorators": [],
        "pc": 571,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.write.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.write.Args",
        "members": {
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          },
          "spender": {
            "cairo_type": "felt",
            "offset": 1
          },
          "value": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.write.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_allowances.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_approve": {
        "decorators": [],
        "pc": 937,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_approve.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_approve.Args",
        "members": {
          "amount": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          },
          "caller": {
            "cairo_type": "felt",
            "offset": 0
          },
          "spender": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 4,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_approve.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_approve.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_approve.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_approve.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances": {
        "type": "namespace"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.addr": {
        "decorators": [],
        "pc": 481,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.addr.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.addr.Args",
        "members": {
          "account": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.addr.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.read": {
        "decorators": [],
        "pc": 495,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.read.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.read.Args",
        "members": {
          "account": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.read.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.read.Return": {
        "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.write": {
        "decorators": [],
        "pc": 515,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.write.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.write.Args",
        "members": {
          "account": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.write.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_balances.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_burn": {
        "decorators": [],
        "pc": 969,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_burn.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_burn.Args",
        "members": {
          "account": {
            "cairo_type": "felt",
            "offset": 0
          },
          "amount": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_burn.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_burn.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_burn.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_burn.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals": {
        "type": "namespace"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.addr": {
        "decorators": [],
        "pc": 410,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.addr.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.addr.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.read": {
        "decorators": [],
        "pc": 415,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.read.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.read.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.read.Return": {
        "cairo_type": "(decimals: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.write": {
        "decorators": [],
        "pc": 428,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.write.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.write.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.write.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_decimals.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_initializer": {
        "decorators": [],
        "pc": 590,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_initializer.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_initializer.Args",
        "members": {
          "decimals": {
            "cairo_type": "felt",
            "offset": 2
          },
          "name": {
            "cairo_type": "felt",
            "offset": 0
          },
          "symbol": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_initializer.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_initializer.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_initializer.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_initializer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_mint": {
        "decorators": [],
        "pc": 802,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_mint.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_mint.Args",
        "members": {
          "amount": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 1
          },
          "recipient": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_mint.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_mint.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_mint.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_mint.SIZEOF_LOCALS": {
        "type": "const",
        "value": 4
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name": {
        "type": "namespace"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.addr": {
        "decorators": [],
        "pc": 350,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.addr.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.addr.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.read": {
        "decorators": [],
        "pc": 355,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.read.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.read.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.read.Return": {
        "cairo_type": "(name: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.write": {
        "decorators": [],
        "pc": 368,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.write.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.write.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.write.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_name.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol": {
        "type": "namespace"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.addr": {
        "decorators": [],
        "pc": 380,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.addr.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.addr.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.read": {
        "decorators": [],
        "pc": 385,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.read.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.read.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.read.Return": {
        "cairo_type": "(symbol: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.write": {
        "decorators": [],
        "pc": 398,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.write.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.write.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.write.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_symbol.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply": {
        "type": "namespace"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.addr": {
        "decorators": [],
        "pc": 440,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.addr.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.addr.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.read": {
        "decorators": [],
        "pc": 445,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.read.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.read.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.read.Return": {
        "cairo_type": "(total_supply: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.write": {
        "decorators": [],
        "pc": 464,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.write.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.write.Args",
        "members": {
          "value": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.write.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_total_supply.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_transfer": {
        "decorators": [],
        "pc": 865,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_transfer.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_transfer.Args",
        "members": {
          "amount": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          },
          "recipient": {
            "cairo_type": "felt",
            "offset": 1
          },
          "sender": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 4,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_transfer.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_transfer.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_transfer.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.ERC20_transfer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.MAX_DECIMALS": {
        "type": "const",
        "value": 255
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.SignatureBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer": {
        "type": "namespace"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.SELECTOR": {
        "type": "const",
        "value": 271746229759260285552388728919865295615886751538523744128730118297934206697
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.emit": {
        "decorators": [],
        "pc": 296,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.emit.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.emit.Args",
        "members": {
          "from_": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to": {
            "cairo_type": "felt",
            "offset": 1
          },
          "value": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.emit.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.emit.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.emit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.emit.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.emit_event": {
        "destination": "starkware.starknet.common.syscalls.emit_event",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Transfer.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.Uint256": {
        "destination": "starkware.cairo.common.uint256.Uint256",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.allowance": {
        "decorators": ["view"],
        "pc": 765,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.allowance.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.allowance.Args",
        "members": {
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          },
          "spender": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.allowance.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.allowance.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.allowance.Return": {
        "cairo_type": "(remaining: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.allowance.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.assert_nn_le": {
        "destination": "starkware.cairo.common.math.assert_nn_le",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.assert_not_zero": {
        "destination": "starkware.cairo.common.math.assert_not_zero",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.balanceOf": {
        "decorators": ["view"],
        "pc": 730,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.balanceOf.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.balanceOf.Args",
        "members": {
          "account": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.balanceOf.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.balanceOf.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.balanceOf.Return": {
        "cairo_type": "(balance: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.balanceOf.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.decimals": {
        "decorators": ["view"],
        "pc": 700,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.decimals.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.decimals.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.decimals.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.decimals.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.decimals.Return": {
        "cairo_type": "(decimals: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.decimals.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.name": {
        "decorators": ["view"],
        "pc": 609,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.name.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.name.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.name.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.name.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.name.Return": {
        "cairo_type": "(name: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.name.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.symbol": {
        "decorators": ["view"],
        "pc": 639,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.symbol.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.symbol.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.symbol.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.symbol.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.symbol.Return": {
        "cairo_type": "(symbol: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.symbol.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.totalSupply": {
        "decorators": ["view"],
        "pc": 669,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.totalSupply.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.totalSupply.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.totalSupply.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.totalSupply.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.totalSupply.Return": {
        "cairo_type": "(totalSupply: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.totalSupply.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.uint256_add": {
        "destination": "starkware.cairo.common.uint256.uint256_add",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.uint256_check": {
        "destination": "starkware.cairo.common.uint256.uint256_check",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.uint256_le": {
        "destination": "starkware.cairo.common.uint256.uint256_le",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.ERC20_base.uint256_sub": {
        "destination": "starkware.cairo.common.uint256.uint256_sub",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.assert_not_zero": {
        "destination": "starkware.cairo.common.math.assert_not_zero",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.get_caller_address": {
        "destination": "starkware.starknet.common.syscalls.get_caller_address",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permittedMinter": {
        "decorators": ["view"],
        "pc": 1075,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permittedMinter.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permittedMinter.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permittedMinter.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permittedMinter.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permittedMinter.Return": {
        "cairo_type": "(minter: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permittedMinter.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_initializer": {
        "decorators": [],
        "pc": 1065,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_initializer.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_initializer.Args",
        "members": {
          "minter_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_initializer.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_initializer.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_initializer.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_initializer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter": {
        "type": "namespace"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.addr": {
        "decorators": [],
        "pc": 1035,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.addr.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.addr.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.read": {
        "decorators": [],
        "pc": 1040,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.read.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.read.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.read.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.write": {
        "decorators": [],
        "pc": 1053,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.write.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.write.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.write.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter_only": {
        "decorators": [],
        "pc": 1105,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter_only.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter_only.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter_only.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter_only.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter_only.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.ERC20.permitted.permitted_minter_only.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.FALSE": {
        "destination": "starkware.cairo.common.bool.FALSE",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.TRUE": {
        "destination": "starkware.cairo.common.bool.TRUE",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized": {
        "type": "namespace"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.addr": {
        "decorators": [],
        "pc": 1120,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.addr.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.addr.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.read": {
        "decorators": [],
        "pc": 1125,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.read.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.read.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.read.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.write": {
        "decorators": [],
        "pc": 1138,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.write.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.write.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.write.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable._initialized.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.initialized": {
        "decorators": ["view"],
        "pc": 1150,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.initialized.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.initialized.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.initialized.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.initialized.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.initialized.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.initialized.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.only_uninitialized": {
        "decorators": [],
        "pc": 1180,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.only_uninitialized.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.only_uninitialized.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.only_uninitialized.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.only_uninitialized.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.only_uninitialized.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.only_uninitialized.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.set_initialized": {
        "decorators": [],
        "pc": 1191,
        "type": "function"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.set_initialized.Args": {
        "full_name": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.set_initialized.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.set_initialized.ImplicitArgs": {
        "full_name": "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.set_initialized.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.set_initialized.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "blockifier.ERC20_without_some_syscalls.upgradability_proxy.initializable.set_initialized.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.alloc.alloc": {
        "decorators": [],
        "pc": 0,
        "type": "function"
      },
      "starkware.cairo.common.alloc.alloc.Args": {
        "full_name": "starkware.cairo.common.alloc.alloc.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
        "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.alloc.alloc.Return": {
        "cairo_type": "(ptr: felt*)",
        "type": "type_definition"
      },
      "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.bitwise.ALL_ONES": {
        "type": "const",
        "value": -106710729501573572985208420194530329073740042555888586719234
      },
      "starkware.cairo.common.bitwise.BitwiseBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
        "type": "alias"
      },
      "starkware.cairo.common.bool.FALSE": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.bool.TRUE": {
        "type": "const",
        "value": 1
      },
      "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
        "members": {
          "x": {
            "cairo_type": "felt",
            "offset": 0
          },
          "x_and_y": {
            "cairo_type": "felt",
            "offset": 2
          },
          "x_or_y": {
            "cairo_type": "felt",
            "offset": 4
          },
          "x_xor_y": {
            "cairo_type": "felt",
            "offset": 3
          },
          "y": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 5,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
        "members": {
          "m": {
            "cairo_type": "felt",
            "offset": 4
          },
          "p": {
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
            "offset": 0
          },
          "q": {
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
            "offset": 2
          },
          "r": {
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
            "offset": 5
          }
        },
        "size": 7,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.EcPoint": {
        "destination": "starkware.cairo.common.ec_point.EcPoint",
        "type": "alias"
      },
      "starkware.cairo.common.cairo_builtins.HashBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "members": {
          "result": {
            "cairo_type": "felt",
            "offset": 2
          },
          "x": {
            "cairo_type": "felt",
            "offset": 0
          },
          "y": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
        "members": {
          "input": {
            "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
            "offset": 0
          },
          "output": {
            "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
            "offset": 8
          }
        },
        "size": 16,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
        "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
        "type": "alias"
      },
      "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
        "members": {
          "message": {
            "cairo_type": "felt",
            "offset": 1
          },
          "pub_key": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.dict_access.DictAccess": {
        "full_name": "starkware.cairo.common.dict_access.DictAccess",
        "members": {
          "key": {
            "cairo_type": "felt",
            "offset": 0
          },
          "new_value": {
            "cairo_type": "felt",
            "offset": 2
          },
          "prev_value": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.cairo.common.ec_point.EcPoint": {
        "full_name": "starkware.cairo.common.ec_point.EcPoint",
        "members": {
          "x": {
            "cairo_type": "felt",
            "offset": 0
          },
          "y": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.hash.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "starkware.cairo.common.hash.hash2": {
        "decorators": [],
        "pc": 3,
        "type": "function"
      },
      "starkware.cairo.common.hash.hash2.Args": {
        "full_name": "starkware.cairo.common.hash.hash2.Args",
        "members": {
          "x": {
            "cairo_type": "felt",
            "offset": 0
          },
          "y": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.hash.hash2.ImplicitArgs": {
        "full_name": "starkware.cairo.common.hash.hash2.ImplicitArgs",
        "members": {
          "hash_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.hash.hash2.Return": {
        "cairo_type": "(result: felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.hash.hash2.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
        "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
        "members": {
          "s0": {
            "cairo_type": "felt",
            "offset": 0
          },
          "s1": {
            "cairo_type": "felt",
            "offset": 1
          },
          "s2": {
            "cairo_type": "felt",
            "offset": 2
          },
          "s3": {
            "cairo_type": "felt",
            "offset": 3
          },
          "s4": {
            "cairo_type": "felt",
            "offset": 4
          },
          "s5": {
            "cairo_type": "felt",
            "offset": 5
          },
          "s6": {
            "cairo_type": "felt",
            "offset": 6
          },
          "s7": {
            "cairo_type": "felt",
            "offset": 7
          }
        },
        "size": 8,
        "type": "struct"
      },
      "starkware.cairo.common.math.FALSE": {
        "destination": "starkware.cairo.common.bool.FALSE",
        "type": "alias"
      },
      "starkware.cairo.common.math.TRUE": {
        "destination": "starkware.cairo.common.bool.TRUE",
        "type": "alias"
      },
      "starkware.cairo.common.math.assert_250_bit": {
        "decorators": ["known_ap_change"],
        "pc": 32,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_250_bit.Args": {
        "full_name": "starkware.cairo.common.math.assert_250_bit.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_250_bit.HIGH_BOUND": {
        "type": "const",
        "value": 5316911983139663491615228241121378304
      },
      "starkware.cairo.common.math.assert_250_bit.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_250_bit.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_250_bit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_250_bit.SHIFT": {
        "type": "const",
        "value": 340282366920938463463374607431768211456
      },
      "starkware.cairo.common.math.assert_250_bit.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_250_bit.UPPER_BOUND": {
        "type": "const",
        "value": 1809251394333065553493296640760748560207343510400633813116524750123642650624
      },
      "starkware.cairo.common.math.assert_250_bit.high": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_250_bit.high",
        "references": [
          {
            "ap_tracking_data": {
              "group": 6,
              "offset": 0
            },
            "pc": 32,
            "value": "[cast([fp + (-4)] + 1, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_250_bit.low": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_250_bit.low",
        "references": [
          {
            "ap_tracking_data": {
              "group": 6,
              "offset": 0
            },
            "pc": 32,
            "value": "[cast([fp + (-4)], felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_250_bit.value": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_250_bit.value",
        "references": [
          {
            "ap_tracking_data": {
              "group": 6,
              "offset": 0
            },
            "pc": 32,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_le": {
        "decorators": [],
        "pc": 18,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_le.Args": {
        "full_name": "starkware.cairo.common.math.assert_le.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          },
          "b": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_le.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_le.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_le_felt": {
        "decorators": ["known_ap_change"],
        "pc": 45,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_le_felt.Args": {
        "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          },
          "b": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_2_HIGH": {
        "type": "const",
        "value": 5316911983139663648412552867652567041
      },
      "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_3_HIGH": {
        "type": "const",
        "value": 3544607988759775765608368578435044694
      },
      "starkware.cairo.common.math.assert_le_felt.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_le_felt.a": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_le_felt.a",
        "references": [
          {
            "ap_tracking_data": {
              "group": 7,
              "offset": 0
            },
            "pc": 45,
            "value": "[cast(fp + (-4), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_le_felt.b": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_le_felt.b",
        "references": [
          {
            "ap_tracking_data": {
              "group": 7,
              "offset": 0
            },
            "pc": 45,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_le_felt.range_check_ptr": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_le_felt.range_check_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 7,
              "offset": 0
            },
            "pc": 45,
            "value": "[cast(fp + (-5), felt*)]"
          },
          {
            "ap_tracking_data": {
              "group": 7,
              "offset": 8
            },
            "pc": 55,
            "value": "cast([fp + (-5)] + 4, felt)"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_le_felt.skip_exclude_a": {
        "pc": 69,
        "type": "label"
      },
      "starkware.cairo.common.math.assert_le_felt.skip_exclude_b_minus_a": {
        "pc": 81,
        "type": "label"
      },
      "starkware.cairo.common.math.assert_nn": {
        "decorators": [],
        "pc": 14,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_nn.Args": {
        "full_name": "starkware.cairo.common.math.assert_nn.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_nn.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_nn.a": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_nn.a",
        "references": [
          {
            "ap_tracking_data": {
              "group": 3,
              "offset": 0
            },
            "pc": 14,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_nn_le": {
        "decorators": [],
        "pc": 23,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_nn_le.Args": {
        "full_name": "starkware.cairo.common.math.assert_nn_le.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          },
          "b": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_nn_le.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_nn_le.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_nn_le.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_nn_le.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_not_zero": {
        "decorators": [],
        "pc": 9,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_not_zero.Args": {
        "full_name": "starkware.cairo.common.math.assert_not_zero.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_not_zero.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_not_zero.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_not_zero.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_not_zero.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_not_zero.value": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_not_zero.value",
        "references": [
          {
            "ap_tracking_data": {
              "group": 2,
              "offset": 0
            },
            "pc": 9,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math_cmp.RC_BOUND": {
        "type": "const",
        "value": 340282366920938463463374607431768211456
      },
      "starkware.cairo.common.math_cmp.assert_le_felt": {
        "destination": "starkware.cairo.common.math.assert_le_felt",
        "type": "alias"
      },
      "starkware.cairo.common.math_cmp.assert_lt_felt": {
        "destination": "starkware.cairo.common.math.assert_lt_felt",
        "type": "alias"
      },
      "starkware.cairo.common.math_cmp.is_le": {
        "decorators": ["known_ap_change"],
        "pc": 196,
        "type": "function"
      },
      "starkware.cairo.common.math_cmp.is_le.Args": {
        "full_name": "starkware.cairo.common.math_cmp.is_le.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          },
          "b": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.math_cmp.is_le.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math_cmp.is_le.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math_cmp.is_le.Return": {
        "cairo_type": "felt",
        "type": "type_definition"
      },
      "starkware.cairo.common.math_cmp.is_le.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math_cmp.is_nn": {
        "decorators": ["known_ap_change"],
        "pc": 163,
        "type": "function"
      },
      "starkware.cairo.common.math_cmp.is_nn.Args": {
        "full_name": "starkware.cairo.common.math_cmp.is_nn.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math_cmp.is_nn.Return": {
        "cairo_type": "felt",
        "type": "type_definition"
      },
      "starkware.cairo.common.math_cmp.is_nn.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math_cmp.is_nn.a": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math_cmp.is_nn.a",
        "references": [
          {
            "ap_tracking_data": {
              "group": 13,
              "offset": 0
            },
            "pc": 163,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math_cmp.is_nn.need_felt_comparison": {
        "pc": 187,
        "type": "label"
      },
      "starkware.cairo.common.math_cmp.is_nn.out_of_range": {
        "pc": 173,
        "type": "label"
      },
      "starkware.cairo.common.pow.assert_le": {
        "destination": "starkware.cairo.common.math.assert_le",
        "type": "alias"
      },
      "starkware.cairo.common.pow.get_ap": {
        "destination": "starkware.cairo.common.registers.get_ap",
        "type": "alias"
      },
      "starkware.cairo.common.pow.get_fp_and_pc": {
        "destination": "starkware.cairo.common.registers.get_fp_and_pc",
        "type": "alias"
      },
      "starkware.cairo.common.registers.get_ap": {
        "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
        "type": "alias"
      },
      "starkware.cairo.common.registers.get_fp_and_pc": {
        "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.ALL_ONES": {
        "type": "const",
        "value": 340282366920938463463374607431768211455
      },
      "starkware.cairo.common.uint256.BitwiseBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.HALF_SHIFT": {
        "type": "const",
        "value": 18446744073709551616
      },
      "starkware.cairo.common.uint256.SHIFT": {
        "type": "const",
        "value": 340282366920938463463374607431768211456
      },
      "starkware.cairo.common.uint256.Uint256": {
        "full_name": "starkware.cairo.common.uint256.Uint256",
        "members": {
          "high": {
            "cairo_type": "felt",
            "offset": 1
          },
          "low": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.assert_in_range": {
        "destination": "starkware.cairo.common.math.assert_in_range",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.assert_le": {
        "destination": "starkware.cairo.common.math.assert_le",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.assert_nn_le": {
        "destination": "starkware.cairo.common.math.assert_nn_le",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.assert_not_zero": {
        "destination": "starkware.cairo.common.math.assert_not_zero",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.bitwise_and": {
        "destination": "starkware.cairo.common.bitwise.bitwise_and",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.bitwise_or": {
        "destination": "starkware.cairo.common.bitwise.bitwise_or",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.bitwise_xor": {
        "destination": "starkware.cairo.common.bitwise.bitwise_xor",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.get_ap": {
        "destination": "starkware.cairo.common.registers.get_ap",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.get_fp_and_pc": {
        "destination": "starkware.cairo.common.registers.get_fp_and_pc",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.is_le": {
        "destination": "starkware.cairo.common.math_cmp.is_le",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.pow": {
        "destination": "starkware.cairo.common.pow.pow",
        "type": "alias"
      },
      "starkware.cairo.common.uint256.uint256_add": {
        "decorators": [],
        "pc": 206,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_add.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_add.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_add.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_add.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_add.Return": {
        "cairo_type": "(res: starkware.cairo.common.uint256.Uint256, carry: felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_add.SIZEOF_LOCALS": {
        "type": "const",
        "value": 4
      },
      "starkware.cairo.common.uint256.uint256_add.a": {
        "cairo_type": "starkware.cairo.common.uint256.Uint256",
        "full_name": "starkware.cairo.common.uint256.uint256_add.a",
        "references": [
          {
            "ap_tracking_data": {
              "group": 16,
              "offset": 0
            },
            "pc": 206,
            "value": "[cast(fp + (-6), starkware.cairo.common.uint256.Uint256*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.uint256.uint256_add.b": {
        "cairo_type": "starkware.cairo.common.uint256.Uint256",
        "full_name": "starkware.cairo.common.uint256.uint256_add.b",
        "references": [
          {
            "ap_tracking_data": {
              "group": 16,
              "offset": 0
            },
            "pc": 206,
            "value": "[cast(fp + (-4), starkware.cairo.common.uint256.Uint256*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.uint256.uint256_add.carry_high": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.uint256.uint256_add.carry_high",
        "references": [
          {
            "ap_tracking_data": {
              "group": 16,
              "offset": 4
            },
            "pc": 208,
            "value": "[cast(fp + 3, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.uint256.uint256_add.carry_low": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.uint256.uint256_add.carry_low",
        "references": [
          {
            "ap_tracking_data": {
              "group": 16,
              "offset": 4
            },
            "pc": 208,
            "value": "[cast(fp + 2, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.uint256.uint256_check": {
        "decorators": [],
        "pc": 201,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_check.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_check.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_check.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_check.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_check.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_check.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.uint256.uint256_le": {
        "decorators": [],
        "pc": 245,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_le.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_le.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_le.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_le.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_le.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_le.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.uint256.uint256_lt": {
        "decorators": [],
        "pc": 228,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_lt.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_lt.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_lt.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_lt.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_lt.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_lt.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.uint256.uint256_neg": {
        "decorators": [],
        "pc": 265,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_neg.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_neg.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_neg.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_neg.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_neg.Return": {
        "cairo_type": "(res: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_neg.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.uint256.uint256_not": {
        "decorators": [],
        "pc": 257,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_not.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_not.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_not.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_not.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_not.Return": {
        "cairo_type": "(res: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_not.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.uint256.uint256_sub": {
        "decorators": [],
        "pc": 280,
        "type": "function"
      },
      "starkware.cairo.common.uint256.uint256_sub.Args": {
        "full_name": "starkware.cairo.common.uint256.uint256_sub.Args",
        "members": {
          "a": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 0
          },
          "b": {
            "cairo_type": "starkware.cairo.common.uint256.Uint256",
            "offset": 2
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_sub.ImplicitArgs": {
        "full_name": "starkware.cairo.common.uint256.uint256_sub.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.uint256.uint256_sub.Return": {
        "cairo_type": "(res: starkware.cairo.common.uint256.Uint256)",
        "type": "type_definition"
      },
      "starkware.cairo.common.uint256.uint256_sub.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.storage.ADDR_BOUND": {
        "type": "const",
        "value": -106710729501573572985208420194530329073740042555888586719489
      },
      "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
        "type": "const",
        "value": 256
      },
      "starkware.starknet.common.storage.assert_250_bit": {
        "destination": "starkware.cairo.common.math.assert_250_bit",
        "type": "alias"
      },
      "starkware.starknet.common.storage.normalize_address": {
        "decorators": ["known_ap_change"],
        "pc": 90,
        "type": "function"
      },
      "starkware.starknet.common.storage.normalize_address.Args": {
        "full_name": "starkware.starknet.common.storage.normalize_address.Args",
        "members": {
          "addr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.storage.normalize_address.ImplicitArgs": {
        "full_name": "starkware.starknet.common.storage.normalize_address.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.storage.normalize_address.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.storage.normalize_address.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.storage.normalize_address.addr": {
        "cairo_type": "felt",
        "full_name": "starkware.starknet.common.storage.normalize_address.addr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 8,
              "offset": 0
            },
            "pc": 90,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.storage.normalize_address.is_250": {
        "cairo_type": "felt",
        "full_name": "starkware.starknet.common.storage.normalize_address.is_250",
        "references": [
          {
            "ap_tracking_data": {
              "group": 8,
              "offset": 2
            },
            "pc": 110,
            "value": "[cast(ap + (-1), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.storage.normalize_address.is_small": {
        "cairo_type": "felt",
        "full_name": "starkware.starknet.common.storage.normalize_address.is_small",
        "references": [
          {
            "ap_tracking_data": {
              "group": 8,
              "offset": 1
            },
            "pc": 92,
            "value": "[cast(ap + (-1), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
        "type": "const",
        "value": 20853273475220472486191784820
      },
      "starkware.starknet.common.syscalls.CallContract": {
        "full_name": "starkware.starknet.common.syscalls.CallContract",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
            "offset": 5
          }
        },
        "size": 7,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.CallContractRequest": {
        "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
        "members": {
          "calldata": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "calldata_size": {
            "cairo_type": "felt",
            "offset": 3
          },
          "contract_address": {
            "cairo_type": "felt",
            "offset": 1
          },
          "function_selector": {
            "cairo_type": "felt",
            "offset": 2
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 5,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.CallContractResponse": {
        "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
        "members": {
          "retdata": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "retdata_size": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
        "type": "const",
        "value": 21167594061783206823196716140
      },
      "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
        "type": "const",
        "value": 23274015802972845247556842986379118667122
      },
      "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
        "type": "const",
        "value": 75202468540281
      },
      "starkware.starknet.common.syscalls.Deploy": {
        "full_name": "starkware.starknet.common.syscalls.Deploy",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.DeployRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.DeployResponse",
            "offset": 6
          }
        },
        "size": 9,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DeployRequest": {
        "full_name": "starkware.starknet.common.syscalls.DeployRequest",
        "members": {
          "class_hash": {
            "cairo_type": "felt",
            "offset": 1
          },
          "constructor_calldata": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "constructor_calldata_size": {
            "cairo_type": "felt",
            "offset": 3
          },
          "contract_address_salt": {
            "cairo_type": "felt",
            "offset": 2
          },
          "deploy_from_zero": {
            "cairo_type": "felt",
            "offset": 5
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 6,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DeployResponse": {
        "full_name": "starkware.starknet.common.syscalls.DeployResponse",
        "members": {
          "constructor_retdata": {
            "cairo_type": "felt*",
            "offset": 2
          },
          "constructor_retdata_size": {
            "cairo_type": "felt",
            "offset": 1
          },
          "contract_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DictAccess": {
        "destination": "starkware.cairo.common.dict_access.DictAccess",
        "type": "alias"
      },
      "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
        "type": "const",
        "value": 1280709301550335749748
      },
      "starkware.starknet.common.syscalls.EmitEvent": {
        "full_name": "starkware.starknet.common.syscalls.EmitEvent",
        "members": {
          "data": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 3
          },
          "keys": {
            "cairo_type": "felt*",
            "offset": 2
          },
          "keys_len": {
            "cairo_type": "felt",
            "offset": 1
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 5,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
        "type": "const",
        "value": 1448089106835523001438702345020786
      },
      "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
        "type": "const",
        "value": 24294903732626645868215235778792757751152
      },
      "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
        "type": "const",
        "value": 94901967781393078444254803017658102643
      },
      "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
        "type": "const",
        "value": 6219495360805491471215297013070624192820083
      },
      "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
        "type": "const",
        "value": 1592190833581991703053805829594610833820054387
      },
      "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
        "type": "const",
        "value": 1317029390204112103023
      },
      "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
        "type": "const",
        "value": 1448089128652340074717162277007973
      },
      "starkware.starknet.common.syscalls.GetBlockNumber": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
        "members": {
          "block_number": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockTimestamp": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
        "members": {
          "block_timestamp": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetCallerAddress": {
        "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
        "members": {
          "caller_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetContractAddress": {
        "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetContractAddressRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetContractAddressResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
        "members": {
          "contract_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetSequencerAddress": {
        "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
        "members": {
          "sequencer_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxInfo": {
        "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxInfoRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxInfoResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
        "members": {
          "tx_info": {
            "cairo_type": "starkware.starknet.common.syscalls.TxInfo*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxSignature": {
        "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
        "members": {
          "signature": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "signature_len": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
        "type": "const",
        "value": 436233452754198157705746250789557519228244616562
      },
      "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
        "type": "const",
        "value": 92376026794327011772951660
      },
      "starkware.starknet.common.syscalls.LibraryCall": {
        "full_name": "starkware.starknet.common.syscalls.LibraryCall",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
            "offset": 5
          }
        },
        "size": 7,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.LibraryCallRequest": {
        "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
        "members": {
          "calldata": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "calldata_size": {
            "cairo_type": "felt",
            "offset": 3
          },
          "class_hash": {
            "cairo_type": "felt",
            "offset": 1
          },
          "function_selector": {
            "cairo_type": "felt",
            "offset": 2
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 5,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
        "type": "const",
        "value": 433017908768303439907196859243777073
      },
      "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
        "type": "const",
        "value": 100890693370601760042082660
      },
      "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
        "type": "const",
        "value": 25828017502874050592466629733
      },
      "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
        "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
        "members": {
          "payload_ptr": {
            "cairo_type": "felt*",
            "offset": 3
          },
          "payload_size": {
            "cairo_type": "felt",
            "offset": 2
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to_address": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageRead": {
        "full_name": "starkware.starknet.common.syscalls.StorageRead",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageReadRequest": {
        "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
        "members": {
          "address": {
            "cairo_type": "felt",
            "offset": 1
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageReadResponse": {
        "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageWrite": {
        "full_name": "starkware.starknet.common.syscalls.StorageWrite",
        "members": {
          "address": {
            "cairo_type": "felt",
            "offset": 1
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.TxInfo": {
        "full_name": "starkware.starknet.common.syscalls.TxInfo",
        "members": {
          "account_contract_address": {
            "cairo_type": "felt",
            "offset": 1
          },
          "chain_id": {
            "cairo_type": "felt",
            "offset": 6
          },
          "max_fee": {
            "cairo_type": "felt",
            "offset": 2
          },
          "nonce": {
            "cairo_type": "felt",
            "offset": 7
          },
          "signature": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "signature_len": {
            "cairo_type": "felt",
            "offset": 3
          },
          "transaction_hash": {
            "cairo_type": "felt",
            "offset": 5
          },
          "version": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 8,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.emit_event": {
        "decorators": [],
        "pc": 153,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.emit_event.Args": {
        "full_name": "starkware.starknet.common.syscalls.emit_event.Args",
        "members": {
          "data": {
            "cairo_type": "felt*",
            "offset": 3
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 2
          },
          "keys": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "keys_len": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.emit_event.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.emit_event.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.emit_event.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.emit_event.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.emit_event.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.emit_event.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 12,
              "offset": 0
            },
            "pc": 153,
            "value": "[cast(fp + (-7), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 12,
              "offset": 1
            },
            "pc": 160,
            "value": "cast([fp + (-7)] + 5, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.get_caller_address": {
        "decorators": [],
        "pc": 130,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.get_caller_address.Args": {
        "full_name": "starkware.starknet.common.syscalls.get_caller_address.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_caller_address.Return": {
        "cairo_type": "(caller_address: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.get_caller_address.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 9,
              "offset": 0
            },
            "pc": 130,
            "value": "[cast(fp + (-3), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 9,
              "offset": 1
            },
            "pc": 133,
            "value": "cast([fp + (-3)] + 2, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.storage_read": {
        "decorators": [],
        "pc": 137,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.storage_read.Args": {
        "full_name": "starkware.starknet.common.syscalls.storage_read.Args",
        "members": {
          "address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_read.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.storage_read.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_read.Return": {
        "cairo_type": "(value: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.storage_read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.storage_read.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.storage_read.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 10,
              "offset": 0
            },
            "pc": 137,
            "value": "[cast(fp + (-4), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 10,
              "offset": 1
            },
            "pc": 141,
            "value": "cast([fp + (-4)] + 3, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.storage_write": {
        "decorators": [],
        "pc": 145,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.storage_write.Args": {
        "full_name": "starkware.starknet.common.syscalls.storage_write.Args",
        "members": {
          "address": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_write.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.storage_write.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.storage_write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.storage_write.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.storage_write.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 11,
              "offset": 0
            },
            "pc": 145,
            "value": "[cast(fp + (-5), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 11,
              "offset": 1
            },
            "pc": 150,
            "value": "cast([fp + (-5)] + 3, felt*)"
          }
        ],
        "type": "reference"
      }
    },
    "main_scope": "__main__",
    "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
    "reference_manager": {
      "references": [
        {
          "ap_tracking_data": {
            "group": 2,
            "offset": 0
          },
          "pc": 9,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 3,
            "offset": 0
          },
          "pc": 14,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 6,
            "offset": 0
          },
          "pc": 32,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 6,
            "offset": 0
          },
          "pc": 32,
          "value": "[cast([fp + (-4)], felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 6,
            "offset": 0
          },
          "pc": 32,
          "value": "[cast([fp + (-4)] + 1, felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 7,
            "offset": 0
          },
          "pc": 45,
          "value": "[cast(fp + (-4), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 7,
            "offset": 0
          },
          "pc": 45,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 7,
            "offset": 0
          },
          "pc": 45,
          "value": "[cast(fp + (-5), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 8,
            "offset": 0
          },
          "pc": 90,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 8,
            "offset": 1
          },
          "pc": 92,
          "value": "[cast(ap + (-1), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 8,
            "offset": 2
          },
          "pc": 110,
          "value": "[cast(ap + (-1), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 9,
            "offset": 0
          },
          "pc": 130,
          "value": "[cast(fp + (-3), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 10,
            "offset": 0
          },
          "pc": 137,
          "value": "[cast(fp + (-4), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 11,
            "offset": 0
          },
          "pc": 145,
          "value": "[cast(fp + (-5), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 12,
            "offset": 0
          },
          "pc": 153,
          "value": "[cast(fp + (-7), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 13,
            "offset": 0
          },
          "pc": 163,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 16,
            "offset": 0
          },
          "pc": 206,
          "value": "[cast(fp + (-6), starkware.cairo.common.uint256.Uint256*)]"
        },
        {
          "ap_tracking_data": {
            "group": 16,
            "offset": 0
          },
          "pc": 206,
          "value": "[cast(fp + (-4), starkware.cairo.common.uint256.Uint256*)]"
        },
        {
          "ap_tracking_data": {
            "group": 16,
            "offset": 4
          },
          "pc": 208,
          "value": "[cast(fp + 2, felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 16,
            "offset": 4
          },
          "pc": 208,
          "value": "[cast(fp + 3, felt*)]"
        }
      ]
    }
  }
}
